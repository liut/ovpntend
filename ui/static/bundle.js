!function i(o,s,r){function a(n,e){if(!s[n]){if(!o[n]){var t="function"==typeof require&&require;if(!e&&t)return t(n,!0);if(l)return l(n,!0);e=new Error("Cannot find module '"+n+"'");throw e.code="MODULE_NOT_FOUND",e}t=s[n]={exports:{}};o[n][0].call(t.exports,function(e){var t=o[n][1][e];return a(t||e)},t,t.exports,i,o,s,r)}return s[n].exports}for(var l="function"==typeof require&&require,e=0;e<r.length;e++)a(r[e]);return a}({1:[function(e,t,n){var s=e("jquery");window.jQuery=s,e("bootstrap"),e("bootstrap-select"),e("basil.js/build/basil.js"),e("bootstrap-validator"),s(function(){return s(".j-select").selectpicker()}),s(function(){var e,t,n,i=new window.Basil,o=s(".j-submit");if(o.data("value",o.val()),e=i.get("counter")||0,t=function(){return 0<=e?(o.val(o.data("value")+" ("+e+")"),o.addClass("disabled")):(o.val(o.data("value")),o.removeClass("disabled")),e--,i.set("counter",e)},n=function(){return t(),setInterval(t,1e3)},0<e&&n(),0<s('.j-flashed-message[data-category="success"]').length)return e=60,i.set("counter",e),n()}),s(function(){return s("#form1").validator().on("submit",function(e){var t;return e.isDefaultPrevented()?console.log(e):(t={name:s("#emailName").val(),host:s("#emailHost").val(),oscat:s("input[name=oscat]:checked").val()},s.post(e.target.action,t,function(e){return console.log(e),alert("ok! please checke your email.")})),!1})})},{"basil.js/build/basil.js":2,bootstrap:5,"bootstrap-select":3,"bootstrap-validator":4,jquery:18}],2:[function(e,t,n){function i(e){return(new i.Storage).init(e)}Object.extend=function(){for(var e="object"==typeof arguments[0]?arguments[0]:{},t=1;t<arguments.length;t++)if(arguments[t]&&"object"==typeof arguments[t])for(var n in arguments[t])e[n]=arguments[t][n];return e},i.version="0.3.0",i.options=Object.extend({namespace:"b45i1",storage:null,storages:["local","cookie","session","memory"],expireDays:365},window.Basil?window.Basil.options:{}),i.Storage=function(){function r(e){return e?"[object Array]"===Object.prototype.toString.call(e)?e:[e]:null}function a(e,t){var n="";if("string"==typeof t)n=e+":"+t;else if(t instanceof Array)for(var n=e,i=0;i<t.length;i++)t[i]&&(n+=":"+t[i]);return n}var e="b45i1"+(Math.random()+1).toString(36).substring(7),l={};return l.local={engine:window.localStorage,check:function(){try{this.engine.setItem(e,!0),this.engine.removeItem(e)}catch(e){return!1}return!0},set:function(e,t,n){e&&this.engine.setItem(e,t)},get:function(e){return this.engine.getItem(e)},remove:function(e){this.engine.removeItem(e)},reset:function(){for(var e,t=0;t<this.engine.length;t++)0===(e=this.engine.key(t)).indexOf(this.options.namespace)&&this.remove(e)}},l.session=Object.extend({},l.local,{engine:window.sessionStorage}),l.memory={_hash:{},check:function(){return!0},set:function(e,t,n){e&&(this._hash[e]=t)},get:function(e){return this._hash[e]||null},remove:function(e){delete this._hash[e]},reset:function(){for(var e in this._hash)0===e.indexOf(this.options.namespace)&&this.remove(e)}},l.cookie={check:function(){return navigator.cookieEnabled},set:function(e,t,n){e&&(e=e+"="+t,(n=n||{}).expireDays&&((t=new Date).setTime(t.getTime()+24*n.expireDays*60*60*1e3),e+="; expires="+t.toGMTString()),n.domain&&(e+="; domain="+n.domain),document.cookie=e+"; path=/")},get:function(e){for(var t=document.cookie.split(";"),n=0;n<t.length;n++){var i=t[n].replace(/^\s*/,"");if(0===i.indexOf(e+"="))return i.substring(e.length+1,i.length)}return null},remove:function(e){if(e){this.set(e,"",{expireDays:-1});for(var t=document.domain.split("."),n=t.length-1;0<n;n--)this.set(e,"",{expireDays:-1,domain:"."+t.slice(-n).join(".")})}},reset:function(){for(var e=document.cookie.split(";"),t=0;t<e.length;t++){var n=e[t].replace(/^\s*/,""),n=n.substr(0,n.indexOf("="));0===n.indexOf(this.options.namespace)&&this.remove(n)}}},{init:function(e){this.options=Object.extend({},i.options,e),this.supportedStorages={};for(var t,n=0;n<this.options.storages.length;n++)t=this.options.storages[n],l.hasOwnProperty(t)&&(this.supportedStorages[t]=l[t]);return this.defaultStorage=this.check(this.options.storage)?this.options.storage:this.detect(),this},detect:function(){for(var e in this.supportedStorages)if(this.check(e))return e;return null},check:function(e){return e=e||this.defaultStorage,!!this.supportedStorages.hasOwnProperty(e)&&this.supportedStorages[e].check()},set:function(e,t,n){if(e=a(this.options.namespace,e)){i=t,t=JSON.stringify(i),n=Object.extend({expireDays:this.options.expireDays},n);for(var i,o=r(n.storages)||[this.defaultStorage],s=0;s<o.length;s++)this.check(o[s])&&l[o[s]].set(e,t,n)}},get:function(e,t){if(!(e=a(this.options.namespace,e)))return null;for(var n,i=null,o=r((t=t||{}).storages)||[this.defaultStorage],s=0;null===i&&s<o.length;s++)this.check(o[s])&&(n=l[o[s]].get(e),i=JSON.parse(n));return i},remove:function(e,t){if(!(e=a(this.options.namespace,e)))return null;for(var n=r((t=t||{}).storages)||[this.defaultStorage],i=0;i<n.length;i++)this.check(n[i])&&l[n[i]].remove(e)},reset:function(e){for(var t=r((e=e||{}).storages)||[this.defaultStorage],n=0;n<t.length;n++)this.check(t[n])&&l[t[n]].reset()},cookie:l.cookie,localStorage:l.local,sessionStorage:l.session}},window.Basil=i},{}],3:[function(e,t,n){var i,o;o=function(e){!function(w){"use strict";var R=["sanitize","whiteList","sanitizeFn"],z=["background","cite","href","itemtype","longdesc","poster","src","xlink:href"],P={"*":["class","dir","id","lang","role","tabindex","style",/^aria-[\w-]*$/i],a:["target","href","title","rel"],area:[],b:[],br:[],col:[],code:[],div:[],em:[],hr:[],h1:[],h2:[],h3:[],h4:[],h5:[],h6:[],i:[],img:["src","alt","title","width","height"],li:[],ol:[],p:[],pre:[],s:[],small:[],span:[],sub:[],sup:[],strong:[],u:[],ul:[]},W=/^(?:(?:https?|mailto|ftp|tel|file):|[^&:/?#]*(?:[/?#]|$))/gi,M=/^data:(?:image\/(?:bmp|gif|jpeg|jpg|png|tiff|webp)|video\/(?:mpeg|mp4|ogg|webm)|audio\/(?:mp3|oga|ogg|opus));base64,[a-z0-9+/]+=*$/i;function E(e,t,n){if(n&&"function"==typeof n)return n(e);for(var i=Object.keys(t),o=0,s=e.length;o<s;o++)for(var r=e[o].querySelectorAll("*"),a=0,l=r.length;a<l;a++){var c=r[a],u=c.nodeName.toLowerCase();if(-1===i.indexOf(u))c.parentNode.removeChild(c);else for(var d=[].slice.call(c.attributes),p=[].concat(t["*"]||[],t[u]||[]),h=0,f=d.length;h<f;h++){var m=d[h];!function(e,t){var n=e.nodeName.toLowerCase();if(-1!==w.inArray(n,t))return-1===w.inArray(n,z)||Boolean(e.nodeValue.match(W)||e.nodeValue.match(M));for(var i=w(t).filter(function(e,t){return t instanceof RegExp}),o=0,s=i.length;o<s;o++)if(n.match(i[o]))return 1}(m,p)&&c.removeAttribute(m.nodeName)}}}if(!("classList"in document.createElement("_"))&&"Element"in(n=window)){var t="classList",e="prototype",n=n.Element[e],i=Object,o=function(){var n=w(this);return{add:function(e){return e=Array.prototype.slice.call(arguments).join(" "),n.addClass(e)},remove:function(e){return e=Array.prototype.slice.call(arguments).join(" "),n.removeClass(e)},toggle:function(e,t){return n.toggleClass(e,t)},contains:function(e){return n.hasClass(e)}}};if(i.defineProperty){var s={get:o,enumerable:!0,configurable:!0};try{i.defineProperty(n,t,s)}catch(e){void 0!==e.number&&-2146823252!==e.number||(s.enumerable=!1,i.defineProperty(n,t,s))}}else i[e].__defineGetter__&&n.__defineGetter__(t,o)}var r,a,l,c,s=document.createElement("_");function u(e){if(null==this)throw new TypeError;var t=String(this);if(e&&"[object RegExp]"==c.call(e))throw new TypeError;var n=t.length,i=String(e),o=i.length,e=1<arguments.length?arguments[1]:void 0,e=e?Number(e):0,s=(e!=e&&(e=0),Math.min(Math.max(e,0),n));if(n<o+s)return!1;for(var r=-1;++r<o;)if(t.charCodeAt(s+r)!=i.charCodeAt(r))return!1;return!0}function x(e,t){var n,i=e.selectedOptions,o=[];if(t){for(var s=0,r=i.length;s<r;s++)(n=i[s]).disabled||"OPTGROUP"===n.parentNode.tagName&&n.parentNode.disabled||o.push(n);return o}return i}function T(e,t){for(var n,i=[],o=t||e.selectedOptions,s=0,r=o.length;s<r;s++)(n=o[s]).disabled||"OPTGROUP"===n.parentNode.tagName&&n.parentNode.disabled||i.push(n.value);return e.multiple?i:i.length?i[0]:null}s.classList.add("c1","c2"),s.classList.contains("c2")||(r=DOMTokenList.prototype.add,a=DOMTokenList.prototype.remove,DOMTokenList.prototype.add=function(){Array.prototype.forEach.call(arguments,r.bind(this))},DOMTokenList.prototype.remove=function(){Array.prototype.forEach.call(arguments,a.bind(this))}),s.classList.toggle("c3",!1),s.classList.contains("c3")&&(l=DOMTokenList.prototype.toggle,DOMTokenList.prototype.toggle=function(e,t){return 1 in arguments&&!this.contains(e)==!t?t:l.call(this,e)}),s=null,String.prototype.startsWith||(i=function(){try{var e={},t=Object.defineProperty,n=t(e,e,e)&&t}catch(e){}return n}(),c={}.toString,i?i(String.prototype,"startsWith",{value:u,configurable:!0,writable:!0}):String.prototype.startsWith=u),Object.keys||(Object.keys=function(e,t,n){for(t in n=[],e)n.hasOwnProperty.call(e,t)&&n.push(t);return n}),HTMLSelectElement&&!HTMLSelectElement.prototype.hasOwnProperty("selectedOptions")&&Object.defineProperty(HTMLSelectElement.prototype,"selectedOptions",{get:function(){return this.querySelectorAll(":checked")}});var d={useDefault:!1,_set:w.valHooks.select.set},k=(w.valHooks.select.set=function(e,t){return t&&!d.useDefault&&w(e).data("selected",!0),d._set.apply(this,arguments)},null),F=function(){try{return new Event("change"),!0}catch(e){return!1}}();function y(e,t,n,i){for(var o=["display","subtext","tokens"],s=!1,r=0;r<o.length;r++){var a=o[r],l=e[a];if(l&&(l=l.toString(),"display"===a&&(l=l.replace(/<[^>]+>/g,"")),l=(l=i?h(l):l).toUpperCase(),s="contains"===n?0<=l.indexOf(t):l.startsWith(t)))break}return s}function v(e){return parseInt(e,10)||0}w.fn.triggerNative=function(e){var t,n=this[0];n.dispatchEvent?(F?t=new Event(e,{bubbles:!0}):(t=document.createEvent("Event")).initEvent(e,!0,!1),n.dispatchEvent(t)):n.fireEvent?((t=document.createEventObject()).eventType=e,n.fireEvent("on"+e,t)):this.trigger(e)};var q={"À":"A","Á":"A","Â":"A","Ã":"A","Ä":"A","Å":"A","à":"a","á":"a","â":"a","ã":"a","ä":"a","å":"a","Ç":"C","ç":"c","Ð":"D","ð":"d","È":"E","É":"E","Ê":"E","Ë":"E","è":"e","é":"e","ê":"e","ë":"e","Ì":"I","Í":"I","Î":"I","Ï":"I","ì":"i","í":"i","î":"i","ï":"i","Ñ":"N","ñ":"n","Ò":"O","Ó":"O","Ô":"O","Õ":"O","Ö":"O","Ø":"O","ò":"o","ó":"o","ô":"o","õ":"o","ö":"o","ø":"o","Ù":"U","Ú":"U","Û":"U","Ü":"U","ù":"u","ú":"u","û":"u","ü":"u","Ý":"Y","ý":"y","ÿ":"y","Æ":"Ae","æ":"ae","Þ":"Th","þ":"th","ß":"ss","Ā":"A","Ă":"A","Ą":"A","ā":"a","ă":"a","ą":"a","Ć":"C","Ĉ":"C","Ċ":"C","Č":"C","ć":"c","ĉ":"c","ċ":"c","č":"c","Ď":"D","Đ":"D","ď":"d","đ":"d","Ē":"E","Ĕ":"E","Ė":"E","Ę":"E","Ě":"E","ē":"e","ĕ":"e","ė":"e","ę":"e","ě":"e","Ĝ":"G","Ğ":"G","Ġ":"G","Ģ":"G","ĝ":"g","ğ":"g","ġ":"g","ģ":"g","Ĥ":"H","Ħ":"H","ĥ":"h","ħ":"h","Ĩ":"I","Ī":"I","Ĭ":"I","Į":"I","İ":"I","ĩ":"i","ī":"i","ĭ":"i","į":"i","ı":"i","Ĵ":"J","ĵ":"j","Ķ":"K","ķ":"k","ĸ":"k","Ĺ":"L","Ļ":"L","Ľ":"L","Ŀ":"L","Ł":"L","ĺ":"l","ļ":"l","ľ":"l","ŀ":"l","ł":"l","Ń":"N","Ņ":"N","Ň":"N","Ŋ":"N","ń":"n","ņ":"n","ň":"n","ŋ":"n","Ō":"O","Ŏ":"O","Ő":"O","ō":"o","ŏ":"o","ő":"o","Ŕ":"R","Ŗ":"R","Ř":"R","ŕ":"r","ŗ":"r","ř":"r","Ś":"S","Ŝ":"S","Ş":"S","Š":"S","ś":"s","ŝ":"s","ş":"s","š":"s","Ţ":"T","Ť":"T","Ŧ":"T","ţ":"t","ť":"t","ŧ":"t","Ũ":"U","Ū":"U","Ŭ":"U","Ů":"U","Ű":"U","Ų":"U","ũ":"u","ū":"u","ŭ":"u","ů":"u","ű":"u","ų":"u","Ŵ":"W","ŵ":"w","Ŷ":"Y","ŷ":"y","Ÿ":"Y","Ź":"Z","Ż":"Z","Ž":"Z","ź":"z","ż":"z","ž":"z","Ĳ":"IJ","ĳ":"ij","Œ":"Oe","œ":"oe","ŉ":"'n","ſ":"s"},B=/[\xc0-\xd6\xd8-\xf6\xf8-\xff\u0100-\u017f]/g,U=RegExp("[\\u0300-\\u036f\\ufe20-\\ufe2f\\u20d0-\\u20ff\\u1ab0-\\u1aff\\u1dc0-\\u1dff]","g");function _(e){return q[e]}function h(e){return(e=e.toString())&&e.replace(B,_).replace(U,"")}p={"&":"&amp;","<":"&lt;",">":"&gt;",'"':"&quot;","'":"&#x27;","`":"&#x60;"},e="(?:"+Object.keys(p).join("|")+")",f=RegExp(e),m=RegExp(e,"g");var p,f,m,C=function(e){return f.test(e=null==e?"":""+e)?e.replace(m,V):e};function V(e){return p[e]}var G={32:" ",48:"0",49:"1",50:"2",51:"3",52:"4",53:"5",54:"6",55:"7",56:"8",57:"9",59:";",65:"A",66:"B",67:"C",68:"D",69:"E",70:"F",71:"G",72:"H",73:"I",74:"J",75:"K",76:"L",77:"M",78:"N",79:"O",80:"P",81:"Q",82:"R",83:"S",84:"T",85:"U",86:"V",87:"W",88:"X",89:"Y",90:"Z",96:"0",97:"1",98:"2",99:"3",100:"4",101:"5",102:"6",103:"7",104:"8",105:"9"},b=27,X=13,$=32,S=9,I=38,N=40,D={success:!1,major:"3"};try{D.full=(w.fn.dropdown.Constructor.VERSION||"").split(" ")[0].split("."),D.major=D.full[0],D.success=!0}catch(e){}var g=0,A=".bs.select",O={DISABLED:"disabled",DIVIDER:"divider",SHOW:"open",DROPUP:"dropup",MENU:"dropdown-menu",MENURIGHT:"dropdown-menu-right",MENULEFT:"dropdown-menu-left",BUTTONCLASS:"btn-default",POPOVERHEADER:"popover-title",ICONBASE:"glyphicon",TICKICON:"glyphicon-ok"},Q={MENU:"."+O.MENU},j={div:document.createElement("div"),span:document.createElement("span"),i:document.createElement("i"),subtext:document.createElement("small"),a:document.createElement("a"),li:document.createElement("li"),whitespace:document.createTextNode(" "),fragment:document.createDocumentFragment()},K=(j.noResults=j.li.cloneNode(!1),j.noResults.className="no-results",j.a.setAttribute("role","option"),j.a.className="dropdown-item",j.subtext.className="text-muted",j.text=j.span.cloneNode(!1),j.text.className="text",j.checkMark=j.span.cloneNode(!1),new RegExp(I+"|"+N)),Y=new RegExp("^"+S+"$|"+b),L={li:function(e,t,n){var i=j.li.cloneNode(!1);return e&&(1===e.nodeType||11===e.nodeType?i.appendChild(e):i.innerHTML=e),void 0!==t&&""!==t&&(i.className=t),null!=n&&i.classList.add("optgroup-"+n),i},a:function(e,t,n){var i=j.a.cloneNode(!0);return e&&(11===e.nodeType?i.appendChild(e):i.insertAdjacentHTML("beforeend",e)),void 0!==t&&""!==t&&i.classList.add.apply(i.classList,t.split(/\s+/)),n&&i.setAttribute("style",n),i},text:function(e,t){var n,i,o=j.text.cloneNode(!1);if(e.content?o.innerHTML=e.content:(o.textContent=e.text,e.icon&&(n=j.whitespace.cloneNode(!1),(i=(!0===t?j.i:j.span).cloneNode(!1)).className=this.options.iconBase+" "+e.icon,j.fragment.appendChild(i),j.fragment.appendChild(n)),e.subtext&&((i=j.subtext.cloneNode(!1)).textContent=e.subtext,o.appendChild(i))),!0===t)for(;0<o.childNodes.length;)j.fragment.appendChild(o.childNodes[0]);else j.fragment.appendChild(o);return j.fragment},label:function(e){var t,n,i=j.text.cloneNode(!1);return i.innerHTML=e.display,e.icon&&(t=j.whitespace.cloneNode(!1),(n=j.span.cloneNode(!1)).className=this.options.iconBase+" "+e.icon,j.fragment.appendChild(n),j.fragment.appendChild(t)),e.subtext&&((n=j.subtext.cloneNode(!1)).textContent=e.subtext,i.appendChild(n)),j.fragment.appendChild(i),j.fragment}};function H(e,t){var n=this;d.useDefault||(w.valHooks.select.set=d._set,d.useDefault=!0),this.$element=w(e),this.$newElement=null,this.$button=null,this.$menu=null,this.options=t,this.selectpicker={main:{},search:{},current:{},view:{},isSearching:!1,keydown:{keyHistory:"",resetKeyHistory:{start:function(){return setTimeout(function(){n.selectpicker.keydown.keyHistory=""},800)}}}},this.sizeInfo={},null===this.options.title&&(this.options.title=this.$element.attr("title")),"number"==typeof(e=this.options.windowPadding)&&(this.options.windowPadding=[e,e,e,e]),this.val=H.prototype.val,this.render=H.prototype.render,this.refresh=H.prototype.refresh,this.setStyle=H.prototype.setStyle,this.selectAll=H.prototype.selectAll,this.deselectAll=H.prototype.deselectAll,this.destroy=H.prototype.destroy,this.remove=H.prototype.remove,this.show=H.prototype.show,this.hide=H.prototype.hide,this.init()}function J(e){var a,l=arguments,c=e;if([].shift.apply(l),!D.success){try{D.full=(w.fn.dropdown.Constructor.VERSION||"").split(" ")[0].split(".")}catch(e){H.BootstrapVersion?D.full=H.BootstrapVersion.split(" ")[0].split("."):(D.full=[D.major,"0","0"],console.warn("There was an issue retrieving Bootstrap's version. Ensure Bootstrap is being loaded before bootstrap-select and there is no namespace collision. If loading Bootstrap asynchronously, the version may need to be manually specified via $.fn.selectpicker.Constructor.BootstrapVersion.",e))}D.major=D.full[0],D.success=!0}if("4"===D.major){var t=[];H.DEFAULTS.style===O.BUTTONCLASS&&t.push({name:"style",className:"BUTTONCLASS"}),H.DEFAULTS.iconBase===O.ICONBASE&&t.push({name:"iconBase",className:"ICONBASE"}),H.DEFAULTS.tickIcon===O.TICKICON&&t.push({name:"tickIcon",className:"TICKICON"}),O.DIVIDER="dropdown-divider",O.SHOW="show",O.BUTTONCLASS="btn-light",O.POPOVERHEADER="popover-header",O.ICONBASE="",O.TICKICON="bs-ok-default";for(var n=0;n<t.length;n++){e=t[n];H.DEFAULTS[e.name]=O[e.className]}}var i=this.each(function(){var e=w(this);if(e.is("select")){var t=e.data("selectpicker"),n="object"==typeof c&&c;if(t){if(n)for(var i in n)Object.prototype.hasOwnProperty.call(n,i)&&(t.options[i]=n[i])}else{var o,s=e.data();for(o in s)Object.prototype.hasOwnProperty.call(s,o)&&-1!==w.inArray(o,R)&&delete s[o];var r=w.extend({},H.DEFAULTS,w.fn.selectpicker.defaults||{},s,n);r.template=w.extend({},H.DEFAULTS.template,w.fn.selectpicker.defaults?w.fn.selectpicker.defaults.template:{},s.template,n.template),e.data("selectpicker",t=new H(this,r))}"string"==typeof c&&(a=t[c]instanceof Function?t[c].apply(t,l):t.options[c])}});return void 0!==a?a:i}H.VERSION="1.13.18",H.DEFAULTS={noneSelectedText:"Nothing selected",noneResultsText:"No results matched {0}",countSelectedText:function(e,t){return 1==e?"{0} item selected":"{0} items selected"},maxOptionsText:function(e,t){return[1==e?"Limit reached ({n} item max)":"Limit reached ({n} items max)",1==t?"Group limit reached ({n} item max)":"Group limit reached ({n} items max)"]},selectAllText:"Select All",deselectAllText:"Deselect All",doneButton:!1,doneButtonText:"Close",multipleSeparator:", ",styleBase:"btn",style:O.BUTTONCLASS,size:"auto",title:null,selectedTextFormat:"values",width:!1,container:!1,hideDisabled:!1,showSubtext:!1,showIcon:!0,showContent:!0,dropupAuto:!0,header:!1,liveSearch:!1,liveSearchPlaceholder:null,liveSearchNormalize:!1,liveSearchStyle:"contains",actionsBox:!1,iconBase:O.ICONBASE,tickIcon:O.TICKICON,showTick:!1,template:{caret:'<span class="caret"></span>'},maxOptions:!1,mobile:!1,selectOnTab:!1,dropdownAlignRight:!1,windowPadding:0,virtualScroll:600,display:!1,sanitize:!0,sanitizeFn:null,whiteList:P},H.prototype={constructor:H,init:function(){var n=this,e=this.$element.attr("id"),t=this.$element[0],i=t.form;g++,this.selectId="bs-select-"+g,t.classList.add("bs-select-hidden"),this.multiple=this.$element.prop("multiple"),this.autofocus=this.$element.prop("autofocus"),t.classList.contains("show-tick")&&(this.options.showTick=!0),this.$newElement=this.createDropdown(),this.buildData(),this.$element.after(this.$newElement).prependTo(this.$newElement),i&&null===t.form&&(i.id||(i.id="form-"+this.selectId),t.setAttribute("form",i.id)),this.$button=this.$newElement.children("button"),this.$menu=this.$newElement.children(Q.MENU),this.$menuInner=this.$menu.children(".inner"),this.$searchbox=this.$menu.find("input"),t.classList.remove("bs-select-hidden"),!0===this.options.dropdownAlignRight&&this.$menu[0].classList.add(O.MENURIGHT),void 0!==e&&this.$button.attr("data-id",e),this.checkDisabled(),this.clickListener(),this.options.liveSearch?(this.liveSearchListener(),this.focusedParent=this.$searchbox[0]):this.focusedParent=this.$menuInner[0],this.setStyle(),this.render(),this.setWidth(),this.options.container?this.selectPosition():this.$element.on("hide"+A,function(){var e,t;n.isVirtual()&&(t=(e=n.$menuInner[0]).firstChild.cloneNode(!1),e.replaceChild(t,e.firstChild),e.scrollTop=0)}),this.$menu.data("this",this),this.$newElement.data("this",this),this.options.mobile&&this.mobile(),this.$newElement.on({"hide.bs.dropdown":function(e){n.$element.trigger("hide"+A,e)},"hidden.bs.dropdown":function(e){n.$element.trigger("hidden"+A,e)},"show.bs.dropdown":function(e){n.$element.trigger("show"+A,e)},"shown.bs.dropdown":function(e){n.$element.trigger("shown"+A,e)}}),t.hasAttribute("required")&&this.$element.on("invalid"+A,function(){n.$button[0].classList.add("bs-invalid"),n.$element.on("shown"+A+".invalid",function(){n.$element.val(n.$element.val()).off("shown"+A+".invalid")}).on("rendered"+A,function(){this.validity.valid&&n.$button[0].classList.remove("bs-invalid"),n.$element.off("rendered"+A)}),n.$button.on("blur"+A,function(){n.$element.trigger("focus").trigger("blur"),n.$button.off("blur"+A)})}),setTimeout(function(){n.buildList(),n.$element.trigger("loaded"+A)})},createDropdown:function(){var e=this.multiple||this.options.showTick?" show-tick":"",t=this.multiple?' aria-multiselectable="true"':"",n="",i=this.autofocus?" autofocus":"";D.major<4&&this.$element.parent().hasClass("input-group")&&(n=" input-group-btn");var o="",s="",r="",a="";return this.options.header&&(o='<div class="'+O.POPOVERHEADER+'"><button type="button" class="close" aria-hidden="true">&times;</button>'+this.options.header+"</div>"),this.options.liveSearch&&(s='<div class="bs-searchbox"><input type="search" class="form-control" autocomplete="off"'+(null===this.options.liveSearchPlaceholder?"":' placeholder="'+C(this.options.liveSearchPlaceholder)+'"')+' role="combobox" aria-label="Search" aria-controls="'+this.selectId+'" aria-autocomplete="list"></div>'),this.multiple&&this.options.actionsBox&&(r='<div class="bs-actionsbox"><div class="btn-group btn-group-sm btn-block"><button type="button" class="actions-btn bs-select-all btn '+O.BUTTONCLASS+'">'+this.options.selectAllText+'</button><button type="button" class="actions-btn bs-deselect-all btn '+O.BUTTONCLASS+'">'+this.options.deselectAllText+"</button></div></div>"),this.multiple&&this.options.doneButton&&(a='<div class="bs-donebutton"><div class="btn-group btn-block"><button type="button" class="btn btn-sm '+O.BUTTONCLASS+'">'+this.options.doneButtonText+"</button></div></div>"),e='<div class="dropdown bootstrap-select'+e+n+'"><button type="button" tabindex="-1" class="'+this.options.styleBase+' dropdown-toggle" '+("static"===this.options.display?'data-display="static"':"")+'data-toggle="dropdown"'+i+' role="combobox" aria-owns="'+this.selectId+'" aria-haspopup="listbox" aria-expanded="false"><div class="filter-option"><div class="filter-option-inner"><div class="filter-option-inner-inner"></div></div> </div>'+("4"===D.major?"":'<span class="bs-caret">'+this.options.template.caret+"</span>")+'</button><div class="'+O.MENU+" "+("4"===D.major?"":O.SHOW)+'">'+o+s+r+'<div class="inner '+O.SHOW+'" role="listbox" id="'+this.selectId+'" tabindex="-1" '+t+'><ul class="'+O.MENU+" inner "+("4"===D.major?O.SHOW:"")+'" role="presentation"></ul></div>'+a+"</div></div>",w(e)},setPositionData:function(){this.selectpicker.view.canHighlight=[],this.selectpicker.view.size=0,this.selectpicker.view.firstHighlightIndex=!1;for(var e=0;e<this.selectpicker.current.data.length;e++){var t=this.selectpicker.current.data[e],n=!0;"divider"===t.type?(n=!1,t.height=this.sizeInfo.dividerHeight):"optgroup-label"===t.type?(n=!1,t.height=this.sizeInfo.dropdownHeaderHeight):t.height=this.sizeInfo.liHeight,t.disabled&&(n=!1),this.selectpicker.view.canHighlight.push(n),n&&(this.selectpicker.view.size++,t.posinset=this.selectpicker.view.size,!1===this.selectpicker.view.firstHighlightIndex&&(this.selectpicker.view.firstHighlightIndex=e)),t.position=(0===e?0:this.selectpicker.current.data[e-1].position)+t.height}},isVirtual:function(){return!1!==this.options.virtualScroll&&this.selectpicker.main.elements.length>=this.options.virtualScroll||!0===this.options.virtualScroll},createView:function(T,e,t){var k,C,$=this,n=0,S=[];function i(e,t){var n,i=$.selectpicker.current.elements.length,o=[],s=!0,r=$.isVirtual();$.selectpicker.view.scrollTop=e;for(var a,l=Math.ceil($.sizeInfo.menuInnerHeight/$.sizeInfo.liHeight*1.5),c=Math.round(i/l)||1,u=0;u<c;u++){var d=u===c-1?i:(u+1)*l;if(o[u]=[u*l+(u?1:0),d],!i)break;void 0===n&&e-1<=$.selectpicker.current.data[d-1].position-$.sizeInfo.menuInnerHeight&&(n=u)}if(void 0===n&&(n=0),v=[$.selectpicker.view.position0,$.selectpicker.view.position1],p=Math.max(0,n-1),f=Math.min(c-1,n+1),$.selectpicker.view.position0=!1!==r&&Math.max(0,o[p][0])||0,$.selectpicker.view.position1=!1===r?i:Math.min(i,o[f][1])||0,p=v[0]!==$.selectpicker.view.position0||v[1]!==$.selectpicker.view.position1,void 0!==$.activeIndex&&(C=$.selectpicker.main.elements[$.prevActiveIndex],S=$.selectpicker.main.elements[$.activeIndex],k=$.selectpicker.main.elements[$.selectedIndex],t&&($.activeIndex!==$.selectedIndex&&$.defocusItem(S),$.activeIndex=void 0),$.activeIndex&&$.activeIndex!==$.selectedIndex&&$.defocusItem(k)),void 0!==$.prevActiveIndex&&$.prevActiveIndex!==$.activeIndex&&$.prevActiveIndex!==$.selectedIndex&&$.defocusItem(C),(t||p)&&(f=$.selectpicker.view.visibleElements?$.selectpicker.view.visibleElements.slice():[],$.selectpicker.view.visibleElements=!1===r?$.selectpicker.current.elements:$.selectpicker.current.elements.slice($.selectpicker.view.position0,$.selectpicker.view.position1),$.setOptionStatus(),(T||!1===r&&t)&&(v=f,a=$.selectpicker.view.visibleElements,s=!(v.length===a.length&&v.every(function(e,t){return e===a[t]}))),(t||!0===r)&&s)){var p=$.$menuInner[0],h=document.createDocumentFragment(),f=p.firstChild.cloneNode(!1),m=$.selectpicker.view.visibleElements,g=[];p.replaceChild(f,p.firstChild);for(var v,u=0,y=m.length;u<y;u++){var b,w,x=m[u];$.options.sanitize&&(b=x.lastChild)&&(w=$.selectpicker.current.data[u+$.selectpicker.view.position0])&&w.content&&!w.sanitized&&(g.push(b),w.sanitized=!0),h.appendChild(x)}$.options.sanitize&&g.length&&E(g,$.options.whiteList,$.options.sanitizeFn),!0===r?(v=0===$.selectpicker.view.position0?0:$.selectpicker.current.data[$.selectpicker.view.position0-1].position,s=$.selectpicker.view.position1>i-1?0:$.selectpicker.current.data[i-1].position-$.selectpicker.current.data[$.selectpicker.view.position1-1].position,p.firstChild.style.marginTop=v+"px",p.firstChild.style.marginBottom=s+"px"):(p.firstChild.style.marginTop=0,p.firstChild.style.marginBottom=0),p.firstChild.appendChild(h),!0===r&&$.sizeInfo.hasScrollBar&&(f=p.firstChild.offsetWidth,t&&f<$.sizeInfo.menuInnerInnerWidth&&$.sizeInfo.totalMenuWidth>$.sizeInfo.selectWidth?p.firstChild.style.minWidth=$.sizeInfo.menuInnerInnerWidth+"px":f>$.sizeInfo.menuInnerInnerWidth&&($.$menu[0].style.minWidth=0,(v=p.firstChild.offsetWidth)>$.sizeInfo.menuInnerInnerWidth&&($.sizeInfo.menuInnerInnerWidth=v,p.firstChild.style.minWidth=$.sizeInfo.menuInnerInnerWidth+"px"),$.$menu[0].style.minWidth=""))}$.prevActiveIndex=$.activeIndex,$.options.liveSearch?T&&t&&($.selectpicker.view.canHighlight[s=0]||(s=1+$.selectpicker.view.canHighlight.slice(1).indexOf(!0)),r=$.selectpicker.view.visibleElements[s],$.defocusItem($.selectpicker.view.currentActive),$.activeIndex=($.selectpicker.current.data[s]||{}).index,$.focusItem(r)):$.$menuInner.trigger("focus")}this.selectpicker.isSearching=T,this.selectpicker.current=T?this.selectpicker.search:this.selectpicker.main,this.setPositionData(),e&&(t?n=this.$menuInner[0].scrollTop:$.multiple||"number"==typeof(t=((e=$.$element[0]).options[e.selectedIndex]||{}).liIndex)&&!1!==$.options.size&&(t=(e=$.selectpicker.main.data[t])&&e.position)&&(n=t-($.sizeInfo.menuInnerHeight+$.sizeInfo.liHeight)/2)),i(n,!0),this.$menuInner.off("scroll.createView").on("scroll.createView",function(e,t){$.noScroll||i(this.scrollTop,t),$.noScroll=!1}),w(window).off("resize"+A+"."+this.selectId+".createView").on("resize"+A+"."+this.selectId+".createView",function(){$.$newElement.hasClass(O.SHOW)&&i($.$menuInner[0].scrollTop)})},focusItem:function(e,t,n){var i;e&&(t=t||this.selectpicker.main.data[this.activeIndex],(i=e.firstChild)&&(i.setAttribute("aria-setsize",this.selectpicker.view.size),i.setAttribute("aria-posinset",t.posinset),!0!==n&&(this.focusedParent.setAttribute("aria-activedescendant",i.id),e.classList.add("active"),i.classList.add("active"))))},defocusItem:function(e){e&&(e.classList.remove("active"),e.firstChild&&e.firstChild.classList.remove("active"))},setPlaceholder:function(){var e,t,n,i,o,s,r=this,a=!1;return this.options.title&&!this.multiple&&(this.selectpicker.view.titleOption||(this.selectpicker.view.titleOption=document.createElement("option")),e=this.$element[0],t=!(a=!0),n=!this.selectpicker.view.titleOption.parentNode,i=e.selectedIndex,o=e.options[i],s=(s=window.performance&&window.performance.getEntriesByType("navigation"))&&s.length?"back_forward"!==s[0].type:2!==window.performance.navigation.type,n&&(this.selectpicker.view.titleOption.className="bs-title-option",this.selectpicker.view.titleOption.value="",t=!o||0===i&&!1===o.defaultSelected&&void 0===this.$element.data("selected")),!n&&0===this.selectpicker.view.titleOption.index||e.insertBefore(this.selectpicker.view.titleOption,e.firstChild),t&&s?e.selectedIndex=0:"complete"!==document.readyState&&window.addEventListener("pageshow",function(){r.selectpicker.view.displayedValue!==e.value&&r.render()})),a},buildData:function(){var e=':not([hidden]):not([data-hidden="true"])',s=[],t=0,n=this.setPlaceholder()?1:0,i=(this.options.hideDisabled&&(e+=":not(:disabled)"),this.$element[0].querySelectorAll("select > *"+e));function r(e){var t=s[s.length-1];t&&"divider"===t.type&&(t.optID||e.optID)||((e=e||{}).type="divider",s.push(e))}function o(e,t){var n,i,o;(t=t||{}).divider="true"===e.getAttribute("data-divider"),t.divider?r({optID:t.optID}):(n=s.length,i=(i=e.style.cssText)?C(i):"",o=(e.className||"")+(t.optgroupClass||""),t.optID&&(o="opt "+o),t.optionClass=o.trim(),t.inlineStyle=i,t.text=e.textContent,t.content=e.getAttribute("data-content"),t.tokens=e.getAttribute("data-tokens"),t.subtext=e.getAttribute("data-subtext"),t.icon=e.getAttribute("data-icon"),e.liIndex=n,t.display=t.content||t.text,t.type="option",t.index=n,t.option=e,t.selected=!!e.selected,t.disabled=t.disabled||!!e.disabled,s.push(t))}for(var a=i.length,l=n;l<a;l++){var c=i[l];if("OPTGROUP"!==c.tagName)o(c,{});else{b=y=v=m=f=g=h=p=d=u=p=c=void 0;var c=l,u=(p=i)[c],d=!(c-1<n)&&p[c-1],p=p[c+1],h=u.querySelectorAll("option"+e);if(h.length){var f,m,g={display:C(u.label),subtext:u.getAttribute("data-subtext"),icon:u.getAttribute("data-icon"),type:"optgroup-label",optgroupClass:" "+(u.className||"")};t++,d&&r({optID:t}),g.optID=t,s.push(g);for(var v=0,y=h.length;v<y;v++){var b=h[v];0===v&&(m=(f=s.length-1)+y),o(b,{headerIndex:f,lastIndex:m,optID:g.optID,optgroupClass:g.optgroupClass,disabled:u.disabled})}p&&r({optID:t})}}}this.selectpicker.main.data=this.selectpicker.current.data=s},buildList:function(){var e=this,t=this.selectpicker.main.data,n=[],i=0;!e.options.showTick&&!e.multiple||j.checkMark.parentNode||(j.checkMark.className=this.options.iconBase+" "+e.options.tickIcon+" check-mark",j.a.appendChild(j.checkMark));for(var o=t.length,s=0;s<o;s++){var r,a=t[s],l=(c=r=l=void 0,a),c=0;switch(l.type){case"divider":r=L.li(!1,O.DIVIDER,l.optID?l.optID+"div":void 0);break;case"option":(r=L.li(L.a(L.text.call(e,l),l.optionClass,l.inlineStyle),"",l.optID)).firstChild&&(r.firstChild.id=e.selectId+"-"+l.index);break;case"optgroup-label":r=L.li(L.label.call(e,l),"dropdown-header"+l.optgroupClass,l.optID)}l.element=r,n.push(r),l.display&&(c+=l.display.length),l.subtext&&(c+=l.subtext.length),l.icon&&(c+=1),i<c&&(i=c,e.selectpicker.view.widestOption=n[n.length-1])}this.selectpicker.main.elements=this.selectpicker.current.elements=n},findLis:function(){return this.$menuInner.find(".inner > li")},render:function(){var e=this,t=this.$element[0],n=this.setPlaceholder()&&0===t.selectedIndex,i=x(t,this.options.hideDisabled),o=i.length,s=this.$button[0],r=s.querySelector(".filter-option-inner-inner"),a=document.createTextNode(this.options.multipleSeparator),l=j.fragment.cloneNode(!1),c=!1;if(s.classList.toggle("bs-placeholder",e.multiple?!o:!T(t,i)),e.multiple||1!==i.length||(e.selectpicker.view.displayedValue=T(t,i)),"static"===this.options.selectedTextFormat)l=L.text.call(this,{text:this.options.title},!0);else if(!1===(this.multiple&&-1!==this.options.selectedTextFormat.indexOf("count")&&1<o&&(1<(t=this.options.selectedTextFormat.split(">")).length&&o>t[1]||1===t.length&&2<=o))){if(!n){for(var u=0;u<o&&u<50;u++){var d=i[u],p=this.selectpicker.main.data[d.liIndex],h={};this.multiple&&0<u&&l.appendChild(a.cloneNode(!1)),d.title?h.text=d.title:p&&(p.content&&e.options.showContent?(h.content=p.content.toString(),c=!0):(e.options.showIcon&&(h.icon=p.icon),e.options.showSubtext&&!e.multiple&&p.subtext&&(h.subtext=" "+p.subtext),h.text=d.textContent.trim())),l.appendChild(L.text.call(this,h,!0))}49<o&&l.appendChild(document.createTextNode("..."))}}else var t=':not([hidden]):not([data-hidden="true"]):not([data-divider="true"])',n=(this.options.hideDisabled&&(t+=":not(:disabled)"),this.$element[0].querySelectorAll("select > option"+t+", optgroup"+t+" option"+t).length),t="function"==typeof this.options.countSelectedText?this.options.countSelectedText(o,n):this.options.countSelectedText,l=L.text.call(this,{text:t.replace("{0}",o.toString()).replace("{1}",n.toString())},!0);null==this.options.title&&(this.options.title=this.$element.attr("title")),l.childNodes.length||(l=L.text.call(this,{text:void 0!==this.options.title?this.options.title:this.options.noneSelectedText},!0)),s.title=l.textContent.replace(/<[^>]*>?/g,"").trim(),this.options.sanitize&&c&&E([l],e.options.whiteList,e.options.sanitizeFn),r.innerHTML="",r.appendChild(l),D.major<4&&this.$newElement[0].classList.contains("bs3-has-addon")&&(t=s.querySelector(".filter-expand"),(n=r.cloneNode(!0)).className="filter-expand",t?s.replaceChild(n,t):s.appendChild(n)),this.$element.trigger("rendered"+A)},setStyle:function(e,t){var n=this.$button[0],i=this.$newElement[0],o=this.options.style.trim();this.$element.attr("class")&&this.$newElement.addClass(this.$element.attr("class").replace(/selectpicker|mobile-device|bs-select-hidden|validate\[.*\]/gi,"")),D.major<4&&(i.classList.add("bs3"),i.parentNode.classList&&i.parentNode.classList.contains("input-group")&&(i.previousElementSibling||i.nextElementSibling)&&(i.previousElementSibling||i.nextElementSibling).classList.contains("input-group-addon")&&i.classList.add("bs3-has-addon")),i=e?e.trim():o,"add"==t?i&&n.classList.add.apply(n.classList,i.split(" ")):"remove"==t?i&&n.classList.remove.apply(n.classList,i.split(" ")):(o&&n.classList.remove.apply(n.classList,o.split(" ")),i&&n.classList.add.apply(n.classList,i.split(" ")))},liHeight:function(e){if(e||!1!==this.options.size&&!Object.keys(this.sizeInfo).length){var t,e=j.div.cloneNode(!1),n=j.div.cloneNode(!1),i=j.div.cloneNode(!1),o=document.createElement("ul"),s=j.li.cloneNode(!1),r=j.li.cloneNode(!1),a=j.a.cloneNode(!1),l=j.span.cloneNode(!1),c=this.options.header&&0<this.$menu.find("."+O.POPOVERHEADER).length?this.$menu.find("."+O.POPOVERHEADER)[0].cloneNode(!0):null,u=this.options.liveSearch?j.div.cloneNode(!1):null,d=this.options.actionsBox&&this.multiple&&0<this.$menu.find(".bs-actionsbox").length?this.$menu.find(".bs-actionsbox")[0].cloneNode(!0):null,p=this.options.doneButton&&this.multiple&&0<this.$menu.find(".bs-donebutton").length?this.$menu.find(".bs-donebutton")[0].cloneNode(!0):null,h=this.$element.find("option")[0];if(this.sizeInfo.selectWidth=this.$newElement[0].offsetWidth,l.className="text",a.className="dropdown-item "+(h?h.className:""),e.className=this.$menu[0].parentNode.className+" "+O.SHOW,e.style.width=0,"auto"===this.options.width&&(n.style.minWidth=0),n.className=O.MENU+" "+O.SHOW,i.className="inner "+O.SHOW,o.className=O.MENU+" inner "+("4"===D.major?O.SHOW:""),s.className=O.DIVIDER,r.className="dropdown-header",l.appendChild(document.createTextNode("​")),this.selectpicker.current.data.length)for(var f=0;f<this.selectpicker.current.data.length;f++){var m=this.selectpicker.current.data[f];if("option"===m.type){t=m.element;break}}else t=j.li.cloneNode(!1),a.appendChild(l),t.appendChild(a);r.appendChild(l.cloneNode(!0)),this.selectpicker.view.widestOption&&o.appendChild(this.selectpicker.view.widestOption.cloneNode(!0)),o.appendChild(t),o.appendChild(s),o.appendChild(r),c&&n.appendChild(c),u&&(h=document.createElement("input"),u.className="bs-searchbox",h.className="form-control",u.appendChild(h),n.appendChild(u)),d&&n.appendChild(d),i.appendChild(o),n.appendChild(i),p&&n.appendChild(p),e.appendChild(n),document.body.appendChild(e);var a=t.offsetHeight,l=r?r.offsetHeight:0,h=c?c.offsetHeight:0,o=u?u.offsetHeight:0,r=d?d.offsetHeight:0,c=p?p.offsetHeight:0,u=w(s).outerHeight(!0),d=!!window.getComputedStyle&&window.getComputedStyle(n),p=n.offsetWidth,s=d?null:w(n),g={vert:v(d?d.paddingTop:s.css("paddingTop"))+v(d?d.paddingBottom:s.css("paddingBottom"))+v(d?d.borderTopWidth:s.css("borderTopWidth"))+v(d?d.borderBottomWidth:s.css("borderBottomWidth")),horiz:v(d?d.paddingLeft:s.css("paddingLeft"))+v(d?d.paddingRight:s.css("paddingRight"))+v(d?d.borderLeftWidth:s.css("borderLeftWidth"))+v(d?d.borderRightWidth:s.css("borderRightWidth"))},d={vert:g.vert+v(d?d.marginTop:s.css("marginTop"))+v(d?d.marginBottom:s.css("marginBottom"))+2,horiz:g.horiz+v(d?d.marginLeft:s.css("marginLeft"))+v(d?d.marginRight:s.css("marginRight"))+2};i.style.overflowY="scroll",s=n.offsetWidth-p,document.body.removeChild(e),this.sizeInfo.liHeight=a,this.sizeInfo.dropdownHeaderHeight=l,this.sizeInfo.headerHeight=h,this.sizeInfo.searchHeight=o,this.sizeInfo.actionsHeight=r,this.sizeInfo.doneButtonHeight=c,this.sizeInfo.dividerHeight=u,this.sizeInfo.menuPadding=g,this.sizeInfo.menuExtras=d,this.sizeInfo.menuWidth=p,this.sizeInfo.menuInnerInnerWidth=p-g.horiz,this.sizeInfo.totalMenuWidth=this.sizeInfo.menuWidth,this.sizeInfo.scrollBarWidth=s,this.sizeInfo.selectHeight=this.$newElement[0].offsetHeight,this.setPositionData()}},getSelectPosition:function(){var e,t=w(window),n=this.$newElement.offset(),i=w(this.options.container),i=(this.options.container&&i.length&&!i.is("body")?((e=i.offset()).top+=parseInt(i.css("borderTopWidth")),e.left+=parseInt(i.css("borderLeftWidth"))):e={top:0,left:0},this.options.windowPadding);this.sizeInfo.selectOffsetTop=n.top-e.top-t.scrollTop(),this.sizeInfo.selectOffsetBot=t.height()-this.sizeInfo.selectOffsetTop-this.sizeInfo.selectHeight-e.top-i[2],this.sizeInfo.selectOffsetLeft=n.left-e.left-t.scrollLeft(),this.sizeInfo.selectOffsetRight=t.width()-this.sizeInfo.selectOffsetLeft-this.sizeInfo.selectWidth-e.left-i[1],this.sizeInfo.selectOffsetTop-=i[0],this.sizeInfo.selectOffsetLeft-=i[3]},setMenuSize:function(e){this.getSelectPosition();var t,n,i,o,s,r,a=this.sizeInfo.selectWidth,l=this.sizeInfo.liHeight,c=this.sizeInfo.headerHeight,u=this.sizeInfo.searchHeight,d=this.sizeInfo.actionsHeight,p=this.sizeInfo.doneButtonHeight,h=this.sizeInfo.dividerHeight,f=this.sizeInfo.menuPadding,m=0;if(this.options.dropupAuto&&(r=l*this.selectpicker.current.elements.length+f.vert,r=this.sizeInfo.selectOffsetTop-this.sizeInfo.selectOffsetBot>this.sizeInfo.menuExtras.vert&&r+this.sizeInfo.menuExtras.vert+50>this.sizeInfo.selectOffsetBot,!0===this.selectpicker.isSearching&&(r=this.selectpicker.dropup),this.$newElement.toggleClass(O.DROPUP,r),this.selectpicker.dropup=r),"auto"===this.options.size)r=3<this.selectpicker.current.elements.length?3*this.sizeInfo.liHeight+this.sizeInfo.menuExtras.vert-2:0,n=this.sizeInfo.selectOffsetBot-this.sizeInfo.menuExtras.vert,i=r+c+u+d+p,s=Math.max(r-f.vert,0),t=(o=n=this.$newElement.hasClass(O.DROPUP)?this.sizeInfo.selectOffsetTop-this.sizeInfo.menuExtras.vert:n)-c-u-d-p-f.vert;else if(this.options.size&&"auto"!=this.options.size&&this.selectpicker.current.elements.length>this.options.size){for(var g=0;g<this.options.size;g++)"divider"===this.selectpicker.current.data[g].type&&m++;t=(n=l*this.options.size+m*h+f.vert)-f.vert,o=n+c+u+d+p,i=s=""}this.$menu.css({"max-height":o+"px",overflow:"hidden","min-height":i+"px"}),this.$menuInner.css({"max-height":t+"px","overflow-y":"auto","min-height":s+"px"}),this.sizeInfo.menuInnerHeight=Math.max(t,1),this.selectpicker.current.data.length&&this.selectpicker.current.data[this.selectpicker.current.data.length-1].position>this.sizeInfo.menuInnerHeight&&(this.sizeInfo.hasScrollBar=!0,this.sizeInfo.totalMenuWidth=this.sizeInfo.menuWidth+this.sizeInfo.scrollBarWidth),"auto"===this.options.dropdownAlignRight&&this.$menu.toggleClass(O.MENURIGHT,this.sizeInfo.selectOffsetLeft>this.sizeInfo.selectOffsetRight&&this.sizeInfo.selectOffsetRight<this.sizeInfo.totalMenuWidth-a),this.dropdown&&this.dropdown._popper&&this.dropdown._popper.update()},setSize:function(e){var t,n;this.liHeight(e),this.options.header&&this.$menu.css("padding-top",0),!1!==this.options.size&&(t=this,n=w(window),this.setMenuSize(),this.options.liveSearch&&this.$searchbox.off("input.setMenuSize propertychange.setMenuSize").on("input.setMenuSize propertychange.setMenuSize",function(){return t.setMenuSize()}),"auto"===this.options.size?n.off("resize"+A+"."+this.selectId+".setMenuSize scroll"+A+"."+this.selectId+".setMenuSize").on("resize"+A+"."+this.selectId+".setMenuSize scroll"+A+"."+this.selectId+".setMenuSize",function(){return t.setMenuSize()}):this.options.size&&"auto"!=this.options.size&&this.selectpicker.current.elements.length>this.options.size&&n.off("resize"+A+"."+this.selectId+".setMenuSize scroll"+A+"."+this.selectId+".setMenuSize")),this.createView(!1,!0,e)},setWidth:function(){var n=this;"auto"===this.options.width?requestAnimationFrame(function(){n.$menu.css("min-width","0"),n.$element.on("loaded"+A,function(){n.liHeight(),n.setMenuSize();var e=n.$newElement.clone().appendTo("body"),t=e.css("width","auto").children("button").outerWidth();e.remove(),n.sizeInfo.selectWidth=Math.max(n.sizeInfo.totalMenuWidth,t),n.$newElement.css("width",n.sizeInfo.selectWidth+"px")})}):"fit"===this.options.width?(this.$menu.css("min-width",""),this.$newElement.css("width","").addClass("fit-width")):this.options.width?(this.$menu.css("min-width",""),this.$newElement.css("width",this.options.width)):(this.$menu.css("min-width",""),this.$newElement.css("width","")),this.$newElement.hasClass("fit-width")&&"fit"!==this.options.width&&this.$newElement[0].classList.remove("fit-width")},selectPosition:function(){this.$bsContainer=w('<div class="bs-container" />');function e(e){var t={},n=r.options.display||!!w.fn.dropdown.Constructor.Default&&w.fn.dropdown.Constructor.Default.display;r.$bsContainer.addClass(e.attr("class").replace(/form-control|fit-width/gi,"")).toggleClass(O.DROPUP,e.hasClass(O.DROPUP)),i=e.offset(),a.is("body")?o={top:0,left:0}:((o=a.offset()).top+=parseInt(a.css("borderTopWidth"))-a.scrollTop(),o.left+=parseInt(a.css("borderLeftWidth"))-a.scrollLeft()),s=e.hasClass(O.DROPUP)?0:e[0].offsetHeight,(D.major<4||"static"===n)&&(t.top=i.top-o.top+s,t.left=i.left-o.left),t.width=e[0].offsetWidth,r.$bsContainer.css(t)}var i,o,s,r=this,a=w(this.options.container);this.$button.on("click.bs.dropdown.data-api",function(){r.isDisabled()||(e(r.$newElement),r.$bsContainer.appendTo(r.options.container).toggleClass(O.SHOW,!r.$button.hasClass(O.SHOW)).append(r.$menu))}),w(window).off("resize"+A+"."+this.selectId+" scroll"+A+"."+this.selectId).on("resize"+A+"."+this.selectId+" scroll"+A+"."+this.selectId,function(){r.$newElement.hasClass(O.SHOW)&&e(r.$newElement)}),this.$element.on("hide"+A,function(){r.$menu.data("height",r.$menu.height()),r.$bsContainer.detach()})},setOptionStatus:function(e){var t=this;if(t.noScroll=!1,t.selectpicker.view.visibleElements&&t.selectpicker.view.visibleElements.length)for(var n=0;n<t.selectpicker.view.visibleElements.length;n++){var i=t.selectpicker.current.data[n+t.selectpicker.view.position0],o=i.option;o&&(!0!==e&&t.setDisabled(i.index,i.disabled),t.setSelected(i.index,o.selected))}},setSelected:function(e,t){var n,i=this.selectpicker.main.elements[e],o=this.selectpicker.main.data[e],s=void 0!==this.activeIndex,r=this.activeIndex===e||t&&!this.multiple&&!s;o.selected=t,n=i.firstChild,t&&(this.selectedIndex=e),i.classList.toggle("selected",t),r?(this.focusItem(i,o),this.selectpicker.view.currentActive=i,this.activeIndex=e):this.defocusItem(i),n&&(n.classList.toggle("selected",t),t?n.setAttribute("aria-selected",!0):this.multiple?n.setAttribute("aria-selected",!1):n.removeAttribute("aria-selected")),r||s||!t||void 0===this.prevActiveIndex||(o=this.selectpicker.main.elements[this.prevActiveIndex],this.defocusItem(o))},setDisabled:function(e,t){var n=this.selectpicker.main.elements[e];this.selectpicker.main.data[e].disabled=t,e=n.firstChild,n.classList.toggle(O.DISABLED,t),e&&("4"===D.major&&e.classList.toggle(O.DISABLED,t),t?(e.setAttribute("aria-disabled",t),e.setAttribute("tabindex",-1)):(e.removeAttribute("aria-disabled"),e.setAttribute("tabindex",0)))},isDisabled:function(){return this.$element[0].disabled},checkDisabled:function(){this.isDisabled()?(this.$newElement[0].classList.add(O.DISABLED),this.$button.addClass(O.DISABLED).attr("aria-disabled",!0)):this.$button[0].classList.contains(O.DISABLED)&&(this.$newElement[0].classList.remove(O.DISABLED),this.$button.removeClass(O.DISABLED).attr("aria-disabled",!1))},clickListener:function(){var b=this,t=w(document);function e(){(b.options.liveSearch?b.$searchbox:b.$menuInner).trigger("focus")}function n(){b.dropdown&&b.dropdown._popper&&b.dropdown._popper.state.isCreated?e():requestAnimationFrame(n)}t.data("spaceSelect",!1),this.$button.on("keyup",function(e){/(32)/.test(e.keyCode.toString(10))&&t.data("spaceSelect")&&(e.preventDefault(),t.data("spaceSelect",!1))}),this.$newElement.on("show.bs.dropdown",function(){3<D.major&&!b.dropdown&&(b.dropdown=b.$button.data("bs.dropdown"),b.dropdown._menu=b.$menu[0])}),this.$button.on("click.bs.dropdown.data-api",function(){b.$newElement.hasClass(O.SHOW)||b.setSize()}),this.$element.on("shown"+A,function(){b.$menuInner[0].scrollTop!==b.selectpicker.view.scrollTop&&(b.$menuInner[0].scrollTop=b.selectpicker.view.scrollTop),3<D.major?requestAnimationFrame(n):e()}),this.$menuInner.on("mouseenter","li a",function(e){var t=this.parentElement,n=b.isVirtual()?b.selectpicker.view.position0:0,i=Array.prototype.indexOf.call(t.parentElement.children,t),i=b.selectpicker.current.data[i+n];b.focusItem(t,i,!0)}),this.$menuInner.on("click","li a",function(e,t){var n=w(this),i=b.$element[0],o=b.isVirtual()?b.selectpicker.view.position0:0,o=b.selectpicker.current.data[n.parent().index()+o],s=o.index,r=T(i),a=i.selectedIndex,l=i.options[a],c=!0;if(b.multiple&&1!==b.options.maxOptions&&e.stopPropagation(),e.preventDefault(),!b.isDisabled()&&!n.parent().hasClass(O.DISABLED)){var e=o.option,n=w(e),o=e.selected,u=n.parent("optgroup"),d=u.find("option"),p=b.options.maxOptions,h=u.data("maxOptions")||!1;if((t=s===b.activeIndex?!0:t)||(b.prevActiveIndex=b.activeIndex,b.activeIndex=void 0),b.multiple){if(e.selected=!o,b.setSelected(s,!o),b.focusedParent.focus(),!1!==p||!1!==h){t=p<x(i).length,o=h<u.find("option:selected").length;if(p&&t||h&&o)if(p&&1==p)i.selectedIndex=-1,e.selected=!0,b.setOptionStatus(!0);else if(h&&1==h){for(var f=0;f<d.length;f++){var m=d[f];m.selected=!1,b.setSelected(m.liIndex,!1)}e.selected=!0,b.setSelected(s,!0)}else{var u="string"==typeof b.options.maxOptionsText?[b.options.maxOptionsText,b.options.maxOptionsText]:b.options.maxOptionsText,u="function"==typeof u?u(p,h):u,g=u[0].replace("{n}",p),v=u[1].replace("{n}",h),y=w('<div class="notify"></div>');u[2]&&(g=g.replace("{var}",u[2][1<p?0:1]),v=v.replace("{var}",u[2][1<h?0:1])),e.selected=!1,b.$menu.append(y),p&&t&&(y.append(w("<div>"+g+"</div>")),c=!1,b.$element.trigger("maxReached"+A)),h&&o&&(y.append(w("<div>"+v+"</div>")),c=!1,b.$element.trigger("maxReachedGrp"+A)),setTimeout(function(){b.setSelected(s,!1)},10),y[0].classList.add("fadeOut"),setTimeout(function(){y.remove()},1050)}}}else l&&(l.selected=!1),e.selected=!0,b.setSelected(s,!0);!b.multiple||b.multiple&&1===b.options.maxOptions?b.$button.trigger("focus"):b.options.liveSearch&&b.$searchbox.trigger("focus"),!c||!b.multiple&&a===i.selectedIndex||(k=[e.index,n.prop("selected"),r],b.$element.triggerNative("change"))}}),this.$menu.on("click","li."+O.DISABLED+" a, ."+O.POPOVERHEADER+", ."+O.POPOVERHEADER+" :not(.close)",function(e){e.currentTarget==this&&(e.preventDefault(),e.stopPropagation(),(b.options.liveSearch&&!w(e.target).hasClass("close")?b.$searchbox:b.$button).trigger("focus"))}),this.$menuInner.on("click",".divider, .dropdown-header",function(e){e.preventDefault(),e.stopPropagation(),(b.options.liveSearch?b.$searchbox:b.$button).trigger("focus")}),this.$menu.on("click","."+O.POPOVERHEADER+" .close",function(){b.$button.trigger("click")}),this.$searchbox.on("click",function(e){e.stopPropagation()}),this.$menu.on("click",".actions-btn",function(e){(b.options.liveSearch?b.$searchbox:b.$button).trigger("focus"),e.preventDefault(),e.stopPropagation(),w(this).hasClass("bs-select-all")?b.selectAll():b.deselectAll()}),this.$button.on("focus"+A,function(e){var t=b.$element[0].getAttribute("tabindex");void 0!==t&&e.originalEvent&&e.originalEvent.isTrusted&&(this.setAttribute("tabindex",t),b.$element[0].setAttribute("tabindex",-1),b.selectpicker.view.tabindex=t)}).on("blur"+A,function(e){void 0!==b.selectpicker.view.tabindex&&e.originalEvent&&e.originalEvent.isTrusted&&(b.$element[0].setAttribute("tabindex",b.selectpicker.view.tabindex),this.setAttribute("tabindex",-1),b.selectpicker.view.tabindex=void 0)}),this.$element.on("change"+A,function(){b.render(),b.$element.trigger("changed"+A,k),k=null}).on("focus"+A,function(){b.options.mobile||b.$button[0].focus()})},liveSearchListener:function(){var p=this;this.$button.on("click.bs.dropdown.data-api",function(){p.$searchbox.val()&&(p.$searchbox.val(""),p.selectpicker.search.previousValue=void 0)}),this.$searchbox.on("click.bs.dropdown.data-api focus.bs.dropdown.data-api touchend.bs.dropdown.data-api",function(e){e.stopPropagation()}),this.$searchbox.on("input propertychange",function(){var e=p.$searchbox[0].value;if(p.selectpicker.search.elements=[],p.selectpicker.search.data=[],e){var t=[],n=e.toUpperCase(),i={},o=[],s=p._searchStyle(),r=p.options.liveSearchNormalize;r&&(n=h(n));for(var a=0;a<p.selectpicker.main.data.length;a++){var l=p.selectpicker.main.data[a];i[a]||(i[a]=y(l,n,s,r)),i[a]&&void 0!==l.headerIndex&&-1===o.indexOf(l.headerIndex)&&(0<l.headerIndex&&(i[l.headerIndex-1]=!0,o.push(l.headerIndex-1)),i[l.headerIndex]=!0,o.push(l.headerIndex),i[l.lastIndex+1]=!0),i[a]&&"optgroup-label"!==l.type&&o.push(a)}for(var a=0,c=o.length;a<c;a++){var u=o[a],d=o[a-1],l=p.selectpicker.main.data[u],d=p.selectpicker.main.data[d];("divider"!==l.type||"divider"===l.type&&d&&"divider"!==d.type&&c-1!==a)&&(p.selectpicker.search.data.push(l),t.push(p.selectpicker.main.elements[u]))}p.activeIndex=void 0,p.noScroll=!0,p.$menuInner.scrollTop(0),p.selectpicker.search.elements=t,p.createView(!0),!function(e,t){e.length||(j.noResults.innerHTML=this.options.noneResultsText.replace("{0}",'"'+C(t)+'"'),this.$menuInner[0].firstChild.appendChild(j.noResults))}.call(p,t,e)}else p.selectpicker.search.previousValue&&(p.$menuInner.scrollTop(0),p.createView(!1));p.selectpicker.search.previousValue=e})},_searchStyle:function(){return this.options.liveSearchStyle||"contains"},val:function(e){var t,n=this.$element[0];return void 0!==e?(t=T(n),k=[null,null,t],this.$element.val(e).trigger("changed"+A,k),this.$newElement.hasClass(O.SHOW)&&(this.multiple?this.setOptionStatus(!0):"number"==typeof(t=(n.options[n.selectedIndex]||{}).liIndex)&&(this.setSelected(this.selectedIndex,!1),this.setSelected(t,!0))),this.render(),k=null,this.$element):this.$element.val()},changeAll:function(e){if(this.multiple){void 0===e&&(e=!0);var t=this.$element[0],n=0,i=0,o=T(t);t.classList.add("bs-select-hidden");for(var s=0,r=this.selectpicker.current.data,a=r.length;s<a;s++){var l=r[s],c=l.option;c&&!l.disabled&&"divider"!==l.type&&(l.selected&&n++,!0===(c.selected=e)&&i++)}t.classList.remove("bs-select-hidden"),n!==i&&(this.setOptionStatus(),k=[null,null,o],this.$element.triggerNative("change"))}},selectAll:function(){return this.changeAll(!0)},deselectAll:function(){return this.changeAll(!1)},toggle:function(e){(e=e||window.event)&&e.stopPropagation(),this.$button.trigger("click.bs.dropdown.data-api")},keydown:function(e){var t,n,i,o,s=w(this),r=s.hasClass("dropdown-toggle"),a=(r?s.closest(".dropdown"):s.closest(Q.MENU)).data("this"),l=a.findLis(),c=!1,r=e.which===S&&!r&&!a.options.selectOnTab,u=K.test(e.which)||r,d=a.$menuInner[0].scrollTop,p=!0===a.isVirtual()?a.selectpicker.view.position0:0;if(!(112<=e.which&&e.which<=123))if(!(t=a.$newElement.hasClass(O.SHOW))&&(u||48<=e.which&&e.which<=57||96<=e.which&&e.which<=105||65<=e.which&&e.which<=90)&&(a.$button.trigger("click.bs.dropdown.data-api"),a.options.liveSearch))a.$searchbox.trigger("focus");else{if(e.which===b&&t&&(e.preventDefault(),a.$button.trigger("click.bs.dropdown.data-api").trigger("focus")),u){if(!l.length)return;-1!==(u=(n=a.selectpicker.main.elements[a.activeIndex])?Array.prototype.indexOf.call(n.parentElement.children,n):-1)&&a.defocusItem(n),e.which===I?(-1!==u&&u--,u+p<0&&(u+=l.length),a.selectpicker.view.canHighlight[u+p]||-1===(u=a.selectpicker.view.canHighlight.slice(0,u+p).lastIndexOf(!0)-p)&&(u=l.length-1)):e.which!==N&&!r||(++u+p>=a.selectpicker.view.canHighlight.length&&(u=a.selectpicker.view.firstHighlightIndex),a.selectpicker.view.canHighlight[u+p]||(u=u+1+a.selectpicker.view.canHighlight.slice(u+p+1).indexOf(!0))),e.preventDefault();var h=p+u;e.which===I?0===p&&u===l.length-1?(a.$menuInner[0].scrollTop=a.$menuInner[0].scrollHeight,h=a.selectpicker.current.elements.length-1):c=(o=(i=a.selectpicker.current.data[h]).position-i.height)<d:e.which!==N&&!r||(u===a.selectpicker.view.firstHighlightIndex?(a.$menuInner[0].scrollTop=0,h=a.selectpicker.view.firstHighlightIndex):c=d<(o=(i=a.selectpicker.current.data[h]).position-a.sizeInfo.menuInnerHeight)),n=a.selectpicker.current.elements[h],a.activeIndex=a.selectpicker.current.data[h].index,a.focusItem(n),a.selectpicker.view.currentActive=n,c&&(a.$menuInner[0].scrollTop=o),(a.options.liveSearch?a.$searchbox:s).trigger("focus")}else if(!s.is("input")&&!Y.test(e.which)||e.which===$&&a.selectpicker.keydown.keyHistory){var f,m=[];e.preventDefault(),a.selectpicker.keydown.keyHistory+=G[e.which],a.selectpicker.keydown.resetKeyHistory.cancel&&clearTimeout(a.selectpicker.keydown.resetKeyHistory.cancel),a.selectpicker.keydown.resetKeyHistory.cancel=a.selectpicker.keydown.resetKeyHistory.start(),f=a.selectpicker.keydown.keyHistory,/^(.)\1+$/.test(f)&&(f=f.charAt(0));for(var g=0;g<a.selectpicker.current.data.length;g++){var v=a.selectpicker.current.data[g];y(v,f,"startsWith",!0)&&a.selectpicker.view.canHighlight[g]&&m.push(v.index)}m.length&&(p=0,l.removeClass("active").find("a").removeClass("active"),1===f.length&&(-1===(p=m.indexOf(a.activeIndex))||p===m.length-1?p=0:p++),r=m[p],c=0<d-(i=a.selectpicker.main.data[r]).position?(o=i.position-i.height,!0):(o=i.position-a.sizeInfo.menuInnerHeight,i.position>d+a.sizeInfo.menuInnerHeight),n=a.selectpicker.main.elements[r],a.activeIndex=m[p],a.focusItem(n),n&&n.firstChild.focus(),c&&(a.$menuInner[0].scrollTop=o),s.trigger("focus"))}t&&(e.which===$&&!a.selectpicker.keydown.keyHistory||e.which===X||e.which===S&&a.options.selectOnTab)&&(e.which!==$&&e.preventDefault(),a.options.liveSearch&&e.which===$||(a.$menuInner.find(".active a").trigger("click",!0),s.trigger("focus"),a.options.liveSearch||(e.preventDefault(),w(document).data("spaceSelect",!0))))}},mobile:function(){this.options.mobile=!0,this.$element[0].classList.add("mobile-device")},refresh:function(){var e=w.extend({},this.options,this.$element.data());this.options=e,this.checkDisabled(),this.buildData(),this.setStyle(),this.render(),this.buildList(),this.setWidth(),this.setSize(!0),this.$element.trigger("refreshed"+A)},hide:function(){this.$newElement.hide()},show:function(){this.$newElement.show()},remove:function(){this.$newElement.remove(),this.$element.remove()},destroy:function(){this.$newElement.before(this.$element).remove(),(this.$bsContainer||this.$menu).remove(),this.selectpicker.view.titleOption&&this.selectpicker.view.titleOption.parentNode&&this.selectpicker.view.titleOption.parentNode.removeChild(this.selectpicker.view.titleOption),this.$element.off(A).removeData("selectpicker").removeClass("bs-select-hidden selectpicker"),w(window).off(A+"."+this.selectId)}};var Z=w.fn.selectpicker;function ee(){if(w.fn.dropdown)return(w.fn.dropdown.Constructor._dataApiKeydownHandler||w.fn.dropdown.Constructor.prototype.keydown).apply(this,arguments)}w.fn.selectpicker=J,w.fn.selectpicker.Constructor=H,w.fn.selectpicker.noConflict=function(){return w.fn.selectpicker=Z,this},w(document).off("keydown.bs.dropdown.data-api").on("keydown.bs.dropdown.data-api",':not(.bootstrap-select) > [data-toggle="dropdown"]',ee).on("keydown.bs.dropdown.data-api",":not(.bootstrap-select) > .dropdown-menu",ee).on("keydown"+A,'.bootstrap-select [data-toggle="dropdown"], .bootstrap-select [role="listbox"], .bootstrap-select .bs-searchbox input',H.prototype.keydown).on("focusin.modal",'.bootstrap-select [data-toggle="dropdown"], .bootstrap-select [role="listbox"], .bootstrap-select .bs-searchbox input',function(e){e.stopPropagation()}),w(window).on("load"+A+".data-api",function(){w(".selectpicker").each(function(){var e=w(this);J.call(e,e.data())})})}(e)},void 0===(i=this)&&void 0!==window&&(i=window),"function"==typeof define&&define.amd?define(["jquery"],o):"object"==typeof t&&t.exports?t.exports=o(e("jquery")):o(i.jQuery)},{jquery:18}],4:[function(e,t,n){!function(r){"use strict";function a(e){return e.is('[type="checkbox"]')?e.prop("checked"):e.is('[type="radio"]')?!!r('[name="'+e.attr("name")+'"]:checked').length:e.is("select[multiple]")?(e.val()||[]).length:e.val()}function o(e,t){this.options=t,this.validators=r.extend({},o.VALIDATORS,t.custom),this.$element=r(e),this.$btn=r('button[type="submit"], input[type="submit"]').filter('[form="'+this.$element.attr("id")+'"]').add(this.$element.find('input[type="submit"], button[type="submit"]')),this.update(),this.$element.on("input.bs.validator change.bs.validator focusout.bs.validator",r.proxy(this.onInput,this)),this.$element.on("submit.bs.validator",r.proxy(this.onSubmit,this)),this.$element.on("reset.bs.validator",r.proxy(this.reset,this)),this.$element.find("[data-match]").each(function(){var t=r(this),e=t.attr("data-match");r(e).on("input.bs.validator",function(e){a(t)&&t.trigger("input.bs.validator")})}),this.$inputs.filter(function(){return a(r(this))&&!r(this).closest(".has-error").length}).trigger("focusout"),this.$element.attr("novalidate",!0)}function t(i){return this.each(function(){var e=r(this),t=r.extend({},o.DEFAULTS,e.data(),"object"==typeof i&&i),n=e.data("bs.validator");!n&&"destroy"==i||(n||e.data("bs.validator",n=new o(this,t)),"string"==typeof i&&n[i]())})}o.VERSION="0.11.9",o.INPUT_SELECTOR=':input:not([type="hidden"], [type="submit"], [type="reset"], button)',o.FOCUS_OFFSET=20,o.DEFAULTS={delay:500,html:!1,disable:!0,focus:!0,custom:{},errors:{match:"Does not match",minlength:"Not long enough"},feedback:{success:"glyphicon-ok",error:"glyphicon-remove"}},o.VALIDATORS={native:function(e){e=e[0];if(e.checkValidity)return!e.checkValidity()&&!e.validity.valid&&(e.validationMessage||"error!")},match:function(e){var t=e.attr("data-match");return e.val()!==r(t).val()&&o.DEFAULTS.errors.match},minlength:function(e){var t=e.attr("data-minlength");return e.val().length<t&&o.DEFAULTS.errors.minlength}},o.prototype.update=function(){var e=this;return this.$inputs=this.$element.find(o.INPUT_SELECTOR).add(this.$element.find('[data-validate="true"]')).not(this.$element.find('[data-validate="false"]').each(function(){e.clearErrors(r(this))})),this.toggleSubmit(),this},o.prototype.onInput=function(e){var t=this,n=r(e.target),e="focusout"!==e.type;this.$inputs.is(n)&&this.validateInput(n,e).done(function(){t.toggleSubmit()})},o.prototype.validateInput=function(t,n){a(t);var i,o=t.data("bs.validator.errors"),s=(t.is('[type="radio"]')&&(t=this.$element.find('input[name="'+t.attr("name")+'"]')),r.Event("validate.bs.validator",{relatedTarget:t[0]}));if(this.$element.trigger(s),!s.isDefaultPrevented())return i=this,this.runValidators(t).done(function(e){t.data("bs.validator.errors",e),e.length?n?i.defer(t,i.showErrors):i.showErrors(t):i.clearErrors(t),o&&e.toString()===o.toString()||(s=e.length?r.Event("invalid.bs.validator",{relatedTarget:t[0],detail:e}):r.Event("valid.bs.validator",{relatedTarget:t[0],detail:o}),i.$element.trigger(s)),i.toggleSubmit(),i.$element.trigger(r.Event("validated.bs.validator",{relatedTarget:t[0]}))})},o.prototype.runValidators=function(i){var o=[],t=r.Deferred();function s(e){return i.attr("data-"+e+"-error")||((e=i[0].validity).typeMismatch?i.attr("data-type-error"):e.patternMismatch?i.attr("data-pattern-error"):e.stepMismatch?i.attr("data-step-error"):e.rangeOverflow?i.attr("data-max-error"):e.rangeUnderflow?i.attr("data-min-error"):e.valueMissing?i.attr("data-required-error"):null)||i.attr("data-error")}return i.data("bs.validator.deferred")&&i.data("bs.validator.deferred").reject(),i.data("bs.validator.deferred",t),r.each(this.validators,r.proxy(function(e,t){var n=null;!a(i)&&!i.attr("required")||void 0===i.attr("data-"+e)&&"native"!=e||!(n=t.call(this,i))||(n=s(e)||n,~o.indexOf(n)||o.push(n))},this)),!o.length&&a(i)&&i.attr("data-remote")?this.defer(i,function(){var e={};e[i.attr("name")]=a(i),r.get(i.attr("data-remote"),e).fail(function(e,t,n){o.push(s("remote")||n)}).always(function(){t.resolve(o)})}):t.resolve(o),t.promise()},o.prototype.validate=function(){var t=this;return r.when(this.$inputs.map(function(e){return t.validateInput(r(this),!1)})).then(function(){t.toggleSubmit(),t.focusError()}),this},o.prototype.focusError=function(){var e;!this.options.focus||0!==(e=this.$element.find(".has-error:first :input")).length&&(r("html, body").animate({scrollTop:e.offset().top-o.FOCUS_OFFSET},250),e.focus())},o.prototype.showErrors=function(e){var t=this.options.html?"html":"text",n=e.data("bs.validator.errors"),e=e.closest(".form-group"),i=e.find(".help-block.with-errors"),o=e.find(".form-control-feedback");n.length&&(n=r("<ul/>").addClass("list-unstyled").append(r.map(n,function(e){return r("<li/>")[t](e)})),void 0===i.data("bs.validator.originalContent")&&i.data("bs.validator.originalContent",i.html()),i.empty().append(n),e.addClass("has-error has-danger"),e.hasClass("has-feedback")&&o.removeClass(this.options.feedback.success)&&o.addClass(this.options.feedback.error)&&e.removeClass("has-success"))},o.prototype.clearErrors=function(e){var t=e.closest(".form-group"),n=t.find(".help-block.with-errors"),i=t.find(".form-control-feedback");n.html(n.data("bs.validator.originalContent")),t.removeClass("has-error has-danger has-success"),t.hasClass("has-feedback")&&i.removeClass(this.options.feedback.error)&&i.removeClass(this.options.feedback.success)&&a(e)&&i.addClass(this.options.feedback.success)&&t.addClass("has-success")},o.prototype.hasErrors=function(){return!!this.$inputs.filter(function(){return!!(r(this).data("bs.validator.errors")||[]).length}).length},o.prototype.isIncomplete=function(){return!!this.$inputs.filter("[required]").filter(function(){var e=a(r(this));return!("string"==typeof e?r.trim(e):e)}).length},o.prototype.onSubmit=function(e){this.validate(),(this.isIncomplete()||this.hasErrors())&&e.preventDefault()},o.prototype.toggleSubmit=function(){this.options.disable&&this.$btn.toggleClass("disabled",this.isIncomplete()||this.hasErrors())},o.prototype.defer=function(e,t){if(t=r.proxy(t,this,e),!this.options.delay)return t();window.clearTimeout(e.data("bs.validator.timeout")),e.data("bs.validator.timeout",window.setTimeout(t,this.options.delay))},o.prototype.reset=function(){return this.$element.find(".form-control-feedback").removeClass(this.options.feedback.error).removeClass(this.options.feedback.success),this.$inputs.removeData(["bs.validator.errors","bs.validator.deferred"]).each(function(){var e=r(this),t=e.data("bs.validator.timeout");window.clearTimeout(t)&&e.removeData("bs.validator.timeout")}),this.$element.find(".help-block.with-errors").each(function(){var e=r(this),t=e.data("bs.validator.originalContent");e.removeData("bs.validator.originalContent").html(t)}),this.$btn.removeClass("disabled"),this.$element.find(".has-error, .has-danger, .has-success").removeClass("has-error has-danger has-success"),this},o.prototype.destroy=function(){return this.reset(),this.$element.removeAttr("novalidate").removeData("bs.validator").off(".bs.validator"),this.$inputs.off(".bs.validator"),this.options=null,this.validators=null,this.$element=null,this.$btn=null,this.$inputs=null,this};var e=r.fn.validator;r.fn.validator=t,r.fn.validator.Constructor=o,r.fn.validator.noConflict=function(){return r.fn.validator=e,this},r(window).on("load",function(){r('form[data-toggle="validator"]').each(function(){var e=r(this);t.call(e,e.data())})})}(jQuery)},{}],5:[function(e,t,n){e("../../js/transition.js"),e("../../js/alert.js"),e("../../js/button.js"),e("../../js/carousel.js"),e("../../js/collapse.js"),e("../../js/dropdown.js"),e("../../js/modal.js"),e("../../js/tooltip.js"),e("../../js/popover.js"),e("../../js/scrollspy.js"),e("../../js/tab.js"),e("../../js/affix.js")},{"../../js/affix.js":6,"../../js/alert.js":7,"../../js/button.js":8,"../../js/carousel.js":9,"../../js/collapse.js":10,"../../js/dropdown.js":11,"../../js/modal.js":12,"../../js/popover.js":13,"../../js/scrollspy.js":14,"../../js/tab.js":15,"../../js/tooltip.js":16,"../../js/transition.js":17}],6:[function(e,t,n){!function(r){"use strict";function a(e,t){this.options=r.extend({},a.DEFAULTS,t),t=this.options.target===a.DEFAULTS.target?r(this.options.target):r(document).find(this.options.target),this.$target=t.on("scroll.bs.affix.data-api",r.proxy(this.checkPosition,this)).on("click.bs.affix.data-api",r.proxy(this.checkPositionWithEventLoop,this)),this.$element=r(e),this.affixed=null,this.unpin=null,this.pinnedOffset=null,this.checkPosition()}function n(n){return this.each(function(){var e=r(this),t=e.data("bs.affix");t||e.data("bs.affix",t=new a(this,"object"==typeof n&&n)),"string"==typeof n&&t[n]()})}a.VERSION="3.4.1",a.RESET="affix affix-top affix-bottom",a.DEFAULTS={offset:0,target:window},a.prototype.getState=function(e,t,n,i){var o=this.$target.scrollTop(),s=this.$element.offset(),r=this.$target.height();if(null!=n&&"top"==this.affixed)return o<n&&"top";if("bottom"==this.affixed)return null!=n?!(o+this.unpin<=s.top)&&"bottom":!(o+r<=e-i)&&"bottom";var a=null==this.affixed,s=a?o:s.top;return null!=n&&o<=n?"top":null!=i&&e-i<=s+(a?r:t)&&"bottom"},a.prototype.getPinnedOffset=function(){if(this.pinnedOffset)return this.pinnedOffset;this.$element.removeClass(a.RESET).addClass("affix");var e=this.$target.scrollTop(),t=this.$element.offset();return this.pinnedOffset=t.top-e},a.prototype.checkPositionWithEventLoop=function(){setTimeout(r.proxy(this.checkPosition,this),1)},a.prototype.checkPosition=function(){if(this.$element.is(":visible")){var e=this.$element.height(),t=this.options.offset,n=t.top,i=t.bottom,o=Math.max(r(document).height(),r(document.body).height()),t=("object"!=typeof t&&(i=n=t),"function"==typeof n&&(n=t.top(this.$element)),"function"==typeof i&&(i=t.bottom(this.$element)),this.getState(o,e,n,i));if(this.affixed!=t){null!=this.unpin&&this.$element.css("top","");var n="affix"+(t?"-"+t:""),s=r.Event(n+".bs.affix");if(this.$element.trigger(s),s.isDefaultPrevented())return;this.affixed=t,this.unpin="bottom"==t?this.getPinnedOffset():null,this.$element.removeClass(a.RESET).addClass(n).trigger(n.replace("affix","affixed")+".bs.affix")}"bottom"==t&&this.$element.offset({top:o-e-i})}};var e=r.fn.affix;r.fn.affix=n,r.fn.affix.Constructor=a,r.fn.affix.noConflict=function(){return r.fn.affix=e,this},r(window).on("load",function(){r('[data-spy="affix"]').each(function(){var e=r(this),t=e.data();t.offset=t.offset||{},null!=t.offsetBottom&&(t.offset.bottom=t.offsetBottom),null!=t.offsetTop&&(t.offset.top=t.offsetTop),n.call(e,t)})})}(jQuery)},{}],7:[function(e,t,n){!function(s){"use strict";function r(e){s(e).on("click",t,this.close)}var t='[data-dismiss="alert"]';r.VERSION="3.4.1",r.TRANSITION_DURATION=150,r.prototype.close=function(e){var t=s(this),n=t.attr("data-target"),i=(n="#"===(n=n||(n=t.attr("href"))&&n.replace(/.*(?=#[^\s]*$)/,""))?[]:n,s(document).find(n));function o(){i.detach().trigger("closed.bs.alert").remove()}e&&e.preventDefault(),(i=i.length?i:t.closest(".alert")).trigger(e=s.Event("close.bs.alert")),e.isDefaultPrevented()||(i.removeClass("in"),s.support.transition&&i.hasClass("fade")?i.one("bsTransitionEnd",o).emulateTransitionEnd(r.TRANSITION_DURATION):o())};var e=s.fn.alert;s.fn.alert=function(n){return this.each(function(){var e=s(this),t=e.data("bs.alert");t||e.data("bs.alert",t=new r(this)),"string"==typeof n&&t[n].call(e)})},s.fn.alert.Constructor=r,s.fn.alert.noConflict=function(){return s.fn.alert=e,this},s(document).on("click.bs.alert.data-api",t,r.prototype.close)}(jQuery)},{}],8:[function(e,t,n){!function(s){"use strict";function i(e,t){this.$element=s(e),this.options=s.extend({},i.DEFAULTS,t),this.isLoading=!1}function n(n){return this.each(function(){var e=s(this),t=e.data("bs.button");t||e.data("bs.button",t=new i(this,"object"==typeof n&&n)),"toggle"==n?t.toggle():n&&t.setState(n)})}i.VERSION="3.4.1",i.DEFAULTS={loadingText:"loading..."},i.prototype.setState=function(e){var t="disabled",n=this.$element,i=n.is("input")?"val":"html",o=n.data();e+="Text",null==o.resetText&&n.data("resetText",n[i]()),setTimeout(s.proxy(function(){n[i]((null==o[e]?this.options:o)[e]),"loadingText"==e?(this.isLoading=!0,n.addClass(t).attr(t,t).prop(t,!0)):this.isLoading&&(this.isLoading=!1,n.removeClass(t).removeAttr(t).prop(t,!1))},this),0)},i.prototype.toggle=function(){var e,t=!0,n=this.$element.closest('[data-toggle="buttons"]');n.length?("radio"==(e=this.$element.find("input")).prop("type")?(e.prop("checked")&&(t=!1),n.find(".active").removeClass("active"),this.$element.addClass("active")):"checkbox"==e.prop("type")&&(e.prop("checked")!==this.$element.hasClass("active")&&(t=!1),this.$element.toggleClass("active")),e.prop("checked",this.$element.hasClass("active")),t&&e.trigger("change")):(this.$element.attr("aria-pressed",!this.$element.hasClass("active")),this.$element.toggleClass("active"))};var e=s.fn.button;s.fn.button=n,s.fn.button.Constructor=i,s.fn.button.noConflict=function(){return s.fn.button=e,this},s(document).on("click.bs.button.data-api",'[data-toggle^="button"]',function(e){var t=s(e.target).closest(".btn");n.call(t,"toggle"),s(e.target).is('input[type="radio"], input[type="checkbox"]')||(e.preventDefault(),(t.is("input,button")?t:t.find("input:visible,button:visible").first()).trigger("focus"))}).on("focus.bs.button.data-api blur.bs.button.data-api",'[data-toggle^="button"]',function(e){s(e.target).closest(".btn").toggleClass("focus",/^focus(in)?$/.test(e.type))})}(jQuery)},{}],9:[function(e,t,n){!function(c){"use strict";function u(e,t){this.$element=c(e),this.$indicators=this.$element.find(".carousel-indicators"),this.options=t,this.paused=null,this.sliding=null,this.interval=null,this.$active=null,this.$items=null,this.options.keyboard&&this.$element.on("keydown.bs.carousel",c.proxy(this.keydown,this)),"hover"!=this.options.pause||"ontouchstart"in document.documentElement||this.$element.on("mouseenter.bs.carousel",c.proxy(this.pause,this)).on("mouseleave.bs.carousel",c.proxy(this.cycle,this))}function o(o){return this.each(function(){var e=c(this),t=e.data("bs.carousel"),n=c.extend({},u.DEFAULTS,e.data(),"object"==typeof o&&o),i="string"==typeof o?o:n.slide;t||e.data("bs.carousel",t=new u(this,n)),"number"==typeof o?t.to(o):i?t[i]():n.interval&&t.pause().cycle()})}u.VERSION="3.4.1",u.TRANSITION_DURATION=600,u.DEFAULTS={interval:5e3,pause:"hover",wrap:!0,keyboard:!0},u.prototype.keydown=function(e){if(!/input|textarea/i.test(e.target.tagName)){switch(e.which){case 37:this.prev();break;case 39:this.next();break;default:return}e.preventDefault()}},u.prototype.cycle=function(e){return e||(this.paused=!1),this.interval&&clearInterval(this.interval),this.options.interval&&!this.paused&&(this.interval=setInterval(c.proxy(this.next,this),this.options.interval)),this},u.prototype.getItemIndex=function(e){return this.$items=e.parent().children(".item"),this.$items.index(e||this.$active)},u.prototype.getItemForDirection=function(e,t){var n=this.getItemIndex(t);if(("prev"==e&&0===n||"next"==e&&n==this.$items.length-1)&&!this.options.wrap)return t;t=(n+("prev"==e?-1:1))%this.$items.length;return this.$items.eq(t)},u.prototype.to=function(e){var t=this,n=this.getItemIndex(this.$active=this.$element.find(".item.active"));if(!(e>this.$items.length-1||e<0))return this.sliding?this.$element.one("slid.bs.carousel",function(){t.to(e)}):n==e?this.pause().cycle():this.slide(n<e?"next":"prev",this.$items.eq(e))},u.prototype.pause=function(e){return e||(this.paused=!0),this.$element.find(".next, .prev").length&&c.support.transition&&(this.$element.trigger(c.support.transition.end),this.cycle(!0)),this.interval=clearInterval(this.interval),this},u.prototype.next=function(){if(!this.sliding)return this.slide("next")},u.prototype.prev=function(){if(!this.sliding)return this.slide("prev")},u.prototype.slide=function(e,t){var n=this.$element.find(".item.active"),i=t||this.getItemForDirection(e,n),t=this.interval,o="next"==e?"left":"right",s=this;if(i.hasClass("active"))return this.sliding=!1;var r,a=i[0],l=c.Event("slide.bs.carousel",{relatedTarget:a,direction:o});if(this.$element.trigger(l),!l.isDefaultPrevented())return this.sliding=!0,t&&this.pause(),this.$indicators.length&&(this.$indicators.find(".active").removeClass("active"),(l=c(this.$indicators.children()[this.getItemIndex(i)]))&&l.addClass("active")),r=c.Event("slid.bs.carousel",{relatedTarget:a,direction:o}),c.support.transition&&this.$element.hasClass("slide")?(i.addClass(e),"object"==typeof i&&i.length&&i[0].offsetWidth,n.addClass(o),i.addClass(o),n.one("bsTransitionEnd",function(){i.removeClass([e,o].join(" ")).addClass("active"),n.removeClass(["active",o].join(" ")),s.sliding=!1,setTimeout(function(){s.$element.trigger(r)},0)}).emulateTransitionEnd(u.TRANSITION_DURATION)):(n.removeClass("active"),i.addClass("active"),this.sliding=!1,this.$element.trigger(r)),t&&this.cycle(),this};function e(e){var t,n=c(this),i=(i=n.attr("href"))&&i.replace(/.*(?=#[^\s]+$)/,""),i=n.attr("data-target")||i;(i=c(document).find(i)).hasClass("carousel")&&(t=c.extend({},i.data(),n.data()),(n=n.attr("data-slide-to"))&&(t.interval=!1),o.call(i,t),n&&i.data("bs.carousel").to(n),e.preventDefault())}var t=c.fn.carousel;c.fn.carousel=o,c.fn.carousel.Constructor=u,c.fn.carousel.noConflict=function(){return c.fn.carousel=t,this};c(document).on("click.bs.carousel.data-api","[data-slide]",e).on("click.bs.carousel.data-api","[data-slide-to]",e),c(window).on("load",function(){c('[data-ride="carousel"]').each(function(){var e=c(this);o.call(e,e.data())})})}(jQuery)},{}],10:[function(e,t,n){!function(o){"use strict";function s(e,t){this.$element=o(e),this.options=o.extend({},s.DEFAULTS,t),this.$trigger=o('[data-toggle="collapse"][href="#'+e.id+'"],[data-toggle="collapse"][data-target="#'+e.id+'"]'),this.transitioning=null,this.options.parent?this.$parent=this.getParent():this.addAriaAndCollapsedClass(this.$element,this.$trigger),this.options.toggle&&this.toggle()}function n(e){e=e.attr("data-target")||(e=e.attr("href"))&&e.replace(/.*(?=#[^\s]+$)/,"");return o(document).find(e)}function r(i){return this.each(function(){var e=o(this),t=e.data("bs.collapse"),n=o.extend({},s.DEFAULTS,e.data(),"object"==typeof i&&i);!t&&n.toggle&&/show|hide/.test(i)&&(n.toggle=!1),t||e.data("bs.collapse",t=new s(this,n)),"string"==typeof i&&t[i]()})}s.VERSION="3.4.1",s.TRANSITION_DURATION=350,s.DEFAULTS={toggle:!0},s.prototype.dimension=function(){return this.$element.hasClass("width")?"width":"height"},s.prototype.show=function(){if(!this.transitioning&&!this.$element.hasClass("in")){var e=this.$parent&&this.$parent.children(".panel").children(".in, .collapsing");if(!(e&&e.length&&(i=e.data("bs.collapse"))&&i.transitioning)){var t=o.Event("show.bs.collapse");if(this.$element.trigger(t),!t.isDefaultPrevented()){e&&e.length&&(r.call(e,"hide"),i||e.data("bs.collapse",null));var n=this.dimension(),t=(this.$element.removeClass("collapse").addClass("collapsing")[n](0).attr("aria-expanded",!0),this.$trigger.removeClass("collapsed").attr("aria-expanded",!0),this.transitioning=1,function(){this.$element.removeClass("collapsing").addClass("collapse in")[n](""),this.transitioning=0,this.$element.trigger("shown.bs.collapse")});if(!o.support.transition)return t.call(this);var i=o.camelCase(["scroll",n].join("-"));this.$element.one("bsTransitionEnd",o.proxy(t,this)).emulateTransitionEnd(s.TRANSITION_DURATION)[n](this.$element[0][i])}}}},s.prototype.hide=function(){if(!this.transitioning&&this.$element.hasClass("in")){var e=o.Event("hide.bs.collapse");if(this.$element.trigger(e),!e.isDefaultPrevented()){var e=this.dimension(),t=(this.$element[e](this.$element[e]())[0].offsetHeight,this.$element.addClass("collapsing").removeClass("collapse in").attr("aria-expanded",!1),this.$trigger.addClass("collapsed").attr("aria-expanded",!1),this.transitioning=1,function(){this.transitioning=0,this.$element.removeClass("collapsing").addClass("collapse").trigger("hidden.bs.collapse")});if(!o.support.transition)return t.call(this);this.$element[e](0).one("bsTransitionEnd",o.proxy(t,this)).emulateTransitionEnd(s.TRANSITION_DURATION)}}},s.prototype.toggle=function(){this[this.$element.hasClass("in")?"hide":"show"]()},s.prototype.getParent=function(){return o(document).find(this.options.parent).find('[data-toggle="collapse"][data-parent="'+this.options.parent+'"]').each(o.proxy(function(e,t){t=o(t);this.addAriaAndCollapsedClass(n(t),t)},this)).end()},s.prototype.addAriaAndCollapsedClass=function(e,t){var n=e.hasClass("in");e.attr("aria-expanded",n),t.toggleClass("collapsed",!n).attr("aria-expanded",n)};var e=o.fn.collapse;o.fn.collapse=r,o.fn.collapse.Constructor=s,o.fn.collapse.noConflict=function(){return o.fn.collapse=e,this},o(document).on("click.bs.collapse.data-api",'[data-toggle="collapse"]',function(e){var t=o(this),e=(t.attr("data-target")||e.preventDefault(),n(t)),t=e.data("bs.collapse")?"toggle":t.data();r.call(e,t)})}(jQuery)},{}],11:[function(e,t,n){!function(o){"use strict";function i(e){o(e).on("click.bs.dropdown",this.toggle)}var s='[data-toggle="dropdown"]';function r(e){var t=e.attr("data-target"),t="#"!==(t=t||(t=e.attr("href"))&&/#[A-Za-z]/.test(t)&&t.replace(/.*(?=#[^\s]*$)/,""))?o(document).find(t):null;return t&&t.length?t:e.parent()}function a(i){i&&3===i.which||(o(".dropdown-backdrop").remove(),o(s).each(function(){var e=o(this),t=r(e),n={relatedTarget:this};!t.hasClass("open")||i&&"click"==i.type&&/input|textarea/i.test(i.target.tagName)&&o.contains(t[0],i.target)||(t.trigger(i=o.Event("hide.bs.dropdown",n)),i.isDefaultPrevented()||(e.attr("aria-expanded","false"),t.removeClass("open").trigger(o.Event("hidden.bs.dropdown",n))))}))}i.VERSION="3.4.1",i.prototype.toggle=function(e){var t=o(this);if(!t.is(".disabled, :disabled")){var n=r(t),i=n.hasClass("open");if(a(),!i){"ontouchstart"in document.documentElement&&!n.closest(".navbar-nav").length&&o(document.createElement("div")).addClass("dropdown-backdrop").insertAfter(o(this)).on("click",a);i={relatedTarget:this};if(n.trigger(e=o.Event("show.bs.dropdown",i)),e.isDefaultPrevented())return;t.trigger("focus").attr("aria-expanded","true"),n.toggleClass("open").trigger(o.Event("shown.bs.dropdown",i))}return!1}},i.prototype.keydown=function(e){if(/(38|40|27|32)/.test(e.which)&&!/input|textarea/i.test(e.target.tagName)){var t=o(this);if(e.preventDefault(),e.stopPropagation(),!t.is(".disabled, :disabled")){var n=r(t),i=n.hasClass("open");if(!i&&27!=e.which||i&&27==e.which)return 27==e.which&&n.find(s).trigger("focus"),t.trigger("click");i=n.find(".dropdown-menu li:not(.disabled):visible a");i.length&&(t=i.index(e.target),38==e.which&&0<t&&t--,40==e.which&&t<i.length-1&&t++,i.eq(t=~t?t:0).trigger("focus"))}}};var e=o.fn.dropdown;o.fn.dropdown=function(n){return this.each(function(){var e=o(this),t=e.data("bs.dropdown");t||e.data("bs.dropdown",t=new i(this)),"string"==typeof n&&t[n].call(e)})},o.fn.dropdown.Constructor=i,o.fn.dropdown.noConflict=function(){return o.fn.dropdown=e,this},o(document).on("click.bs.dropdown.data-api",a).on("click.bs.dropdown.data-api",".dropdown form",function(e){e.stopPropagation()}).on("click.bs.dropdown.data-api",s,i.prototype.toggle).on("keydown.bs.dropdown.data-api",s,i.prototype.keydown).on("keydown.bs.dropdown.data-api",".dropdown-menu",i.prototype.keydown)}(jQuery)},{}],12:[function(e,t,n){!function(s){"use strict";function r(e,t){this.options=t,this.$body=s(document.body),this.$element=s(e),this.$dialog=this.$element.find(".modal-dialog"),this.$backdrop=null,this.isShown=null,this.originalBodyPad=null,this.scrollbarWidth=0,this.ignoreBackdropClick=!1,this.fixedContent=".navbar-fixed-top, .navbar-fixed-bottom",this.options.remote&&this.$element.find(".modal-content").load(this.options.remote,s.proxy(function(){this.$element.trigger("loaded.bs.modal")},this))}function a(i,o){return this.each(function(){var e=s(this),t=e.data("bs.modal"),n=s.extend({},r.DEFAULTS,e.data(),"object"==typeof i&&i);t||e.data("bs.modal",t=new r(this,n)),"string"==typeof i?t[i](o):n.show&&t.show(o)})}r.VERSION="3.4.1",r.TRANSITION_DURATION=300,r.BACKDROP_TRANSITION_DURATION=150,r.DEFAULTS={backdrop:!0,keyboard:!0,show:!0},r.prototype.toggle=function(e){return this.isShown?this.hide():this.show(e)},r.prototype.show=function(n){var i=this,e=s.Event("show.bs.modal",{relatedTarget:n});this.$element.trigger(e),this.isShown||e.isDefaultPrevented()||(this.isShown=!0,this.checkScrollbar(),this.setScrollbar(),this.$body.addClass("modal-open"),this.escape(),this.resize(),this.$element.on("click.dismiss.bs.modal",'[data-dismiss="modal"]',s.proxy(this.hide,this)),this.$dialog.on("mousedown.dismiss.bs.modal",function(){i.$element.one("mouseup.dismiss.bs.modal",function(e){s(e.target).is(i.$element)&&(i.ignoreBackdropClick=!0)})}),this.backdrop(function(){var e=s.support.transition&&i.$element.hasClass("fade"),t=(i.$element.parent().length||i.$element.appendTo(i.$body),i.$element.show().scrollTop(0),i.adjustDialog(),e&&i.$element[0].offsetWidth,i.$element.addClass("in"),i.enforceFocus(),s.Event("shown.bs.modal",{relatedTarget:n}));e?i.$dialog.one("bsTransitionEnd",function(){i.$element.trigger("focus").trigger(t)}).emulateTransitionEnd(r.TRANSITION_DURATION):i.$element.trigger("focus").trigger(t)}))},r.prototype.hide=function(e){e&&e.preventDefault(),e=s.Event("hide.bs.modal"),this.$element.trigger(e),this.isShown&&!e.isDefaultPrevented()&&(this.isShown=!1,this.escape(),this.resize(),s(document).off("focusin.bs.modal"),this.$element.removeClass("in").off("click.dismiss.bs.modal").off("mouseup.dismiss.bs.modal"),this.$dialog.off("mousedown.dismiss.bs.modal"),s.support.transition&&this.$element.hasClass("fade")?this.$element.one("bsTransitionEnd",s.proxy(this.hideModal,this)).emulateTransitionEnd(r.TRANSITION_DURATION):this.hideModal())},r.prototype.enforceFocus=function(){s(document).off("focusin.bs.modal").on("focusin.bs.modal",s.proxy(function(e){document===e.target||this.$element[0]===e.target||this.$element.has(e.target).length||this.$element.trigger("focus")},this))},r.prototype.escape=function(){this.isShown&&this.options.keyboard?this.$element.on("keydown.dismiss.bs.modal",s.proxy(function(e){27==e.which&&this.hide()},this)):this.isShown||this.$element.off("keydown.dismiss.bs.modal")},r.prototype.resize=function(){this.isShown?s(window).on("resize.bs.modal",s.proxy(this.handleUpdate,this)):s(window).off("resize.bs.modal")},r.prototype.hideModal=function(){var e=this;this.$element.hide(),this.backdrop(function(){e.$body.removeClass("modal-open"),e.resetAdjustments(),e.resetScrollbar(),e.$element.trigger("hidden.bs.modal")})},r.prototype.removeBackdrop=function(){this.$backdrop&&this.$backdrop.remove(),this.$backdrop=null},r.prototype.backdrop=function(e){var t,n=this,i=this.$element.hasClass("fade")?"fade":"";this.isShown&&this.options.backdrop?(t=s.support.transition&&i,this.$backdrop=s(document.createElement("div")).addClass("modal-backdrop "+i).appendTo(this.$body),this.$element.on("click.dismiss.bs.modal",s.proxy(function(e){this.ignoreBackdropClick?this.ignoreBackdropClick=!1:e.target===e.currentTarget&&("static"==this.options.backdrop?this.$element[0].focus():this.hide())},this)),t&&this.$backdrop[0].offsetWidth,this.$backdrop.addClass("in"),e&&(t?this.$backdrop.one("bsTransitionEnd",e).emulateTransitionEnd(r.BACKDROP_TRANSITION_DURATION):e())):!this.isShown&&this.$backdrop?(this.$backdrop.removeClass("in"),i=function(){n.removeBackdrop(),e&&e()},s.support.transition&&this.$element.hasClass("fade")?this.$backdrop.one("bsTransitionEnd",i).emulateTransitionEnd(r.BACKDROP_TRANSITION_DURATION):i()):e&&e()},r.prototype.handleUpdate=function(){this.adjustDialog()},r.prototype.adjustDialog=function(){var e=this.$element[0].scrollHeight>document.documentElement.clientHeight;this.$element.css({paddingLeft:!this.bodyIsOverflowing&&e?this.scrollbarWidth:"",paddingRight:this.bodyIsOverflowing&&!e?this.scrollbarWidth:""})},r.prototype.resetAdjustments=function(){this.$element.css({paddingLeft:"",paddingRight:""})},r.prototype.checkScrollbar=function(){var e,t=window.innerWidth;t||(t=(e=document.documentElement.getBoundingClientRect()).right-Math.abs(e.left)),this.bodyIsOverflowing=document.body.clientWidth<t,this.scrollbarWidth=this.measureScrollbar()},r.prototype.setScrollbar=function(){var e=parseInt(this.$body.css("padding-right")||0,10),o=(this.originalBodyPad=document.body.style.paddingRight||"",this.scrollbarWidth);this.bodyIsOverflowing&&(this.$body.css("padding-right",e+o),s(this.fixedContent).each(function(e,t){var n=t.style.paddingRight,i=s(t).css("padding-right");s(t).data("padding-right",n).css("padding-right",parseFloat(i)+o+"px")}))},r.prototype.resetScrollbar=function(){this.$body.css("padding-right",this.originalBodyPad),s(this.fixedContent).each(function(e,t){var n=s(t).data("padding-right");s(t).removeData("padding-right"),t.style.paddingRight=n||""})},r.prototype.measureScrollbar=function(){var e=document.createElement("div"),t=(e.className="modal-scrollbar-measure",this.$body.append(e),e.offsetWidth-e.clientWidth);return this.$body[0].removeChild(e),t};var e=s.fn.modal;s.fn.modal=a,s.fn.modal.Constructor=r,s.fn.modal.noConflict=function(){return s.fn.modal=e,this},s(document).on("click.bs.modal.data-api",'[data-toggle="modal"]',function(e){var t=s(this),n=t.attr("href"),i=t.attr("data-target")||n&&n.replace(/.*(?=#[^\s]+$)/,""),o=s(document).find(i),i=o.data("bs.modal")?"toggle":s.extend({remote:!/#/.test(n)&&n},o.data(),t.data());t.is("a")&&e.preventDefault(),o.one("show.bs.modal",function(e){e.isDefaultPrevented()||o.one("hidden.bs.modal",function(){t.is(":visible")&&t.trigger("focus")})}),a.call(o,i,this)})}(jQuery)},{}],13:[function(e,t,n){!function(o){"use strict";function s(e,t){this.init("popover",e,t)}if(!o.fn.tooltip)throw new Error("Popover requires tooltip.js");s.VERSION="3.4.1",s.DEFAULTS=o.extend({},o.fn.tooltip.Constructor.DEFAULTS,{placement:"right",trigger:"click",content:"",template:'<div class="popover" role="tooltip"><div class="arrow"></div><h3 class="popover-title"></h3><div class="popover-content"></div></div>'}),((s.prototype=o.extend({},o.fn.tooltip.Constructor.prototype)).constructor=s).prototype.getDefaults=function(){return s.DEFAULTS},s.prototype.setContent=function(){var e,t=this.tip(),n=this.getTitle(),i=this.getContent();this.options.html?(e=typeof i,this.options.sanitize&&(n=this.sanitizeHtml(n),"string"==e&&(i=this.sanitizeHtml(i))),t.find(".popover-title").html(n),t.find(".popover-content").children().detach().end()["string"==e?"html":"append"](i)):(t.find(".popover-title").text(n),t.find(".popover-content").children().detach().end().text(i)),t.removeClass("fade top bottom left right in"),t.find(".popover-title").html()||t.find(".popover-title").hide()},s.prototype.hasContent=function(){return this.getTitle()||this.getContent()},s.prototype.getContent=function(){var e=this.$element,t=this.options;return e.attr("data-content")||("function"==typeof t.content?t.content.call(e[0]):t.content)},s.prototype.arrow=function(){return this.$arrow=this.$arrow||this.tip().find(".arrow")};var e=o.fn.popover;o.fn.popover=function(i){return this.each(function(){var e=o(this),t=e.data("bs.popover"),n="object"==typeof i&&i;!t&&/destroy|hide/.test(i)||(t||e.data("bs.popover",t=new s(this,n)),"string"==typeof i&&t[i]())})},o.fn.popover.Constructor=s,o.fn.popover.noConflict=function(){return o.fn.popover=e,this}}(jQuery)},{}],14:[function(e,t,n){!function(o){"use strict";function i(e,t){this.$body=o(document.body),this.$scrollElement=o(e).is(document.body)?o(window):o(e),this.options=o.extend({},i.DEFAULTS,t),this.selector=(this.options.target||"")+" .nav li > a",this.offsets=[],this.targets=[],this.activeTarget=null,this.scrollHeight=0,this.$scrollElement.on("scroll.bs.scrollspy",o.proxy(this.process,this)),this.refresh(),this.process()}function t(n){return this.each(function(){var e=o(this),t=e.data("bs.scrollspy");t||e.data("bs.scrollspy",t=new i(this,"object"==typeof n&&n)),"string"==typeof n&&t[n]()})}i.VERSION="3.4.1",i.DEFAULTS={offset:10},i.prototype.getScrollHeight=function(){return this.$scrollElement[0].scrollHeight||Math.max(this.$body[0].scrollHeight,document.documentElement.scrollHeight)},i.prototype.refresh=function(){var e=this,n="offset",i=0;this.offsets=[],this.targets=[],this.scrollHeight=this.getScrollHeight(),o.isWindow(this.$scrollElement[0])||(n="position",i=this.$scrollElement.scrollTop()),this.$body.find(this.selector).map(function(){var e=o(this),e=e.data("target")||e.attr("href"),t=/^#./.test(e)&&o(e);return t&&t.length&&t.is(":visible")?[[t[n]().top+i,e]]:null}).sort(function(e,t){return e[0]-t[0]}).each(function(){e.offsets.push(this[0]),e.targets.push(this[1])})},i.prototype.process=function(){var e,t=this.$scrollElement.scrollTop()+this.options.offset,n=this.getScrollHeight(),i=this.options.offset+n-this.$scrollElement.height(),o=this.offsets,s=this.targets,r=this.activeTarget;if(this.scrollHeight!=n&&this.refresh(),i<=t)return r!=(e=s[s.length-1])&&this.activate(e);if(r&&t<o[0])return this.activeTarget=null,this.clear();for(e=o.length;e--;)r!=s[e]&&t>=o[e]&&(void 0===o[e+1]||t<o[e+1])&&this.activate(s[e])},i.prototype.activate=function(e){this.activeTarget=e,this.clear();e=this.selector+'[data-target="'+e+'"],'+this.selector+'[href="'+e+'"]',e=o(e).parents("li").addClass("active");(e=e.parent(".dropdown-menu").length?e.closest("li.dropdown").addClass("active"):e).trigger("activate.bs.scrollspy")},i.prototype.clear=function(){o(this.selector).parentsUntil(this.options.target,".active").removeClass("active")};var e=o.fn.scrollspy;o.fn.scrollspy=t,o.fn.scrollspy.Constructor=i,o.fn.scrollspy.noConflict=function(){return o.fn.scrollspy=e,this},o(window).on("load.bs.scrollspy.data-api",function(){o('[data-spy="scroll"]').each(function(){var e=o(this);t.call(e,e.data())})})}(jQuery)},{}],15:[function(e,t,n){!function(r){"use strict";function a(e){this.element=r(e)}function t(n){return this.each(function(){var e=r(this),t=e.data("bs.tab");t||e.data("bs.tab",t=new a(this)),"string"==typeof n&&t[n]()})}a.VERSION="3.4.1",a.TRANSITION_DURATION=150,a.prototype.show=function(){var e,t,n,i=this.element,o=i.closest("ul:not(.dropdown-menu)"),s=(s=i.data("target"))||(s=i.attr("href"))&&s.replace(/.*(?=#[^\s]*$)/,"");i.parent("li").hasClass("active")||(e=o.find(".active:last a"),t=r.Event("hide.bs.tab",{relatedTarget:i[0]}),n=r.Event("show.bs.tab",{relatedTarget:e[0]}),e.trigger(t),i.trigger(n),n.isDefaultPrevented()||t.isDefaultPrevented()||(n=r(document).find(s),this.activate(i.closest("li"),o),this.activate(n,n.parent(),function(){e.trigger({type:"hidden.bs.tab",relatedTarget:i[0]}),i.trigger({type:"shown.bs.tab",relatedTarget:e[0]})})))},a.prototype.activate=function(e,t,n){var i=t.find("> .active"),o=n&&r.support.transition&&(i.length&&i.hasClass("fade")||!!t.find("> .fade").length);function s(){i.removeClass("active").find("> .dropdown-menu > .active").removeClass("active").end().find('[data-toggle="tab"]').attr("aria-expanded",!1),e.addClass("active").find('[data-toggle="tab"]').attr("aria-expanded",!0),o?(e[0].offsetWidth,e.addClass("in")):e.removeClass("fade"),e.parent(".dropdown-menu").length&&e.closest("li.dropdown").addClass("active").end().find('[data-toggle="tab"]').attr("aria-expanded",!0),n&&n()}i.length&&o?i.one("bsTransitionEnd",s).emulateTransitionEnd(a.TRANSITION_DURATION):s(),i.removeClass("in")};function e(e){e.preventDefault(),t.call(r(this),"show")}var n=r.fn.tab;r.fn.tab=t,r.fn.tab.Constructor=a,r.fn.tab.noConflict=function(){return r.fn.tab=n,this};r(document).on("click.bs.tab.data-api",'[data-toggle="tab"]',e).on("click.bs.tab.data-api",'[data-toggle="pill"]',e)}(jQuery)},{}],16:[function(e,t,n){!function(h){"use strict";var i=["sanitize","whiteList","sanitizeFn"],f=["background","cite","href","itemtype","longdesc","poster","src","xlink:href"],e={"*":["class","dir","id","lang","role",/^aria-[\w-]*$/i],a:["target","href","title","rel"],area:[],b:[],br:[],col:[],code:[],div:[],em:[],hr:[],h1:[],h2:[],h3:[],h4:[],h5:[],h6:[],i:[],img:["src","alt","title","width","height"],li:[],ol:[],p:[],pre:[],s:[],small:[],span:[],sub:[],sup:[],strong:[],u:[],ul:[]},m=/^(?:(?:https?|mailto|ftp|tel|file):|[^&:/?#]*(?:[/?#]|$))/gi,g=/^data:(?:image\/(?:bmp|gif|jpeg|jpg|png|tiff|webp)|video\/(?:mpeg|mp4|ogg|webm)|audio\/(?:mp3|oga|ogg|opus));base64,[a-z0-9+/]+=*$/i;function o(e,t,n){if(0===e.length)return e;if(n&&"function"==typeof n)return n(e);if(!document.implementation||!document.implementation.createHTMLDocument)return e;for(var n=document.implementation.createHTMLDocument("sanitization"),i=(n.body.innerHTML=e,h.map(t,function(e,t){return t})),o=h(n.body).find("*"),s=0,r=o.length;s<r;s++){var a=o[s],l=a.nodeName.toLowerCase();if(-1===h.inArray(l,i))a.parentNode.removeChild(a);else for(var c=h.map(a.attributes,function(e){return e}),u=[].concat(t["*"]||[],t[l]||[]),d=0,p=c.length;d<p;d++)!function(e,t){var n=e.nodeName.toLowerCase();if(-1!==h.inArray(n,t))return-1===h.inArray(n,f)||Boolean(e.nodeValue.match(m)||e.nodeValue.match(g));for(var i=h(t).filter(function(e,t){return t instanceof RegExp}),o=0,s=i.length;o<s;o++)if(n.match(i[o]))return 1}(c[d],u)&&a.removeAttribute(c[d].nodeName)}return n.body.innerHTML}function l(e,t){this.type=null,this.options=null,this.enabled=null,this.timeout=null,this.hoverState=null,this.$element=null,this.inState=null,this.init("tooltip",e,t)}l.VERSION="3.4.1",l.TRANSITION_DURATION=150,l.DEFAULTS={animation:!0,placement:"top",selector:!1,template:'<div class="tooltip" role="tooltip"><div class="tooltip-arrow"></div><div class="tooltip-inner"></div></div>',trigger:"hover focus",title:"",delay:0,html:!1,container:!1,viewport:{selector:"body",padding:0},sanitize:!0,sanitizeFn:null,whiteList:e},l.prototype.init=function(e,t,n){if(this.enabled=!0,this.type=e,this.$element=h(t),this.options=this.getOptions(n),this.$viewport=this.options.viewport&&h(document).find(h.isFunction(this.options.viewport)?this.options.viewport.call(this,this.$element):this.options.viewport.selector||this.options.viewport),this.inState={click:!1,hover:!1,focus:!1},this.$element[0]instanceof document.constructor&&!this.options.selector)throw new Error("`selector` option must be specified when initializing "+this.type+" on the window.document object!");for(var i=this.options.trigger.split(" "),o=i.length;o--;){var s,r=i[o];"click"==r?this.$element.on("click."+this.type,this.options.selector,h.proxy(this.toggle,this)):"manual"!=r&&(s="hover"==r?"mouseleave":"focusout",this.$element.on(("hover"==r?"mouseenter":"focusin")+"."+this.type,this.options.selector,h.proxy(this.enter,this)),this.$element.on(s+"."+this.type,this.options.selector,h.proxy(this.leave,this)))}this.options.selector?this._options=h.extend({},this.options,{trigger:"manual",selector:""}):this.fixTitle()},l.prototype.getDefaults=function(){return l.DEFAULTS},l.prototype.getOptions=function(e){var t,n=this.$element.data();for(t in n)n.hasOwnProperty(t)&&-1!==h.inArray(t,i)&&delete n[t];return(e=h.extend({},this.getDefaults(),n,e)).delay&&"number"==typeof e.delay&&(e.delay={show:e.delay,hide:e.delay}),e.sanitize&&(e.template=o(e.template,e.whiteList,e.sanitizeFn)),e},l.prototype.getDelegateOptions=function(){var n={},i=this.getDefaults();return this._options&&h.each(this._options,function(e,t){i[e]!=t&&(n[e]=t)}),n},l.prototype.enter=function(e){var t=e instanceof this.constructor?e:h(e.currentTarget).data("bs."+this.type);if(t||(t=new this.constructor(e.currentTarget,this.getDelegateOptions()),h(e.currentTarget).data("bs."+this.type,t)),e instanceof h.Event&&(t.inState["focusin"==e.type?"focus":"hover"]=!0),t.tip().hasClass("in")||"in"==t.hoverState)t.hoverState="in";else{if(clearTimeout(t.timeout),t.hoverState="in",!t.options.delay||!t.options.delay.show)return t.show();t.timeout=setTimeout(function(){"in"==t.hoverState&&t.show()},t.options.delay.show)}},l.prototype.isInStateTrue=function(){for(var e in this.inState)if(this.inState[e])return!0;return!1},l.prototype.leave=function(e){var t=e instanceof this.constructor?e:h(e.currentTarget).data("bs."+this.type);if(t||(t=new this.constructor(e.currentTarget,this.getDelegateOptions()),h(e.currentTarget).data("bs."+this.type,t)),e instanceof h.Event&&(t.inState["focusout"==e.type?"focus":"hover"]=!1),!t.isInStateTrue()){if(clearTimeout(t.timeout),t.hoverState="out",!t.options.delay||!t.options.delay.hide)return t.hide();t.timeout=setTimeout(function(){"out"==t.hoverState&&t.hide()},t.options.delay.hide)}},l.prototype.show=function(){var t,e,n,i,o,s,r,a=h.Event("show.bs."+this.type);this.hasContent()&&this.enabled&&(this.$element.trigger(a),o=h.contains(this.$element[0].ownerDocument.documentElement,this.$element[0]),!a.isDefaultPrevented()&&o&&(a=(t=this).tip(),o=this.getUID(this.type),this.setContent(),a.attr("id",o),this.$element.attr("aria-describedby",o),this.options.animation&&a.addClass("fade"),o="function"==typeof this.options.placement?this.options.placement.call(this,a[0],this.$element[0]):this.options.placement,(r=(e=/\s?auto?\s?/i).test(o))&&(o=o.replace(e,"")||"top"),a.detach().css({top:0,left:0,display:"block"}).addClass(o).data("bs."+this.type,this),this.options.container?a.appendTo(h(document).find(this.options.container)):a.insertAfter(this.$element),this.$element.trigger("inserted.bs."+this.type),e=this.getPosition(),n=a[0].offsetWidth,i=a[0].offsetHeight,r&&(r=o,s=this.getPosition(this.$viewport),o="bottom"==o&&e.bottom+i>s.bottom?"top":"top"==o&&e.top-i<s.top?"bottom":"right"==o&&e.right+n>s.width?"left":"left"==o&&e.left-n<s.left?"right":o,a.removeClass(r).addClass(o)),s=this.getCalculatedOffset(o,e,n,i),this.applyPlacement(s,o),r=function(){var e=t.hoverState;t.$element.trigger("shown.bs."+t.type),t.hoverState=null,"out"==e&&t.leave(t)},h.support.transition&&this.$tip.hasClass("fade")?a.one("bsTransitionEnd",r).emulateTransitionEnd(l.TRANSITION_DURATION):r()))},l.prototype.applyPlacement=function(e,t){var n=this.tip(),i=n[0].offsetWidth,o=n[0].offsetHeight,s=parseInt(n.css("margin-top"),10),r=parseInt(n.css("margin-left"),10),s=(isNaN(s)&&(s=0),isNaN(r)&&(r=0),e.top+=s,e.left+=r,h.offset.setOffset(n[0],h.extend({using:function(e){n.css({top:Math.round(e.top),left:Math.round(e.left)})}},e),0),n.addClass("in"),n[0].offsetWidth),r=n[0].offsetHeight,a=("top"==t&&r!=o&&(e.top=e.top+o-r),this.getViewportAdjustedDelta(t,e,s,r)),t=(a.left?e.left+=a.left:e.top+=a.top,/top|bottom/.test(t)),i=t?2*a.left-i+s:2*a.top-o+r,s=t?"offsetWidth":"offsetHeight";n.offset(e),this.replaceArrow(i,n[0][s],t)},l.prototype.replaceArrow=function(e,t,n){this.arrow().css(n?"left":"top",50*(1-e/t)+"%").css(n?"top":"left","")},l.prototype.setContent=function(){var e=this.tip(),t=this.getTitle();this.options.html?(this.options.sanitize&&(t=o(t,this.options.whiteList,this.options.sanitizeFn)),e.find(".tooltip-inner").html(t)):e.find(".tooltip-inner").text(t),e.removeClass("fade in top bottom left right")},l.prototype.hide=function(e){var t=this,n=h(this.$tip),i=h.Event("hide.bs."+this.type);function o(){"in"!=t.hoverState&&n.detach(),t.$element&&t.$element.removeAttr("aria-describedby").trigger("hidden.bs."+t.type),e&&e()}if(this.$element.trigger(i),!i.isDefaultPrevented())return n.removeClass("in"),h.support.transition&&n.hasClass("fade")?n.one("bsTransitionEnd",o).emulateTransitionEnd(l.TRANSITION_DURATION):o(),this.hoverState=null,this},l.prototype.fixTitle=function(){var e=this.$element;!e.attr("title")&&"string"==typeof e.attr("data-original-title")||e.attr("data-original-title",e.attr("title")||"").attr("title","")},l.prototype.hasContent=function(){return this.getTitle()},l.prototype.getPosition=function(e){var t=(e=e||this.$element)[0],n="BODY"==t.tagName,i=t.getBoundingClientRect(),t=(null==i.width&&(i=h.extend({},i,{width:i.right-i.left,height:i.bottom-i.top})),window.SVGElement&&t instanceof window.SVGElement),t=n?{top:0,left:0}:t?null:e.offset(),e={scroll:n?document.documentElement.scrollTop||document.body.scrollTop:e.scrollTop()},n=n?{width:h(window).width(),height:h(window).height()}:null;return h.extend({},i,e,n,t)},l.prototype.getCalculatedOffset=function(e,t,n,i){return"bottom"==e?{top:t.top+t.height,left:t.left+t.width/2-n/2}:"top"==e?{top:t.top-i,left:t.left+t.width/2-n/2}:"left"==e?{top:t.top+t.height/2-i/2,left:t.left-n}:{top:t.top+t.height/2-i/2,left:t.left+t.width}},l.prototype.getViewportAdjustedDelta=function(e,t,n,i){var o={top:0,left:0};if(!this.$viewport)return o;var s=this.options.viewport&&this.options.viewport.padding||0,r=this.getPosition(this.$viewport);return/right|left/.test(e)?(e=t.top-s-r.scroll,i=t.top+s-r.scroll+i,e<r.top?o.top=r.top-e:i>r.top+r.height&&(o.top=r.top+r.height-i)):(e=t.left-s,i=t.left+s+n,e<r.left?o.left=r.left-e:i>r.right&&(o.left=r.left+r.width-i)),o},l.prototype.getTitle=function(){var e=this.$element,t=this.options;return e.attr("data-original-title")||("function"==typeof t.title?t.title.call(e[0]):t.title)},l.prototype.getUID=function(e){for(;e+=~~(1e6*Math.random()),document.getElementById(e););return e},l.prototype.tip=function(){if(this.$tip||(this.$tip=h(this.options.template),1==this.$tip.length))return this.$tip;throw new Error(this.type+" `template` option must consist of exactly 1 top-level element!")},l.prototype.arrow=function(){return this.$arrow=this.$arrow||this.tip().find(".tooltip-arrow")},l.prototype.enable=function(){this.enabled=!0},l.prototype.disable=function(){this.enabled=!1},l.prototype.toggleEnabled=function(){this.enabled=!this.enabled},l.prototype.toggle=function(e){var t=this;e&&!(t=h(e.currentTarget).data("bs."+this.type))&&(t=new this.constructor(e.currentTarget,this.getDelegateOptions()),h(e.currentTarget).data("bs."+this.type,t)),e?(t.inState.click=!t.inState.click,t.isInStateTrue()?t.enter(t):t.leave(t)):t.tip().hasClass("in")?t.leave(t):t.enter(t)},l.prototype.destroy=function(){var e=this;clearTimeout(this.timeout),this.hide(function(){e.$element.off("."+e.type).removeData("bs."+e.type),e.$tip&&e.$tip.detach(),e.$tip=null,e.$arrow=null,e.$viewport=null,e.$element=null})},l.prototype.sanitizeHtml=function(e){return o(e,this.options.whiteList,this.options.sanitizeFn)};var t=h.fn.tooltip;h.fn.tooltip=function(i){return this.each(function(){var e=h(this),t=e.data("bs.tooltip"),n="object"==typeof i&&i;!t&&/destroy|hide/.test(i)||(t||e.data("bs.tooltip",t=new l(this,n)),"string"==typeof i&&t[i]())})},h.fn.tooltip.Constructor=l,h.fn.tooltip.noConflict=function(){return h.fn.tooltip=t,this}}(jQuery)},{}],17:[function(e,t,n){!function(i){"use strict";i.fn.emulateTransitionEnd=function(e){var t=!1,n=this;i(this).one("bsTransitionEnd",function(){t=!0});return setTimeout(function(){t||i(n).trigger(i.support.transition.end)},e),this},i(function(){i.support.transition=function(){var e,t=document.createElement("bootstrap"),n={WebkitTransition:"webkitTransitionEnd",MozTransition:"transitionend",OTransition:"oTransitionEnd otransitionend",transition:"transitionend"};for(e in n)if(void 0!==t.style[e])return{end:n[e]};return!1}(),i.support.transition&&(i.event.special.bsTransitionEnd={bindType:i.support.transition.end,delegateType:i.support.transition.end,handle:function(e){if(i(e.target).is(this))return e.handleObj.handler.apply(this,arguments)}})})}(jQuery)},{}],18:[function(e,t,n){var i,o;i="undefined"!=typeof window?window:this,o=function(x,R){function z(e,t){return t.toUpperCase()}var e=[],T=x.document,u=e.slice,P=e.concat,W=e.push,o=e.indexOf,M={},F=M.toString,f=M.hasOwnProperty,m={},k=function(e,t){return new k.fn.init(e,t)},q=/^[\s\uFEFF\xA0]+|[\s\uFEFF\xA0]+$/g,B=/^-ms-/,U=/-([\da-z])/gi;function _(e){var t=!!e&&"length"in e&&e.length,n=k.type(e);return"function"!==n&&!k.isWindow(e)&&("array"===n||0===t||"number"==typeof t&&0<t&&t-1 in e)}k.fn=k.prototype={jquery:"2.2.4",constructor:k,selector:"",length:0,toArray:function(){return u.call(this)},get:function(e){return null!=e?e<0?this[e+this.length]:this[e]:u.call(this)},pushStack:function(e){e=k.merge(this.constructor(),e);return e.prevObject=this,e.context=this.context,e},each:function(e){return k.each(this,e)},map:function(n){return this.pushStack(k.map(this,function(e,t){return n.call(e,t,e)}))},slice:function(){return this.pushStack(u.apply(this,arguments))},first:function(){return this.eq(0)},last:function(){return this.eq(-1)},eq:function(e){var t=this.length,e=+e+(e<0?t:0);return this.pushStack(0<=e&&e<t?[this[e]]:[])},end:function(){return this.prevObject||this.constructor()},push:W,sort:e.sort,splice:e.splice},k.extend=k.fn.extend=function(){var e,t,n,i,o,s=arguments[0]||{},r=1,a=arguments.length,l=!1;for("boolean"==typeof s&&(l=s,s=arguments[r]||{},r++),"object"==typeof s||k.isFunction(s)||(s={}),r===a&&(s=this,r--);r<a;r++)if(null!=(e=arguments[r]))for(t in e)o=s[t],s!==(n=e[t])&&(l&&n&&(k.isPlainObject(n)||(i=k.isArray(n)))?(o=i?(i=!1,o&&k.isArray(o)?o:[]):o&&k.isPlainObject(o)?o:{},s[t]=k.extend(l,o,n)):void 0!==n&&(s[t]=n));return s},k.extend({expando:"jQuery"+("2.2.4"+Math.random()).replace(/\D/g,""),isReady:!0,error:function(e){throw new Error(e)},noop:function(){},isFunction:function(e){return"function"===k.type(e)},isArray:Array.isArray,isWindow:function(e){return null!=e&&e===e.window},isNumeric:function(e){var t=e&&e.toString();return!k.isArray(e)&&0<=t-parseFloat(t)+1},isPlainObject:function(e){if("object"!==k.type(e)||e.nodeType||k.isWindow(e))return!1;if(e.constructor&&!f.call(e,"constructor")&&!f.call(e.constructor.prototype||{},"isPrototypeOf"))return!1;for(var t in e);return void 0===t||f.call(e,t)},isEmptyObject:function(e){for(var t in e)return!1;return!0},type:function(e){return null==e?e+"":"object"==typeof e||"function"==typeof e?M[F.call(e)]||"object":typeof e},globalEval:function(e){var t,n=eval;(e=k.trim(e))&&(1===e.indexOf("use strict")?((t=T.createElement("script")).text=e,T.head.appendChild(t).parentNode.removeChild(t)):n(e))},camelCase:function(e){return e.replace(B,"ms-").replace(U,z)},nodeName:function(e,t){return e.nodeName&&e.nodeName.toLowerCase()===t.toLowerCase()},each:function(e,t){var n,i=0;if(_(e))for(n=e.length;i<n&&!1!==t.call(e[i],i,e[i]);i++);else for(i in e)if(!1===t.call(e[i],i,e[i]))break;return e},trim:function(e){return null==e?"":(e+"").replace(q,"")},makeArray:function(e,t){t=t||[];return null!=e&&(_(Object(e))?k.merge(t,"string"==typeof e?[e]:e):W.call(t,e)),t},inArray:function(e,t,n){return null==t?-1:o.call(t,e,n)},merge:function(e,t){for(var n=+t.length,i=0,o=e.length;i<n;i++)e[o++]=t[i];return e.length=o,e},grep:function(e,t,n){for(var i=[],o=0,s=e.length,r=!n;o<s;o++)!t(e[o],o)!=r&&i.push(e[o]);return i},map:function(e,t,n){var i,o,s=0,r=[];if(_(e))for(i=e.length;s<i;s++)null!=(o=t(e[s],s,n))&&r.push(o);else for(s in e)null!=(o=t(e[s],s,n))&&r.push(o);return P.apply([],r)},guid:1,proxy:function(e,t){var n,i;if("string"==typeof t&&(i=e[t],t=e,e=i),k.isFunction(e))return n=u.call(arguments,2),(i=function(){return e.apply(t||this,n.concat(u.call(arguments)))}).guid=e.guid=e.guid||k.guid++,i},now:Date.now,support:m}),"function"==typeof Symbol&&(k.fn[Symbol.iterator]=e[Symbol.iterator]),k.each("Boolean Number String Function Array Date RegExp Object Error Symbol".split(" "),function(e,t){M["[object "+t+"]"]=t.toLowerCase()});function i(e,t,n){for(var i=[],o=void 0!==n;(e=e[t])&&9!==e.nodeType;)if(1===e.nodeType){if(o&&k(e).is(n))break;i.push(e)}return i}function V(e,t){for(var n=[];e;e=e.nextSibling)1===e.nodeType&&e!==t&&n.push(e);return n}var e=function(R){function d(e,t,n){var i="0x"+t-65536;return i!=i||n?t:i<0?String.fromCharCode(65536+i):String.fromCharCode(i>>10|55296,1023&i|56320)}function z(){T()}var e,f,w,s,P,m,W,M,x,l,c,T,k,t,C,g,i,o,v,$="sizzle"+ +new Date,y=R.document,S=0,F=0,q=ce(),B=ce(),b=ce(),U=function(e,t){return e===t&&(c=!0),0},_={}.hasOwnProperty,n=[],V=n.pop,G=n.push,E=n.push,X=n.slice,I=function(e,t){for(var n=0,i=e.length;n<i;n++)if(e[n]===t)return n;return-1},Q="checked|selected|async|autofocus|autoplay|controls|defer|disabled|hidden|ismap|loop|multiple|open|readonly|required|scoped",r="[\\x20\\t\\r\\n\\f]",a="(?:\\\\.|[\\w-]|[^\\x00-\\xa0])+",K="\\["+r+"*("+a+")(?:"+r+"*([*^$|!~]?=)"+r+"*(?:'((?:\\\\.|[^\\\\'])*)'|\"((?:\\\\.|[^\\\\\"])*)\"|("+a+"))|)"+r+"*\\]",Y=":("+a+")(?:\\((('((?:\\\\.|[^\\\\'])*)'|\"((?:\\\\.|[^\\\\\"])*)\")|((?:\\\\.|[^\\\\()[\\]]|"+K+")*)|.*)\\)|)",J=new RegExp(r+"+","g"),N=new RegExp("^"+r+"+|((?:^|[^\\\\])(?:\\\\.)*)"+r+"+$","g"),Z=new RegExp("^"+r+"*,"+r+"*"),ee=new RegExp("^"+r+"*([>+~]|"+r+")"+r+"*"),te=new RegExp("="+r+"*([^\\]'\"]*?)"+r+"*\\]","g"),ne=new RegExp(Y),ie=new RegExp("^"+a+"$"),p={ID:new RegExp("^#("+a+")"),CLASS:new RegExp("^\\.("+a+")"),TAG:new RegExp("^("+a+"|[*])"),ATTR:new RegExp("^"+K),PSEUDO:new RegExp("^"+Y),CHILD:new RegExp("^:(only|first|last|nth|nth-last)-(child|of-type)(?:\\("+r+"*(even|odd|(([+-]|)(\\d*)n|)"+r+"*(?:([+-]|)"+r+"*(\\d+)|))"+r+"*\\)|)","i"),bool:new RegExp("^(?:"+Q+")$","i"),needsContext:new RegExp("^"+r+"*[>+~]|:(even|odd|eq|gt|lt|nth|first|last)(?:\\("+r+"*((?:-\\d)?\\d*)"+r+"*\\)|)(?=[^-]|$)","i")},oe=/^(?:input|select|textarea|button)$/i,se=/^h\d$/i,u=/^[^{]+\{\s*\[native \w/,re=/^(?:#([\w-]+)|(\w+)|\.([\w-]+))$/,ae=/[+~]/,le=/'|\\/g,h=new RegExp("\\\\([\\da-f]{1,6}"+r+"?|("+r+")|.)","ig");try{E.apply(n=X.call(y.childNodes),y.childNodes),n[y.childNodes.length].nodeType}catch(e){E={apply:n.length?function(e,t){G.apply(e,X.call(t))}:function(e,t){for(var n=e.length,i=0;e[n++]=t[i++];);e.length=n-1}}}function D(e,t,n,i){var o,s,r,a,l,c,u,d,p=t&&t.ownerDocument,h=t?t.nodeType:9;if(n=n||[],"string"!=typeof e||!e||1!==h&&9!==h&&11!==h)return n;if(!i&&((t?t.ownerDocument||t:y)!==k&&T(t),t=t||k,C)){if(11!==h&&(c=re.exec(e)))if(o=c[1]){if(9===h){if(!(r=t.getElementById(o)))return n;if(r.id===o)return n.push(r),n}else if(p&&(r=p.getElementById(o))&&v(t,r)&&r.id===o)return n.push(r),n}else{if(c[2])return E.apply(n,t.getElementsByTagName(e)),n;if((o=c[3])&&f.getElementsByClassName&&t.getElementsByClassName)return E.apply(n,t.getElementsByClassName(o)),n}if(f.qsa&&!b[e+" "]&&(!g||!g.test(e))){if(1!==h)p=t,d=e;else if("object"!==t.nodeName.toLowerCase()){for((a=t.getAttribute("id"))?a=a.replace(le,"\\$&"):t.setAttribute("id",a=$),s=(u=m(e)).length,l=ie.test(a)?"#"+a:"[id='"+a+"']";s--;)u[s]=l+" "+L(u[s]);d=u.join(","),p=ae.test(e)&&pe(t.parentNode)||t}if(d)try{return E.apply(n,p.querySelectorAll(d)),n}catch(e){}finally{a===$&&t.removeAttribute("id")}}}return M(e.replace(N,"$1"),t,n,i)}function ce(){var n=[];function i(e,t){return n.push(e+" ")>w.cacheLength&&delete i[n.shift()],i[e+" "]=t}return i}function A(e){return e[$]=!0,e}function O(e){var t=k.createElement("div");try{return!!e(t)}catch(e){return!1}finally{t.parentNode&&t.parentNode.removeChild(t)}}function ue(e,t){for(var n=e.split("|"),i=n.length;i--;)w.attrHandle[n[i]]=t}function de(e,t){var n=t&&e,i=n&&1===e.nodeType&&1===t.nodeType&&(~t.sourceIndex||1<<31)-(~e.sourceIndex||1<<31);if(i)return i;if(n)for(;n=n.nextSibling;)if(n===t)return-1;return e?1:-1}function j(r){return A(function(s){return s=+s,A(function(e,t){for(var n,i=r([],e.length,s),o=i.length;o--;)e[n=i[o]]&&(e[n]=!(t[n]=e[n]))})})}function pe(e){return e&&void 0!==e.getElementsByTagName&&e}for(e in f=D.support={},P=D.isXML=function(e){e=e&&(e.ownerDocument||e).documentElement;return!!e&&"HTML"!==e.nodeName},T=D.setDocument=function(e){var e=e?e.ownerDocument||e:y;return e!==k&&9===e.nodeType&&e.documentElement&&(t=(k=e).documentElement,C=!P(k),(e=k.defaultView)&&e.top!==e&&(e.addEventListener?e.addEventListener("unload",z,!1):e.attachEvent&&e.attachEvent("onunload",z)),f.attributes=O(function(e){return e.className="i",!e.getAttribute("className")}),f.getElementsByTagName=O(function(e){return e.appendChild(k.createComment("")),!e.getElementsByTagName("*").length}),f.getElementsByClassName=u.test(k.getElementsByClassName),f.getById=O(function(e){return t.appendChild(e).id=$,!k.getElementsByName||!k.getElementsByName($).length}),f.getById?(w.find.ID=function(e,t){if(void 0!==t.getElementById&&C)return(t=t.getElementById(e))?[t]:[]},w.filter.ID=function(e){var t=e.replace(h,d);return function(e){return e.getAttribute("id")===t}}):(delete w.find.ID,w.filter.ID=function(e){var t=e.replace(h,d);return function(e){e=void 0!==e.getAttributeNode&&e.getAttributeNode("id");return e&&e.value===t}}),w.find.TAG=f.getElementsByTagName?function(e,t){return void 0!==t.getElementsByTagName?t.getElementsByTagName(e):f.qsa?t.querySelectorAll(e):void 0}:function(e,t){var n,i=[],o=0,s=t.getElementsByTagName(e);if("*"!==e)return s;for(;n=s[o++];)1===n.nodeType&&i.push(n);return i},w.find.CLASS=f.getElementsByClassName&&function(e,t){if(void 0!==t.getElementsByClassName&&C)return t.getElementsByClassName(e)},i=[],g=[],(f.qsa=u.test(k.querySelectorAll))&&(O(function(e){t.appendChild(e).innerHTML="<a id='"+$+"'></a><select id='"+$+"-\r\\' msallowcapture=''><option selected=''></option></select>",e.querySelectorAll("[msallowcapture^='']").length&&g.push("[*^$]="+r+"*(?:''|\"\")"),e.querySelectorAll("[selected]").length||g.push("\\["+r+"*(?:value|"+Q+")"),e.querySelectorAll("[id~="+$+"-]").length||g.push("~="),e.querySelectorAll(":checked").length||g.push(":checked"),e.querySelectorAll("a#"+$+"+*").length||g.push(".#.+[+~]")}),O(function(e){var t=k.createElement("input");t.setAttribute("type","hidden"),e.appendChild(t).setAttribute("name","D"),e.querySelectorAll("[name=d]").length&&g.push("name"+r+"*[*^$|!~]?="),e.querySelectorAll(":enabled").length||g.push(":enabled",":disabled"),e.querySelectorAll("*,:x"),g.push(",.*:")})),(f.matchesSelector=u.test(o=t.matches||t.webkitMatchesSelector||t.mozMatchesSelector||t.oMatchesSelector||t.msMatchesSelector))&&O(function(e){f.disconnectedMatch=o.call(e,"div"),o.call(e,"[s!='']:x"),i.push("!=",Y)}),g=g.length&&new RegExp(g.join("|")),i=i.length&&new RegExp(i.join("|")),e=u.test(t.compareDocumentPosition),v=e||u.test(t.contains)?function(e,t){var n=9===e.nodeType?e.documentElement:e,t=t&&t.parentNode;return e===t||!(!t||1!==t.nodeType||!(n.contains?n.contains(t):e.compareDocumentPosition&&16&e.compareDocumentPosition(t)))}:function(e,t){if(t)for(;t=t.parentNode;)if(t===e)return!0;return!1},U=e?function(e,t){if(e===t)return c=!0,0;var n=!e.compareDocumentPosition-!t.compareDocumentPosition;return n||(1&(n=(e.ownerDocument||e)===(t.ownerDocument||t)?e.compareDocumentPosition(t):1)||!f.sortDetached&&t.compareDocumentPosition(e)===n?e===k||e.ownerDocument===y&&v(y,e)?-1:t===k||t.ownerDocument===y&&v(y,t)?1:l?I(l,e)-I(l,t):0:4&n?-1:1)}:function(e,t){if(e===t)return c=!0,0;var n,i=0,o=e.parentNode,s=t.parentNode,r=[e],a=[t];if(!o||!s)return e===k?-1:t===k?1:o?-1:s?1:l?I(l,e)-I(l,t):0;if(o===s)return de(e,t);for(n=e;n=n.parentNode;)r.unshift(n);for(n=t;n=n.parentNode;)a.unshift(n);for(;r[i]===a[i];)i++;return i?de(r[i],a[i]):r[i]===y?-1:a[i]===y?1:0}),k},D.matches=function(e,t){return D(e,null,null,t)},D.matchesSelector=function(e,t){if((e.ownerDocument||e)!==k&&T(e),t=t.replace(te,"='$1']"),f.matchesSelector&&C&&!b[t+" "]&&(!i||!i.test(t))&&(!g||!g.test(t)))try{var n=o.call(e,t);if(n||f.disconnectedMatch||e.document&&11!==e.document.nodeType)return n}catch(e){}return 0<D(t,k,null,[e]).length},D.contains=function(e,t){return(e.ownerDocument||e)!==k&&T(e),v(e,t)},D.attr=function(e,t){(e.ownerDocument||e)!==k&&T(e);var n=w.attrHandle[t.toLowerCase()],n=n&&_.call(w.attrHandle,t.toLowerCase())?n(e,t,!C):void 0;return void 0!==n?n:f.attributes||!C?e.getAttribute(t):(n=e.getAttributeNode(t))&&n.specified?n.value:null},D.error=function(e){throw new Error("Syntax error, unrecognized expression: "+e)},D.uniqueSort=function(e){var t,n=[],i=0,o=0;if(c=!f.detectDuplicates,l=!f.sortStable&&e.slice(0),e.sort(U),c){for(;t=e[o++];)t===e[o]&&(i=n.push(o));for(;i--;)e.splice(n[i],1)}return l=null,e},s=D.getText=function(e){var t,n="",i=0,o=e.nodeType;if(o){if(1===o||9===o||11===o){if("string"==typeof e.textContent)return e.textContent;for(e=e.firstChild;e;e=e.nextSibling)n+=s(e)}else if(3===o||4===o)return e.nodeValue}else for(;t=e[i++];)n+=s(t);return n},(w=D.selectors={cacheLength:50,createPseudo:A,match:p,attrHandle:{},find:{},relative:{">":{dir:"parentNode",first:!0}," ":{dir:"parentNode"},"+":{dir:"previousSibling",first:!0},"~":{dir:"previousSibling"}},preFilter:{ATTR:function(e){return e[1]=e[1].replace(h,d),e[3]=(e[3]||e[4]||e[5]||"").replace(h,d),"~="===e[2]&&(e[3]=" "+e[3]+" "),e.slice(0,4)},CHILD:function(e){return e[1]=e[1].toLowerCase(),"nth"===e[1].slice(0,3)?(e[3]||D.error(e[0]),e[4]=+(e[4]?e[5]+(e[6]||1):2*("even"===e[3]||"odd"===e[3])),e[5]=+(e[7]+e[8]||"odd"===e[3])):e[3]&&D.error(e[0]),e},PSEUDO:function(e){var t,n=!e[6]&&e[2];return p.CHILD.test(e[0])?null:(e[3]?e[2]=e[4]||e[5]||"":n&&ne.test(n)&&(t=m(n,!0))&&(t=n.indexOf(")",n.length-t)-n.length)&&(e[0]=e[0].slice(0,t),e[2]=n.slice(0,t)),e.slice(0,3))}},filter:{TAG:function(e){var t=e.replace(h,d).toLowerCase();return"*"===e?function(){return!0}:function(e){return e.nodeName&&e.nodeName.toLowerCase()===t}},CLASS:function(e){var t=q[e+" "];return t||(t=new RegExp("(^|"+r+")"+e+"("+r+"|$)"))&&q(e,function(e){return t.test("string"==typeof e.className&&e.className||void 0!==e.getAttribute&&e.getAttribute("class")||"")})},ATTR:function(t,n,i){return function(e){e=D.attr(e,t);return null==e?"!="===n:!n||(e+="","="===n?e===i:"!="===n?e!==i:"^="===n?i&&0===e.indexOf(i):"*="===n?i&&-1<e.indexOf(i):"$="===n?i&&e.slice(-i.length)===i:"~="===n?-1<(" "+e.replace(J," ")+" ").indexOf(i):"|="===n&&(e===i||e.slice(0,i.length+1)===i+"-"))}},CHILD:function(f,e,t,m,g){var v="nth"!==f.slice(0,3),y="last"!==f.slice(-4),b="of-type"===e;return 1===m&&0===g?function(e){return!!e.parentNode}:function(e,t,n){var i,o,s,r,a,l,c=v!=y?"nextSibling":"previousSibling",u=e.parentNode,d=b&&e.nodeName.toLowerCase(),p=!n&&!b,h=!1;if(u){if(v){for(;c;){for(r=e;r=r[c];)if(b?r.nodeName.toLowerCase()===d:1===r.nodeType)return!1;l=c="only"===f&&!l&&"nextSibling"}return!0}if(l=[y?u.firstChild:u.lastChild],y&&p){for(h=(a=(i=(o=(s=(r=u)[$]||(r[$]={}))[r.uniqueID]||(s[r.uniqueID]={}))[f]||[])[0]===S&&i[1])&&i[2],r=a&&u.childNodes[a];r=++a&&r&&r[c]||(h=a=0)||l.pop();)if(1===r.nodeType&&++h&&r===e){o[f]=[S,a,h];break}}else if(!1===(h=p?a=(i=(o=(s=(r=e)[$]||(r[$]={}))[r.uniqueID]||(s[r.uniqueID]={}))[f]||[])[0]===S&&i[1]:h))for(;(r=++a&&r&&r[c]||(h=a=0)||l.pop())&&((b?r.nodeName.toLowerCase()!==d:1!==r.nodeType)||!++h||(p&&((o=(s=r[$]||(r[$]={}))[r.uniqueID]||(s[r.uniqueID]={}))[f]=[S,h]),r!==e)););return(h-=g)===m||h%m==0&&0<=h/m}}},PSEUDO:function(e,s){var t,r=w.pseudos[e]||w.setFilters[e.toLowerCase()]||D.error("unsupported pseudo: "+e);return r[$]?r(s):1<r.length?(t=[e,e,"",s],w.setFilters.hasOwnProperty(e.toLowerCase())?A(function(e,t){for(var n,i=r(e,s),o=i.length;o--;)e[n=I(e,i[o])]=!(t[n]=i[o])}):function(e){return r(e,0,t)}):r}},pseudos:{not:A(function(e){var i=[],o=[],a=W(e.replace(N,"$1"));return a[$]?A(function(e,t,n,i){for(var o,s=a(e,null,i,[]),r=e.length;r--;)(o=s[r])&&(e[r]=!(t[r]=o))}):function(e,t,n){return i[0]=e,a(i,null,n,o),i[0]=null,!o.pop()}}),has:A(function(t){return function(e){return 0<D(t,e).length}}),contains:A(function(t){return t=t.replace(h,d),function(e){return-1<(e.textContent||e.innerText||s(e)).indexOf(t)}}),lang:A(function(n){return ie.test(n||"")||D.error("unsupported lang: "+n),n=n.replace(h,d).toLowerCase(),function(e){var t;do{if(t=C?e.lang:e.getAttribute("xml:lang")||e.getAttribute("lang"))return(t=t.toLowerCase())===n||0===t.indexOf(n+"-")}while((e=e.parentNode)&&1===e.nodeType);return!1}}),target:function(e){var t=R.location&&R.location.hash;return t&&t.slice(1)===e.id},root:function(e){return e===t},focus:function(e){return e===k.activeElement&&(!k.hasFocus||k.hasFocus())&&!!(e.type||e.href||~e.tabIndex)},enabled:function(e){return!1===e.disabled},disabled:function(e){return!0===e.disabled},checked:function(e){var t=e.nodeName.toLowerCase();return"input"===t&&!!e.checked||"option"===t&&!!e.selected},selected:function(e){return e.parentNode&&e.parentNode.selectedIndex,!0===e.selected},empty:function(e){for(e=e.firstChild;e;e=e.nextSibling)if(e.nodeType<6)return!1;return!0},parent:function(e){return!w.pseudos.empty(e)},header:function(e){return se.test(e.nodeName)},input:function(e){return oe.test(e.nodeName)},button:function(e){var t=e.nodeName.toLowerCase();return"input"===t&&"button"===e.type||"button"===t},text:function(e){return"input"===e.nodeName.toLowerCase()&&"text"===e.type&&(null==(e=e.getAttribute("type"))||"text"===e.toLowerCase())},first:j(function(){return[0]}),last:j(function(e,t){return[t-1]}),eq:j(function(e,t,n){return[n<0?n+t:n]}),even:j(function(e,t){for(var n=0;n<t;n+=2)e.push(n);return e}),odd:j(function(e,t){for(var n=1;n<t;n+=2)e.push(n);return e}),lt:j(function(e,t,n){for(var i=n<0?n+t:n;0<=--i;)e.push(i);return e}),gt:j(function(e,t,n){for(var i=n<0?n+t:n;++i<t;)e.push(i);return e})}}).pseudos.nth=w.pseudos.eq,{radio:!0,checkbox:!0,file:!0,password:!0,image:!0})w.pseudos[e]=function(t){return function(e){return"input"===e.nodeName.toLowerCase()&&e.type===t}}(e);for(e in{submit:!0,reset:!0})w.pseudos[e]=function(n){return function(e){var t=e.nodeName.toLowerCase();return("input"===t||"button"===t)&&e.type===n}}(e);function he(){}function L(e){for(var t=0,n=e.length,i="";t<n;t++)i+=e[t].value;return i}function fe(r,e,t){var a=e.dir,l=t&&"parentNode"===a,c=F++;return e.first?function(e,t,n){for(;e=e[a];)if(1===e.nodeType||l)return r(e,t,n)}:function(e,t,n){var i,o,s=[S,c];if(n){for(;e=e[a];)if((1===e.nodeType||l)&&r(e,t,n))return!0}else for(;e=e[a];)if(1===e.nodeType||l){if((i=(o=(o=e[$]||(e[$]={}))[e.uniqueID]||(o[e.uniqueID]={}))[a])&&i[0]===S&&i[1]===c)return s[2]=i[2];if((o[a]=s)[2]=r(e,t,n))return!0}}}function me(o){return 1<o.length?function(e,t,n){for(var i=o.length;i--;)if(!o[i](e,t,n))return!1;return!0}:o[0]}function H(e,t,n,i,o){for(var s,r=[],a=0,l=e.length,c=null!=t;a<l;a++)!(s=e[a])||n&&!n(s,i,o)||(r.push(s),c&&t.push(a));return r}function ge(h,f,m,g,v,e){return g&&!g[$]&&(g=ge(g)),v&&!v[$]&&(v=ge(v,e)),A(function(e,t,n,i){var o,s,r,a=[],l=[],c=t.length,u=e||function(e,t,n){for(var i=0,o=t.length;i<o;i++)D(e,t[i],n);return n}(f||"*",n.nodeType?[n]:n,[]),d=!h||!e&&f?u:H(u,a,h,n,i),p=m?v||(e?h:c||g)?[]:t:d;if(m&&m(d,p,n,i),g)for(o=H(p,l),g(o,[],n,i),s=o.length;s--;)(r=o[s])&&(p[l[s]]=!(d[l[s]]=r));if(e){if(v||h){if(v){for(o=[],s=p.length;s--;)(r=p[s])&&o.push(d[s]=r);v(null,p=[],o,i)}for(s=p.length;s--;)(r=p[s])&&-1<(o=v?I(e,r):a[s])&&(e[o]=!(t[o]=r))}}else p=H(p===t?p.splice(c,p.length):p),v?v(null,t,p,i):E.apply(t,p)})}function ve(g,v){function e(e,t,n,i,o){var s,r,a,l=0,c="0",u=e&&[],d=[],p=x,h=e||b&&w.find.TAG("*",o),f=S+=null==p?1:Math.random()||.1,m=h.length;for(o&&(x=t===k||t||o);c!==m&&null!=(s=h[c]);c++){if(b&&s){for(r=0,t||s.ownerDocument===k||(T(s),n=!C);a=g[r++];)if(a(s,t||k,n)){i.push(s);break}o&&(S=f)}y&&((s=!a&&s)&&l--,e&&u.push(s))}if(l+=c,y&&c!==l){for(r=0;a=v[r++];)a(u,d,t,n);if(e){if(0<l)for(;c--;)u[c]||d[c]||(d[c]=V.call(i));d=H(d)}E.apply(i,d),o&&!e&&0<d.length&&1<l+v.length&&D.uniqueSort(i)}return o&&(S=f,x=p),u}var y=0<v.length,b=0<g.length;return y?A(e):e}return he.prototype=w.filters=w.pseudos,w.setFilters=new he,m=D.tokenize=function(e,t){var n,i,o,s,r,a,l,c=B[e+" "];if(c)return t?0:c.slice(0);for(r=e,a=[],l=w.preFilter;r;){for(s in n&&!(i=Z.exec(r))||(i&&(r=r.slice(i[0].length)||r),a.push(o=[])),n=!1,(i=ee.exec(r))&&(n=i.shift(),o.push({value:n,type:i[0].replace(N," ")}),r=r.slice(n.length)),w.filter)!(i=p[s].exec(r))||l[s]&&!(i=l[s](i))||(n=i.shift(),o.push({value:n,type:s,matches:i}),r=r.slice(n.length));if(!n)break}return t?r.length:r?D.error(e):B(e,a).slice(0)},W=D.compile=function(e,t){var n,i=[],o=[],s=b[e+" "];if(!s){for(n=(t=t||m(e)).length;n--;)((s=function e(t){for(var i,n,o,s=t.length,r=w.relative[t[0].type],a=r||w.relative[" "],l=r?1:0,c=fe(function(e){return e===i},a,!0),u=fe(function(e){return-1<I(i,e)},a,!0),d=[function(e,t,n){return e=!r&&(n||t!==x)||((i=t).nodeType?c:u)(e,t,n),i=null,e}];l<s;l++)if(n=w.relative[t[l].type])d=[fe(me(d),n)];else{if((n=w.filter[t[l].type].apply(null,t[l].matches))[$]){for(o=++l;o<s&&!w.relative[t[o].type];o++);return ge(1<l&&me(d),1<l&&L(t.slice(0,l-1).concat({value:" "===t[l-2].type?"*":""})).replace(N,"$1"),n,l<o&&e(t.slice(l,o)),o<s&&e(t=t.slice(o)),o<s&&L(t))}d.push(n)}return me(d)}(t[n]))[$]?i:o).push(s);(s=b(e,ve(o,i))).selector=e}return s},M=D.select=function(e,t,n,i){var o,s,r,a,l,c="function"==typeof e&&e,u=!i&&m(e=c.selector||e);if(n=n||[],1===u.length){if(2<(s=u[0]=u[0].slice(0)).length&&"ID"===(r=s[0]).type&&f.getById&&9===t.nodeType&&C&&w.relative[s[1].type]){if(!(t=(w.find.ID(r.matches[0].replace(h,d),t)||[])[0]))return n;c&&(t=t.parentNode),e=e.slice(s.shift().value.length)}for(o=p.needsContext.test(e)?0:s.length;o--&&(r=s[o],!w.relative[a=r.type]);)if((l=w.find[a])&&(i=l(r.matches[0].replace(h,d),ae.test(s[0].type)&&pe(t.parentNode)||t))){if(s.splice(o,1),e=i.length&&L(s))break;return E.apply(n,i),n}}return(c||W(e,u))(i,t,!C,n,!t||ae.test(e)&&pe(t.parentNode)||t),n},f.sortStable=$.split("").sort(U).join("")===$,f.detectDuplicates=!!c,T(),f.sortDetached=O(function(e){return 1&e.compareDocumentPosition(k.createElement("div"))}),O(function(e){return e.innerHTML="<a href='#'></a>","#"===e.firstChild.getAttribute("href")})||ue("type|href|height|width",function(e,t,n){if(!n)return e.getAttribute(t,"type"===t.toLowerCase()?1:2)}),f.attributes&&O(function(e){return e.innerHTML="<input/>",e.firstChild.setAttribute("value",""),""===e.firstChild.getAttribute("value")})||ue("value",function(e,t,n){if(!n&&"input"===e.nodeName.toLowerCase())return e.defaultValue}),O(function(e){return null==e.getAttribute("disabled")})||ue(Q,function(e,t,n){if(!n)return!0===e[t]?t.toLowerCase():(n=e.getAttributeNode(t))&&n.specified?n.value:null}),D}(x),G=(k.find=e,k.expr=e.selectors,k.expr[":"]=k.expr.pseudos,k.uniqueSort=k.unique=e.uniqueSort,k.text=e.getText,k.isXMLDoc=e.isXML,k.contains=e.contains,k.expr.match.needsContext),X=/^<([\w-]+)\s*\/?>(?:<\/\1>|)$/,Q=/^.[^:#\[\.,]*$/;function K(e,n,i){if(k.isFunction(n))return k.grep(e,function(e,t){return!!n.call(e,t,e)!==i});if(n.nodeType)return k.grep(e,function(e){return e===n!==i});if("string"==typeof n){if(Q.test(n))return k.filter(n,e,i);n=k.filter(n,e)}return k.grep(e,function(e){return-1<o.call(n,e)!==i})}k.filter=function(e,t,n){var i=t[0];return n&&(e=":not("+e+")"),1===t.length&&1===i.nodeType?k.find.matchesSelector(i,e)?[i]:[]:k.find.matches(e,k.grep(t,function(e){return 1===e.nodeType}))},k.fn.extend({find:function(e){var t,n=this.length,i=[],o=this;if("string"!=typeof e)return this.pushStack(k(e).filter(function(){for(t=0;t<n;t++)if(k.contains(o[t],this))return!0}));for(t=0;t<n;t++)k.find(e,o[t],i);return(i=this.pushStack(1<n?k.unique(i):i)).selector=this.selector?this.selector+" "+e:e,i},filter:function(e){return this.pushStack(K(this,e||[],!1))},not:function(e){return this.pushStack(K(this,e||[],!0))},is:function(e){return!!K(this,"string"==typeof e&&G.test(e)?k(e):e||[],!1).length}});var Y,J=/^(?:\s*(<[\w\W]+>)[^>]*|#([\w-]*))$/,Z=((k.fn.init=function(e,t,n){if(!e)return this;if(n=n||Y,"string"!=typeof e)return e.nodeType?(this.context=this[0]=e,this.length=1,this):k.isFunction(e)?void 0!==n.ready?n.ready(e):e(k):(void 0!==e.selector&&(this.selector=e.selector,this.context=e.context),k.makeArray(e,this));if(!(i="<"===e[0]&&">"===e[e.length-1]&&3<=e.length?[null,e,null]:J.exec(e))||!i[1]&&t)return(!t||t.jquery?t||n:this.constructor(t)).find(e);if(i[1]){if(t=t instanceof k?t[0]:t,k.merge(this,k.parseHTML(i[1],t&&t.nodeType?t.ownerDocument||t:T,!0)),X.test(i[1])&&k.isPlainObject(t))for(var i in t)k.isFunction(this[i])?this[i](t[i]):this.attr(i,t[i]);return this}return(n=T.getElementById(i[2]))&&n.parentNode&&(this.length=1,this[0]=n),this.context=T,this.selector=e,this}).prototype=k.fn,Y=k(T),/^(?:parents|prev(?:Until|All))/),ee={children:!0,contents:!0,next:!0,prev:!0};function te(e,t){for(;(e=e[t])&&1!==e.nodeType;);return e}k.fn.extend({has:function(e){var t=k(e,this),n=t.length;return this.filter(function(){for(var e=0;e<n;e++)if(k.contains(this,t[e]))return!0})},closest:function(e,t){for(var n,i=0,o=this.length,s=[],r=G.test(e)||"string"!=typeof e?k(e,t||this.context):0;i<o;i++)for(n=this[i];n&&n!==t;n=n.parentNode)if(n.nodeType<11&&(r?-1<r.index(n):1===n.nodeType&&k.find.matchesSelector(n,e))){s.push(n);break}return this.pushStack(1<s.length?k.uniqueSort(s):s)},index:function(e){return e?"string"==typeof e?o.call(k(e),this[0]):o.call(this,e.jquery?e[0]:e):this[0]&&this[0].parentNode?this.first().prevAll().length:-1},add:function(e,t){return this.pushStack(k.uniqueSort(k.merge(this.get(),k(e,t))))},addBack:function(e){return this.add(null==e?this.prevObject:this.prevObject.filter(e))}}),k.each({parent:function(e){e=e.parentNode;return e&&11!==e.nodeType?e:null},parents:function(e){return i(e,"parentNode")},parentsUntil:function(e,t,n){return i(e,"parentNode",n)},next:function(e){return te(e,"nextSibling")},prev:function(e){return te(e,"previousSibling")},nextAll:function(e){return i(e,"nextSibling")},prevAll:function(e){return i(e,"previousSibling")},nextUntil:function(e,t,n){return i(e,"nextSibling",n)},prevUntil:function(e,t,n){return i(e,"previousSibling",n)},siblings:function(e){return V((e.parentNode||{}).firstChild,e)},children:function(e){return V(e.firstChild)},contents:function(e){return e.contentDocument||k.merge([],e.childNodes)}},function(i,o){k.fn[i]=function(e,t){var n=k.map(this,o,e);return(t="Until"!==i.slice(-5)?e:t)&&"string"==typeof t&&(n=k.filter(t,n)),1<this.length&&(ee[i]||k.uniqueSort(n),Z.test(i)&&n.reverse()),this.pushStack(n)}});var ne,C=/\S+/g;function ie(){T.removeEventListener("DOMContentLoaded",ie),x.removeEventListener("load",ie),k.ready()}k.Callbacks=function(i){var e,n;i="string"==typeof i?(e=i,n={},k.each(e.match(C)||[],function(e,t){n[t]=!0}),n):k.extend({},i);function o(){for(a=i.once,r=s=!0;c.length;u=-1)for(t=c.shift();++u<l.length;)!1===l[u].apply(t[0],t[1])&&i.stopOnFalse&&(u=l.length,t=!1);i.memory||(t=!1),s=!1,a&&(l=t?[]:"")}var s,t,r,a,l=[],c=[],u=-1,d={add:function(){return l&&(t&&!s&&(u=l.length-1,c.push(t)),function n(e){k.each(e,function(e,t){k.isFunction(t)?i.unique&&d.has(t)||l.push(t):t&&t.length&&"string"!==k.type(t)&&n(t)})}(arguments),t&&!s&&o()),this},remove:function(){return k.each(arguments,function(e,t){for(var n;-1<(n=k.inArray(t,l,n));)l.splice(n,1),n<=u&&u--}),this},has:function(e){return e?-1<k.inArray(e,l):0<l.length},empty:function(){return l=l&&[],this},disable:function(){return a=c=[],l=t="",this},disabled:function(){return!l},lock:function(){return a=c=[],t||(l=t=""),this},locked:function(){return!!a},fireWith:function(e,t){return a||(t=[e,(t=t||[]).slice?t.slice():t],c.push(t),s||o()),this},fire:function(){return d.fireWith(this,arguments),this},fired:function(){return!!r}};return d},k.extend({Deferred:function(e){var s=[["resolve","done",k.Callbacks("once memory"),"resolved"],["reject","fail",k.Callbacks("once memory"),"rejected"],["notify","progress",k.Callbacks("memory")]],o="pending",r={state:function(){return o},always:function(){return a.done(arguments).fail(arguments),this},then:function(){var o=arguments;return k.Deferred(function(i){k.each(s,function(e,t){var n=k.isFunction(o[e])&&o[e];a[t[1]](function(){var e=n&&n.apply(this,arguments);e&&k.isFunction(e.promise)?e.promise().progress(i.notify).done(i.resolve).fail(i.reject):i[t[0]+"With"](this===r?i.promise():this,n?[e]:arguments)})}),o=null}).promise()},promise:function(e){return null!=e?k.extend(e,r):r}},a={};return r.pipe=r.then,k.each(s,function(e,t){var n=t[2],i=t[3];r[t[1]]=n.add,i&&n.add(function(){o=i},s[1^e][2].disable,s[2][2].lock),a[t[0]]=function(){return a[t[0]+"With"](this===a?r:this,arguments),this},a[t[0]+"With"]=n.fireWith}),r.promise(a),e&&e.call(a,a),a},when:function(e){function t(t,n,i){return function(e){n[t]=this,i[t]=1<arguments.length?u.call(arguments):e,i===o?c.notifyWith(n,i):--l||c.resolveWith(n,i)}}var o,n,i,s=0,r=u.call(arguments),a=r.length,l=1!==a||e&&k.isFunction(e.promise)?a:0,c=1===l?e:k.Deferred();if(1<a)for(o=new Array(a),n=new Array(a),i=new Array(a);s<a;s++)r[s]&&k.isFunction(r[s].promise)?r[s].promise().progress(t(s,n,o)).done(t(s,i,r)).fail(c.reject):--l;return l||c.resolveWith(i,r),c.promise()}}),k.fn.ready=function(e){return k.ready.promise().done(e),this},k.extend({isReady:!1,readyWait:1,holdReady:function(e){e?k.readyWait++:k.ready(!0)},ready:function(e){(!0===e?--k.readyWait:k.isReady)||(k.isReady=!0)!==e&&0<--k.readyWait||(ne.resolveWith(T,[k]),k.fn.triggerHandler&&(k(T).triggerHandler("ready"),k(T).off("ready")))}}),k.ready.promise=function(e){return ne||(ne=k.Deferred(),"complete"===T.readyState||"loading"!==T.readyState&&!T.documentElement.doScroll?x.setTimeout(k.ready):(T.addEventListener("DOMContentLoaded",ie),x.addEventListener("load",ie))),ne.promise(e)},k.ready.promise();function d(e,t,n,i,o,s,r){var a=0,l=e.length,c=null==n;if("object"===k.type(n))for(a in o=!0,n)d(e,t,a,n[a],!0,s,r);else if(void 0!==i&&(o=!0,k.isFunction(i)||(r=!0),t=c?r?(t.call(e,i),null):(c=t,function(e,t,n){return c.call(k(e),n)}):t))for(;a<l;a++)t(e[a],n,r?i:i.call(e[a],a,t(e[a],n)));return o?e:c?t.call(e):l?t(e[0],n):s}function g(e){return 1===e.nodeType||9===e.nodeType||!+e.nodeType}function t(){this.expando=k.expando+t.uid++}t.uid=1,t.prototype={register:function(e,t){t=t||{};return e.nodeType?e[this.expando]=t:Object.defineProperty(e,this.expando,{value:t,writable:!0,configurable:!0}),e[this.expando]},cache:function(e){if(!g(e))return{};var t=e[this.expando];return t||(t={},g(e)&&(e.nodeType?e[this.expando]=t:Object.defineProperty(e,this.expando,{value:t,configurable:!0}))),t},set:function(e,t,n){var i,o=this.cache(e);if("string"==typeof t)o[t]=n;else for(i in t)o[i]=t[i];return o},get:function(e,t){return void 0===t?this.cache(e):e[this.expando]&&e[this.expando][t]},access:function(e,t,n){var i;return void 0===t||t&&"string"==typeof t&&void 0===n?void 0!==(i=this.get(e,t))?i:this.get(e,k.camelCase(t)):(this.set(e,t,n),void 0!==n?n:t)},remove:function(e,t){var n,i,o,s=e[this.expando];if(void 0!==s){if(void 0===t)this.register(e);else{n=(i=k.isArray(t)?t.concat(t.map(k.camelCase)):(o=k.camelCase(t),t in s?[t,o]:(i=o)in s?[i]:i.match(C)||[])).length;for(;n--;)delete s[i[n]]}void 0!==t&&!k.isEmptyObject(s)||(e.nodeType?e[this.expando]=void 0:delete e[this.expando])}},hasData:function(e){e=e[this.expando];return void 0!==e&&!k.isEmptyObject(e)}};var v=new t,l=new t,oe=/^(?:\{[\w\W]*\}|\[[\w\W]*\])$/,se=/[A-Z]/g;function re(e,t,n){var i;if(void 0===n&&1===e.nodeType)if(i="data-"+t.replace(se,"-$&").toLowerCase(),"string"==typeof(n=e.getAttribute(i))){try{n="true"===n||"false"!==n&&("null"===n?null:+n+""===n?+n:oe.test(n)?k.parseJSON(n):n)}catch(e){}l.set(e,t,n)}else n=void 0;return n}k.extend({hasData:function(e){return l.hasData(e)||v.hasData(e)},data:function(e,t,n){return l.access(e,t,n)},removeData:function(e,t){l.remove(e,t)},_data:function(e,t,n){return v.access(e,t,n)},_removeData:function(e,t){v.remove(e,t)}}),k.fn.extend({data:function(i,e){var t,n,o,s=this[0],r=s&&s.attributes;if(void 0!==i)return"object"==typeof i?this.each(function(){l.set(this,i)}):d(this,function(t){var e,n;if(s&&void 0===t)return void 0!==(e=l.get(s,i)||l.get(s,i.replace(se,"-$&").toLowerCase()))?e:(n=k.camelCase(i),void 0!==(e=l.get(s,n))||void 0!==(e=re(s,n,void 0))?e:void 0);n=k.camelCase(i),this.each(function(){var e=l.get(this,n);l.set(this,n,t),-1<i.indexOf("-")&&void 0!==e&&l.set(this,i,t)})},null,e,1<arguments.length,null,!0);if(this.length&&(o=l.get(s),1===s.nodeType&&!v.get(s,"hasDataAttrs"))){for(t=r.length;t--;)r[t]&&0===(n=r[t].name).indexOf("data-")&&(n=k.camelCase(n.slice(5)),re(s,n,o[n]));v.set(s,"hasDataAttrs",!0)}return o},removeData:function(e){return this.each(function(){l.remove(this,e)})}}),k.extend({queue:function(e,t,n){var i;if(e)return i=v.get(e,t=(t||"fx")+"queue"),n&&(!i||k.isArray(n)?i=v.access(e,t,k.makeArray(n)):i.push(n)),i||[]},dequeue:function(e,t){t=t||"fx";var n=k.queue(e,t),i=n.length,o=n.shift(),s=k._queueHooks(e,t);"inprogress"===o&&(o=n.shift(),i--),o&&("fx"===t&&n.unshift("inprogress"),delete s.stop,o.call(e,function(){k.dequeue(e,t)},s)),!i&&s&&s.empty.fire()},_queueHooks:function(e,t){var n=t+"queueHooks";return v.get(e,n)||v.access(e,n,{empty:k.Callbacks("once memory").add(function(){v.remove(e,[t+"queue",n])})})}}),k.fn.extend({queue:function(t,n){var e=2;return"string"!=typeof t&&(n=t,t="fx",e--),arguments.length<e?k.queue(this[0],t):void 0===n?this:this.each(function(){var e=k.queue(this,t,n);k._queueHooks(this,t),"fx"===t&&"inprogress"!==e[0]&&k.dequeue(this,t)})},dequeue:function(e){return this.each(function(){k.dequeue(this,e)})},clearQueue:function(e){return this.queue(e||"fx",[])},promise:function(e,t){function n(){--o||s.resolveWith(r,[r])}var i,o=1,s=k.Deferred(),r=this,a=this.length;for("string"!=typeof e&&(t=e,e=void 0),e=e||"fx";a--;)(i=v.get(r[a],e+"queueHooks"))&&i.empty&&(o++,i.empty.add(n));return n(),s.promise(t)}});function y(e,t){return"none"===k.css(e=t||e,"display")||!k.contains(e.ownerDocument,e)}var e=/[+-]?(?:\d*\.|)\d+(?:[eE][+-]?\d+|)/.source,p=new RegExp("^(?:([+-])=|)("+e+")([a-z%]*)$","i"),a=["Top","Right","Bottom","Left"];function ae(e,t,n,i){var o,s=1,r=20,a=i?function(){return i.cur()}:function(){return k.css(e,t,"")},l=a(),c=n&&n[3]||(k.cssNumber[t]?"":"px"),u=(k.cssNumber[t]||"px"!==c&&+l)&&p.exec(k.css(e,t));if(u&&u[3]!==c)for(c=c||u[3],n=n||[],u=+l||1;u/=s=s||".5",k.style(e,t,u+c),s!==(s=a()/l)&&1!==s&&--r;);return n&&(u=+u||+l||0,o=n[1]?u+(n[1]+1)*n[2]:+n[2],i&&(i.unit=c,i.start=u,i.end=o)),o}var le=/^(?:checkbox|radio)$/i,ce=/<([\w:-]+)/,ue=/^$|\/(?:java|ecma)script/i,b={option:[1,"<select multiple='multiple'>","</select>"],thead:[1,"<table>","</table>"],col:[2,"<table><colgroup>","</colgroup></table>"],tr:[2,"<table><tbody>","</tbody></table>"],td:[3,"<table><tbody><tr>","</tr></tbody></table>"],_default:[0,"",""]};function w(e,t){var n=void 0!==e.getElementsByTagName?e.getElementsByTagName(t||"*"):void 0!==e.querySelectorAll?e.querySelectorAll(t||"*"):[];return void 0===t||t&&k.nodeName(e,t)?k.merge([e],n):n}function de(e,t){for(var n=0,i=e.length;n<i;n++)v.set(e[n],"globalEval",!t||v.get(t[n],"globalEval"))}b.optgroup=b.option,b.tbody=b.tfoot=b.colgroup=b.caption=b.thead,b.th=b.td;var pe=/<|&#?\w+;/;function he(e,t,n,i,o){for(var s,r,a,l,c,u=t.createDocumentFragment(),d=[],p=0,h=e.length;p<h;p++)if((s=e[p])||0===s)if("object"===k.type(s))k.merge(d,s.nodeType?[s]:s);else if(pe.test(s)){for(r=r||u.appendChild(t.createElement("div")),a=(ce.exec(s)||["",""])[1].toLowerCase(),a=b[a]||b._default,r.innerHTML=a[1]+k.htmlPrefilter(s)+a[2],c=a[0];c--;)r=r.lastChild;k.merge(d,r.childNodes),(r=u.firstChild).textContent=""}else d.push(t.createTextNode(s));for(u.textContent="",p=0;s=d[p++];)if(i&&-1<k.inArray(s,i))o&&o.push(s);else if(l=k.contains(s.ownerDocument,s),r=w(u.appendChild(s),"script"),l&&de(r),n)for(c=0;s=r[c++];)ue.test(s.type||"")&&n.push(s);return u}D=T.createDocumentFragment().appendChild(T.createElement("div")),(N=T.createElement("input")).setAttribute("type","radio"),N.setAttribute("checked","checked"),N.setAttribute("name","t"),D.appendChild(N),m.checkClone=D.cloneNode(!0).cloneNode(!0).lastChild.checked,D.innerHTML="<textarea>x</textarea>",m.noCloneChecked=!!D.cloneNode(!0).lastChild.defaultValue;var fe=/^key/,me=/^(?:mouse|pointer|contextmenu|drag|drop)|click/,ge=/^([^.]*)(?:\.(.+)|)/;function ve(){return!0}function c(){return!1}function ye(){try{return T.activeElement}catch(e){}}function be(e,t,n,i,o,s){var r,a;if("object"==typeof t){for(a in"string"!=typeof n&&(i=i||n,n=void 0),t)be(e,a,n,i,t[a],s);return e}if(null==i&&null==o?(o=n,i=n=void 0):null==o&&("string"==typeof n?(o=i,i=void 0):(o=i,i=n,n=void 0)),!1===o)o=c;else if(!o)return e;return 1===s&&(r=o,(o=function(e){return k().off(e),r.apply(this,arguments)}).guid=r.guid||(r.guid=k.guid++)),e.each(function(){k.event.add(this,t,o,i,n)})}k.event={global:{},add:function(t,e,n,i,o){var s,r,a,l,c,u,d,p,h,f=v.get(t);if(f)for(n.handler&&(n=(s=n).handler,o=s.selector),n.guid||(n.guid=k.guid++),(a=f.events)||(a=f.events={}),(r=f.handle)||(r=f.handle=function(e){return void 0!==k&&k.event.triggered!==e.type?k.event.dispatch.apply(t,arguments):void 0}),l=(e=(e||"").match(C)||[""]).length;l--;)d=h=(p=ge.exec(e[l])||[])[1],p=(p[2]||"").split(".").sort(),d&&(c=k.event.special[d]||{},d=(o?c.delegateType:c.bindType)||d,c=k.event.special[d]||{},h=k.extend({type:d,origType:h,data:i,handler:n,guid:n.guid,selector:o,needsContext:o&&k.expr.match.needsContext.test(o),namespace:p.join(".")},s),(u=a[d])||((u=a[d]=[]).delegateCount=0,c.setup&&!1!==c.setup.call(t,i,p,r)||t.addEventListener&&t.addEventListener(d,r)),c.add&&(c.add.call(t,h),h.handler.guid||(h.handler.guid=n.guid)),o?u.splice(u.delegateCount++,0,h):u.push(h),k.event.global[d]=!0)},remove:function(e,t,n,i,o){var s,r,a,l,c,u,d,p,h,f,m,g=v.hasData(e)&&v.get(e);if(g&&(l=g.events)){for(c=(t=(t||"").match(C)||[""]).length;c--;)if(h=m=(a=ge.exec(t[c])||[])[1],f=(a[2]||"").split(".").sort(),h){for(d=k.event.special[h]||{},p=l[h=(i?d.delegateType:d.bindType)||h]||[],a=a[2]&&new RegExp("(^|\\.)"+f.join("\\.(?:.*\\.|)")+"(\\.|$)"),r=s=p.length;s--;)u=p[s],!o&&m!==u.origType||n&&n.guid!==u.guid||a&&!a.test(u.namespace)||i&&i!==u.selector&&("**"!==i||!u.selector)||(p.splice(s,1),u.selector&&p.delegateCount--,d.remove&&d.remove.call(e,u));r&&!p.length&&(d.teardown&&!1!==d.teardown.call(e,f,g.handle)||k.removeEvent(e,h,g.handle),delete l[h])}else for(h in l)k.event.remove(e,h+t[c],n,i,!0);k.isEmptyObject(l)&&v.remove(e,"handle events")}},dispatch:function(e){e=k.event.fix(e);var t,n,i,o,s,r=u.call(arguments),a=(v.get(this,"events")||{})[e.type]||[],l=k.event.special[e.type]||{};if((r[0]=e).delegateTarget=this,!l.preDispatch||!1!==l.preDispatch.call(this,e)){for(s=k.event.handlers.call(this,e,a),t=0;(i=s[t++])&&!e.isPropagationStopped();)for(e.currentTarget=i.elem,n=0;(o=i.handlers[n++])&&!e.isImmediatePropagationStopped();)e.rnamespace&&!e.rnamespace.test(o.namespace)||(e.handleObj=o,e.data=o.data,void 0!==(o=((k.event.special[o.origType]||{}).handle||o.handler).apply(i.elem,r))&&!1===(e.result=o)&&(e.preventDefault(),e.stopPropagation()));return l.postDispatch&&l.postDispatch.call(this,e),e.result}},handlers:function(e,t){var n,i,o,s,r=[],a=t.delegateCount,l=e.target;if(a&&l.nodeType&&("click"!==e.type||isNaN(e.button)||e.button<1))for(;l!==this;l=l.parentNode||this)if(1===l.nodeType&&(!0!==l.disabled||"click"!==e.type)){for(i=[],n=0;n<a;n++)void 0===i[o=(s=t[n]).selector+" "]&&(i[o]=s.needsContext?-1<k(o,this).index(l):k.find(o,this,null,[l]).length),i[o]&&i.push(s);i.length&&r.push({elem:l,handlers:i})}return a<t.length&&r.push({elem:this,handlers:t.slice(a)}),r},props:"altKey bubbles cancelable ctrlKey currentTarget detail eventPhase metaKey relatedTarget shiftKey target timeStamp view which".split(" "),fixHooks:{},keyHooks:{props:"char charCode key keyCode".split(" "),filter:function(e,t){return null==e.which&&(e.which=null!=t.charCode?t.charCode:t.keyCode),e}},mouseHooks:{props:"button buttons clientX clientY offsetX offsetY pageX pageY screenX screenY toElement".split(" "),filter:function(e,t){var n,i,o=t.button;return null==e.pageX&&null!=t.clientX&&(n=(i=e.target.ownerDocument||T).documentElement,i=i.body,e.pageX=t.clientX+(n&&n.scrollLeft||i&&i.scrollLeft||0)-(n&&n.clientLeft||i&&i.clientLeft||0),e.pageY=t.clientY+(n&&n.scrollTop||i&&i.scrollTop||0)-(n&&n.clientTop||i&&i.clientTop||0)),e.which||void 0===o||(e.which=1&o?1:2&o?3:4&o?2:0),e}},fix:function(e){if(e[k.expando])return e;var t,n,i,o=e.type,s=e,r=this.fixHooks[o];for(r||(this.fixHooks[o]=r=me.test(o)?this.mouseHooks:fe.test(o)?this.keyHooks:{}),i=r.props?this.props.concat(r.props):this.props,e=new k.Event(s),t=i.length;t--;)e[n=i[t]]=s[n];return e.target||(e.target=T),3===e.target.nodeType&&(e.target=e.target.parentNode),r.filter?r.filter(e,s):e},special:{load:{noBubble:!0},focus:{trigger:function(){if(this!==ye()&&this.focus)return this.focus(),!1},delegateType:"focusin"},blur:{trigger:function(){if(this===ye()&&this.blur)return this.blur(),!1},delegateType:"focusout"},click:{trigger:function(){if("checkbox"===this.type&&this.click&&k.nodeName(this,"input"))return this.click(),!1},_default:function(e){return k.nodeName(e.target,"a")}},beforeunload:{postDispatch:function(e){void 0!==e.result&&e.originalEvent&&(e.originalEvent.returnValue=e.result)}}}},k.removeEvent=function(e,t,n){e.removeEventListener&&e.removeEventListener(t,n)},k.Event=function(e,t){if(!(this instanceof k.Event))return new k.Event(e,t);e&&e.type?(this.originalEvent=e,this.type=e.type,this.isDefaultPrevented=e.defaultPrevented||void 0===e.defaultPrevented&&!1===e.returnValue?ve:c):this.type=e,t&&k.extend(this,t),this.timeStamp=e&&e.timeStamp||k.now(),this[k.expando]=!0},k.Event.prototype={constructor:k.Event,isDefaultPrevented:c,isPropagationStopped:c,isImmediatePropagationStopped:c,isSimulated:!1,preventDefault:function(){var e=this.originalEvent;this.isDefaultPrevented=ve,e&&!this.isSimulated&&e.preventDefault()},stopPropagation:function(){var e=this.originalEvent;this.isPropagationStopped=ve,e&&!this.isSimulated&&e.stopPropagation()},stopImmediatePropagation:function(){var e=this.originalEvent;this.isImmediatePropagationStopped=ve,e&&!this.isSimulated&&e.stopImmediatePropagation(),this.stopPropagation()}},k.each({mouseenter:"mouseover",mouseleave:"mouseout",pointerenter:"pointerover",pointerleave:"pointerout"},function(e,o){k.event.special[e]={delegateType:o,bindType:o,handle:function(e){var t,n=e.relatedTarget,i=e.handleObj;return n&&(n===this||k.contains(this,n))||(e.type=i.origType,t=i.handler.apply(this,arguments),e.type=o),t}}}),k.fn.extend({on:function(e,t,n,i){return be(this,e,t,n,i)},one:function(e,t,n,i){return be(this,e,t,n,i,1)},off:function(e,t,n){var i,o;if(e&&e.preventDefault&&e.handleObj)return i=e.handleObj,k(e.delegateTarget).off(i.namespace?i.origType+"."+i.namespace:i.origType,i.selector,i.handler),this;if("object"!=typeof e)return!1!==t&&"function"!=typeof t||(n=t,t=void 0),!1===n&&(n=c),this.each(function(){k.event.remove(this,e,n,t)});for(o in e)this.off(o,t,e[o]);return this}});var we=/<(?!area|br|col|embed|hr|img|input|link|meta|param)(([\w:-]+)[^>]*)\/>/gi,xe=/<script|<style|<link/i,Te=/checked\s*(?:[^=]|=\s*.checked.)/i,ke=/^true\/(.*)/,Ce=/^\s*<!(?:\[CDATA\[|--)|(?:\]\]|--)>\s*$/g;function $e(e,t){return k.nodeName(e,"table")&&k.nodeName(11!==t.nodeType?t:t.firstChild,"tr")?e.getElementsByTagName("tbody")[0]||e.appendChild(e.ownerDocument.createElement("tbody")):e}function Se(e){return e.type=(null!==e.getAttribute("type"))+"/"+e.type,e}function Ee(e){var t=ke.exec(e.type);return t?e.type=t[1]:e.removeAttribute("type"),e}function Ie(e,t){var n,i,o,s,r,a;if(1===t.nodeType){if(v.hasData(e)&&(s=v.access(e),r=v.set(t,s),a=s.events))for(o in delete r.handle,r.events={},a)for(n=0,i=a[o].length;n<i;n++)k.event.add(t,o,a[o][n]);l.hasData(e)&&(s=l.access(e),r=k.extend({},s),l.set(t,r))}}function $(n,i,o,s){i=P.apply([],i);var e,t,r,a,l,c,u=0,d=n.length,p=d-1,h=i[0],f=k.isFunction(h);if(f||1<d&&"string"==typeof h&&!m.checkClone&&Te.test(h))return n.each(function(e){var t=n.eq(e);f&&(i[0]=h.call(this,e,t.html())),$(t,i,o,s)});if(d&&(t=(e=he(i,n[0].ownerDocument,!1,n,s)).firstChild,1===e.childNodes.length&&(e=t),t||s)){for(a=(r=k.map(w(e,"script"),Se)).length;u<d;u++)l=e,u!==p&&(l=k.clone(l,!0,!0),a&&k.merge(r,w(l,"script"))),o.call(n[u],l,u);if(a)for(c=r[r.length-1].ownerDocument,k.map(r,Ee),u=0;u<a;u++)l=r[u],ue.test(l.type||"")&&!v.access(l,"globalEval")&&k.contains(c,l)&&(l.src?k._evalUrl&&k._evalUrl(l.src):k.globalEval(l.textContent.replace(Ce,"")))}return n}function Ne(e,t,n){for(var i,o=t?k.filter(t,e):e,s=0;null!=(i=o[s]);s++)n||1!==i.nodeType||k.cleanData(w(i)),i.parentNode&&(n&&k.contains(i.ownerDocument,i)&&de(w(i,"script")),i.parentNode.removeChild(i));return e}k.extend({htmlPrefilter:function(e){return e.replace(we,"<$1></$2>")},clone:function(e,t,n){var i,o,s,r,a,l,c,u=e.cloneNode(!0),d=k.contains(e.ownerDocument,e);if(!(m.noCloneChecked||1!==e.nodeType&&11!==e.nodeType||k.isXMLDoc(e)))for(r=w(u),i=0,o=(s=w(e)).length;i<o;i++)a=s[i],l=r[i],c=void 0,"input"===(c=l.nodeName.toLowerCase())&&le.test(a.type)?l.checked=a.checked:"input"!==c&&"textarea"!==c||(l.defaultValue=a.defaultValue);if(t)if(n)for(s=s||w(e),r=r||w(u),i=0,o=s.length;i<o;i++)Ie(s[i],r[i]);else Ie(e,u);return 0<(r=w(u,"script")).length&&de(r,!d&&w(e,"script")),u},cleanData:function(e){for(var t,n,i,o=k.event.special,s=0;void 0!==(n=e[s]);s++)if(g(n)){if(t=n[v.expando]){if(t.events)for(i in t.events)o[i]?k.event.remove(n,i):k.removeEvent(n,i,t.handle);n[v.expando]=void 0}n[l.expando]&&(n[l.expando]=void 0)}}}),k.fn.extend({domManip:$,detach:function(e){return Ne(this,e,!0)},remove:function(e){return Ne(this,e)},text:function(e){return d(this,function(e){return void 0===e?k.text(this):this.empty().each(function(){1!==this.nodeType&&11!==this.nodeType&&9!==this.nodeType||(this.textContent=e)})},null,e,arguments.length)},append:function(){return $(this,arguments,function(e){1!==this.nodeType&&11!==this.nodeType&&9!==this.nodeType||$e(this,e).appendChild(e)})},prepend:function(){return $(this,arguments,function(e){var t;1!==this.nodeType&&11!==this.nodeType&&9!==this.nodeType||(t=$e(this,e)).insertBefore(e,t.firstChild)})},before:function(){return $(this,arguments,function(e){this.parentNode&&this.parentNode.insertBefore(e,this)})},after:function(){return $(this,arguments,function(e){this.parentNode&&this.parentNode.insertBefore(e,this.nextSibling)})},empty:function(){for(var e,t=0;null!=(e=this[t]);t++)1===e.nodeType&&(k.cleanData(w(e,!1)),e.textContent="");return this},clone:function(e,t){return e=null!=e&&e,t=null==t?e:t,this.map(function(){return k.clone(this,e,t)})},html:function(e){return d(this,function(e){var t=this[0]||{},n=0,i=this.length;if(void 0===e&&1===t.nodeType)return t.innerHTML;if("string"==typeof e&&!xe.test(e)&&!b[(ce.exec(e)||["",""])[1].toLowerCase()]){e=k.htmlPrefilter(e);try{for(;n<i;n++)1===(t=this[n]||{}).nodeType&&(k.cleanData(w(t,!1)),t.innerHTML=e);t=0}catch(e){}}t&&this.empty().append(e)},null,e,arguments.length)},replaceWith:function(){var n=[];return $(this,arguments,function(e){var t=this.parentNode;k.inArray(this,n)<0&&(k.cleanData(w(this)),t&&t.replaceChild(e,this))},n)}}),k.each({appendTo:"append",prependTo:"prepend",insertBefore:"before",insertAfter:"after",replaceAll:"replaceWith"},function(e,r){k.fn[e]=function(e){for(var t,n=[],i=k(e),o=i.length-1,s=0;s<=o;s++)t=s===o?this:this.clone(!0),k(i[s])[r](t),W.apply(n,t.get());return this.pushStack(n)}});var De,Ae={HTML:"block",BODY:"block"};function Oe(e,t){e=k(t.createElement(e)).appendTo(t.body),t=k.css(e[0],"display");return e.detach(),t}function je(e){var t=T,n=Ae[e];return n||("none"!==(n=Oe(e,t))&&n||((t=(De=(De||k("<iframe frameborder='0' width='0' height='0'/>")).appendTo(t.documentElement))[0].contentDocument).write(),t.close(),n=Oe(e,t),De.detach()),Ae[e]=n),n}function Le(e){var t=e.ownerDocument.defaultView;return(t=t&&t.opener?t:x).getComputedStyle(e)}function He(e,t,n,i){var o,s={};for(o in t)s[o]=e.style[o],e.style[o]=t[o];for(o in n=n.apply(e,i||[]),t)e.style[o]=s[o];return n}var Re,n,ze,Pe,s,r,We=/^margin/,Me=new RegExp("^("+e+")(?!px)[a-z%]+$","i"),h=T.documentElement;function Fe(){r.style.cssText="-webkit-box-sizing:border-box;-moz-box-sizing:border-box;box-sizing:border-box;position:relative;display:block;margin:auto;border:1px;padding:1px;top:1%;width:50%",r.innerHTML="",h.appendChild(s);var e=x.getComputedStyle(r);Re="1%"!==e.top,Pe="2px"===e.marginLeft,n="4px"===e.width,r.style.marginRight="50%",ze="4px"===e.marginRight,h.removeChild(s)}function S(e,t,n){var i,o,s=e.style;return""!==(o=(n=n||Le(e))?n.getPropertyValue(t)||n[t]:void 0)&&void 0!==o||k.contains(e.ownerDocument,e)||(o=k.style(e,t)),n&&!m.pixelMarginRight()&&Me.test(o)&&We.test(t)&&(e=s.width,t=s.minWidth,i=s.maxWidth,s.minWidth=s.maxWidth=s.width=o,o=n.width,s.width=e,s.minWidth=t,s.maxWidth=i),void 0!==o?o+"":o}function qe(e,t){return{get:function(){if(!e())return(this.get=t).apply(this,arguments);delete this.get}}}s=T.createElement("div"),(r=T.createElement("div")).style&&(r.style.backgroundClip="content-box",r.cloneNode(!0).style.backgroundClip="",m.clearCloneStyle="content-box"===r.style.backgroundClip,s.style.cssText="border:0;width:8px;height:0;top:0;left:-9999px;padding:0;margin-top:1px;position:absolute",s.appendChild(r),k.extend(m,{pixelPosition:function(){return Fe(),Re},boxSizingReliable:function(){return null==n&&Fe(),n},pixelMarginRight:function(){return null==n&&Fe(),ze},reliableMarginLeft:function(){return null==n&&Fe(),Pe},reliableMarginRight:function(){var e,t=r.appendChild(T.createElement("div"));return t.style.cssText=r.style.cssText="-webkit-box-sizing:content-box;box-sizing:content-box;display:block;margin:0;border:0;padding:0",t.style.marginRight=t.style.width="0",r.style.width="1px",h.appendChild(s),e=!parseFloat(x.getComputedStyle(t).marginRight),h.removeChild(s),r.removeChild(t),e}}));var Be=/^(none|table(?!-c[ea]).+)/,Ue={position:"absolute",visibility:"hidden",display:"block"},_e={letterSpacing:"0",fontWeight:"400"},Ve=["Webkit","O","Moz","ms"],Ge=T.createElement("div").style;function Xe(e){if(e in Ge)return e;for(var t=e[0].toUpperCase()+e.slice(1),n=Ve.length;n--;)if((e=Ve[n]+t)in Ge)return e}function Qe(e,t,n){var i=p.exec(t);return i?Math.max(0,i[2]-(n||0))+(i[3]||"px"):t}function Ke(e,t,n,i,o){for(var s=n===(i?"border":"content")?4:"width"===t?1:0,r=0;s<4;s+=2)"margin"===n&&(r+=k.css(e,n+a[s],!0,o)),i?("content"===n&&(r-=k.css(e,"padding"+a[s],!0,o)),"margin"!==n&&(r-=k.css(e,"border"+a[s]+"Width",!0,o))):(r+=k.css(e,"padding"+a[s],!0,o),"padding"!==n&&(r+=k.css(e,"border"+a[s]+"Width",!0,o)));return r}function Ye(e,t,n){var i=!0,o="width"===t?e.offsetWidth:e.offsetHeight,s=Le(e),r="border-box"===k.css(e,"boxSizing",!1,s);if(o<=0||null==o){if(((o=S(e,t,s))<0||null==o)&&(o=e.style[t]),Me.test(o))return o;i=r&&(m.boxSizingReliable()||o===e.style[t]),o=parseFloat(o)||0}return o+Ke(e,t,n||(r?"border":"content"),i,s)+"px"}function Je(e,t){for(var n,i,o,s=[],r=0,a=e.length;r<a;r++)(i=e[r]).style&&(s[r]=v.get(i,"olddisplay"),n=i.style.display,t?(s[r]||"none"!==n||(i.style.display=""),""===i.style.display&&y(i)&&(s[r]=v.access(i,"olddisplay",je(i.nodeName)))):(o=y(i),"none"===n&&o||v.set(i,"olddisplay",o?n:k.css(i,"display"))));for(r=0;r<a;r++)!(i=e[r]).style||t&&"none"!==i.style.display&&""!==i.style.display||(i.style.display=t?s[r]||"":"none");return e}function E(e,t,n,i,o){return new E.prototype.init(e,t,n,i,o)}k.extend({cssHooks:{opacity:{get:function(e,t){if(t)return""===(t=S(e,"opacity"))?"1":t}}},cssNumber:{animationIterationCount:!0,columnCount:!0,fillOpacity:!0,flexGrow:!0,flexShrink:!0,fontWeight:!0,lineHeight:!0,opacity:!0,order:!0,orphans:!0,widows:!0,zIndex:!0,zoom:!0},cssProps:{float:"cssFloat"},style:function(e,t,n,i){if(e&&3!==e.nodeType&&8!==e.nodeType&&e.style){var o,s,r,a=k.camelCase(t),l=e.style;if(t=k.cssProps[a]||(k.cssProps[a]=Xe(a)||a),r=k.cssHooks[t]||k.cssHooks[a],void 0===n)return r&&"get"in r&&void 0!==(o=r.get(e,!1,i))?o:l[t];"string"===(s=typeof n)&&(o=p.exec(n))&&o[1]&&(n=ae(e,t,o),s="number"),null!=n&&n==n&&("number"===s&&(n+=o&&o[3]||(k.cssNumber[a]?"":"px")),m.clearCloneStyle||""!==n||0!==t.indexOf("background")||(l[t]="inherit"),r&&"set"in r&&void 0===(n=r.set(e,n,i))||(l[t]=n))}},css:function(e,t,n,i){var o,s=k.camelCase(t);return t=k.cssProps[s]||(k.cssProps[s]=Xe(s)||s),"normal"===(o=void 0===(o=(s=k.cssHooks[t]||k.cssHooks[s])&&"get"in s?s.get(e,!0,n):o)?S(e,t,i):o)&&t in _e&&(o=_e[t]),""===n||n?(s=parseFloat(o),!0===n||isFinite(s)?s||0:o):o}}),k.each(["height","width"],function(e,o){k.cssHooks[o]={get:function(e,t,n){if(t)return Be.test(k.css(e,"display"))&&0===e.offsetWidth?He(e,Ue,function(){return Ye(e,o,n)}):Ye(e,o,n)},set:function(e,t,n){var i=n&&Le(e),n=n&&Ke(e,o,n,"border-box"===k.css(e,"boxSizing",!1,i),i);return n&&(i=p.exec(t))&&"px"!==(i[3]||"px")&&(e.style[o]=t,t=k.css(e,o)),Qe(0,t,n)}}}),k.cssHooks.marginLeft=qe(m.reliableMarginLeft,function(e,t){if(t)return(parseFloat(S(e,"marginLeft"))||e.getBoundingClientRect().left-He(e,{marginLeft:0},function(){return e.getBoundingClientRect().left}))+"px"}),k.cssHooks.marginRight=qe(m.reliableMarginRight,function(e,t){if(t)return He(e,{display:"inline-block"},S,[e,"marginRight"])}),k.each({margin:"",padding:"",border:"Width"},function(o,s){k.cssHooks[o+s]={expand:function(e){for(var t=0,n={},i="string"==typeof e?e.split(" "):[e];t<4;t++)n[o+a[t]+s]=i[t]||i[t-2]||i[0];return n}},We.test(o)||(k.cssHooks[o+s].set=Qe)}),k.fn.extend({css:function(e,t){return d(this,function(e,t,n){var i,o,s={},r=0;if(k.isArray(t)){for(i=Le(e),o=t.length;r<o;r++)s[t[r]]=k.css(e,t[r],!1,i);return s}return void 0!==n?k.style(e,t,n):k.css(e,t)},e,t,1<arguments.length)},show:function(){return Je(this,!0)},hide:function(){return Je(this)},toggle:function(e){return"boolean"==typeof e?e?this.show():this.hide():this.each(function(){y(this)?k(this).show():k(this).hide()})}}),((k.Tween=E).prototype={constructor:E,init:function(e,t,n,i,o,s){this.elem=e,this.prop=n,this.easing=o||k.easing._default,this.options=t,this.start=this.now=this.cur(),this.end=i,this.unit=s||(k.cssNumber[n]?"":"px")},cur:function(){var e=E.propHooks[this.prop];return(e&&e.get?e:E.propHooks._default).get(this)},run:function(e){var t,n=E.propHooks[this.prop];return this.options.duration?this.pos=t=k.easing[this.easing](e,this.options.duration*e,0,1,this.options.duration):this.pos=t=e,this.now=(this.end-this.start)*t+this.start,this.options.step&&this.options.step.call(this.elem,this.now,this),(n&&n.set?n:E.propHooks._default).set(this),this}}).init.prototype=E.prototype,(E.propHooks={_default:{get:function(e){return 1!==e.elem.nodeType||null!=e.elem[e.prop]&&null==e.elem.style[e.prop]?e.elem[e.prop]:(e=k.css(e.elem,e.prop,""))&&"auto"!==e?e:0},set:function(e){k.fx.step[e.prop]?k.fx.step[e.prop](e):1!==e.elem.nodeType||null==e.elem.style[k.cssProps[e.prop]]&&!k.cssHooks[e.prop]?e.elem[e.prop]=e.now:k.style(e.elem,e.prop,e.now+e.unit)}}}).scrollTop=E.propHooks.scrollLeft={set:function(e){e.elem.nodeType&&e.elem.parentNode&&(e.elem[e.prop]=e.now)}},k.easing={linear:function(e){return e},swing:function(e){return.5-Math.cos(e*Math.PI)/2},_default:"swing"},k.fx=E.prototype.init,k.fx.step={};var I,Ze,N,D,et=/^(?:toggle|show|hide)$/,tt=/queueHooks$/;function nt(){return x.setTimeout(function(){I=void 0}),I=k.now()}function it(e,t){var n,i=0,o={height:e};for(t=t?1:0;i<4;i+=2-t)o["margin"+(n=a[i])]=o["padding"+n]=e;return t&&(o.opacity=o.width=e),o}function ot(e,t,n){for(var i,o=(A.tweeners[t]||[]).concat(A.tweeners["*"]),s=0,r=o.length;s<r;s++)if(i=o[s].call(n,t,e))return i}function A(o,e,t){var n,s,i,r,a,l,c,u=0,d=A.prefilters.length,p=k.Deferred().always(function(){delete h.elem}),h=function(){if(s)return!1;for(var e=I||nt(),e=Math.max(0,f.startTime+f.duration-e),t=1-(e/f.duration||0),n=0,i=f.tweens.length;n<i;n++)f.tweens[n].run(t);return p.notifyWith(o,[f,t,e]),t<1&&i?e:(p.resolveWith(o,[f]),!1)},f=p.promise({elem:o,props:k.extend({},e),opts:k.extend(!0,{specialEasing:{},easing:k.easing._default},t),originalProperties:e,originalOptions:t,startTime:I||nt(),duration:t.duration,tweens:[],createTween:function(e,t){t=k.Tween(o,f.opts,e,t,f.opts.specialEasing[e]||f.opts.easing);return f.tweens.push(t),t},stop:function(e){var t=0,n=e?f.tweens.length:0;if(s)return this;for(s=!0;t<n;t++)f.tweens[t].run(1);return e?(p.notifyWith(o,[f,1,0]),p.resolveWith(o,[f,e])):p.rejectWith(o,[f,e]),this}}),m=f.props,g=m,v=f.opts.specialEasing;for(i in g)if(a=v[r=k.camelCase(i)],l=g[i],k.isArray(l)&&(a=l[1],l=g[i]=l[0]),i!==r&&(g[r]=l,delete g[i]),(c=k.cssHooks[r])&&"expand"in c)for(i in l=c.expand(l),delete g[r],l)i in g||(g[i]=l[i],v[i]=a);else v[r]=a;for(;u<d;u++)if(n=A.prefilters[u].call(f,o,m,f.opts))return k.isFunction(n.stop)&&(k._queueHooks(f.elem,f.opts.queue).stop=k.proxy(n.stop,n)),n;return k.map(m,ot,f),k.isFunction(f.opts.start)&&f.opts.start.call(o,f),k.fx.timer(k.extend(h,{elem:o,anim:f,queue:f.opts.queue})),f.progress(f.opts.progress).done(f.opts.done,f.opts.complete).fail(f.opts.fail).always(f.opts.always)}k.Animation=k.extend(A,{tweeners:{"*":[function(e,t){var n=this.createTween(e,t);return ae(n.elem,e,p.exec(t),n),n}]},tweener:function(e,t){for(var n,i=0,o=(e=k.isFunction(e)?(t=e,["*"]):e.match(C)).length;i<o;i++)n=e[i],A.tweeners[n]=A.tweeners[n]||[],A.tweeners[n].unshift(t)},prefilters:[function(t,e,n){var i,o,s,r,a,l,c,u=this,d={},p=t.style,h=t.nodeType&&y(t),f=v.get(t,"fxshow");for(i in n.queue||(null==(a=k._queueHooks(t,"fx")).unqueued&&(a.unqueued=0,l=a.empty.fire,a.empty.fire=function(){a.unqueued||l()}),a.unqueued++,u.always(function(){u.always(function(){a.unqueued--,k.queue(t,"fx").length||a.empty.fire()})})),1===t.nodeType&&("height"in e||"width"in e)&&(n.overflow=[p.overflow,p.overflowX,p.overflowY],"inline"===("none"===(c=k.css(t,"display"))?v.get(t,"olddisplay")||je(t.nodeName):c)&&"none"===k.css(t,"float")&&(p.display="inline-block")),n.overflow&&(p.overflow="hidden",u.always(function(){p.overflow=n.overflow[0],p.overflowX=n.overflow[1],p.overflowY=n.overflow[2]})),e)if(o=e[i],et.exec(o)){if(delete e[i],s=s||"toggle"===o,o===(h?"hide":"show")){if("show"!==o||!f||void 0===f[i])continue;h=!0}d[i]=f&&f[i]||k.style(t,i)}else c=void 0;if(k.isEmptyObject(d))"inline"===("none"===c?je(t.nodeName):c)&&(p.display=c);else for(i in f?"hidden"in f&&(h=f.hidden):f=v.access(t,"fxshow",{}),s&&(f.hidden=!h),h?k(t).show():u.done(function(){k(t).hide()}),u.done(function(){for(var e in v.remove(t,"fxshow"),d)k.style(t,e,d[e])}),d)r=ot(h?f[i]:0,i,u),i in f||(f[i]=r.start,h&&(r.end=r.start,r.start="width"===i||"height"===i?1:0))}],prefilter:function(e,t){t?A.prefilters.unshift(e):A.prefilters.push(e)}}),k.speed=function(e,t,n){var i=e&&"object"==typeof e?k.extend({},e):{complete:n||!n&&t||k.isFunction(e)&&e,duration:e,easing:n&&t||t&&!k.isFunction(t)&&t};return i.duration=k.fx.off?0:"number"==typeof i.duration?i.duration:i.duration in k.fx.speeds?k.fx.speeds[i.duration]:k.fx.speeds._default,null!=i.queue&&!0!==i.queue||(i.queue="fx"),i.old=i.complete,i.complete=function(){k.isFunction(i.old)&&i.old.call(this),i.queue&&k.dequeue(this,i.queue)},i},k.fn.extend({fadeTo:function(e,t,n,i){return this.filter(y).css("opacity",0).show().end().animate({opacity:t},e,n,i)},animate:function(t,e,n,i){function o(){var e=A(this,k.extend({},t),r);(s||v.get(this,"finish"))&&e.stop(!0)}var s=k.isEmptyObject(t),r=k.speed(e,n,i);return o.finish=o,s||!1===r.queue?this.each(o):this.queue(r.queue,o)},stop:function(o,e,s){function r(e){var t=e.stop;delete e.stop,t(s)}return"string"!=typeof o&&(s=e,e=o,o=void 0),e&&!1!==o&&this.queue(o||"fx",[]),this.each(function(){var e=!0,t=null!=o&&o+"queueHooks",n=k.timers,i=v.get(this);if(t)i[t]&&i[t].stop&&r(i[t]);else for(t in i)i[t]&&i[t].stop&&tt.test(t)&&r(i[t]);for(t=n.length;t--;)n[t].elem!==this||null!=o&&n[t].queue!==o||(n[t].anim.stop(s),e=!1,n.splice(t,1));!e&&s||k.dequeue(this,o)})},finish:function(r){return!1!==r&&(r=r||"fx"),this.each(function(){var e,t=v.get(this),n=t[r+"queue"],i=t[r+"queueHooks"],o=k.timers,s=n?n.length:0;for(t.finish=!0,k.queue(this,r,[]),i&&i.stop&&i.stop.call(this,!0),e=o.length;e--;)o[e].elem===this&&o[e].queue===r&&(o[e].anim.stop(!0),o.splice(e,1));for(e=0;e<s;e++)n[e]&&n[e].finish&&n[e].finish.call(this);delete t.finish})}}),k.each(["toggle","show","hide"],function(e,i){var o=k.fn[i];k.fn[i]=function(e,t,n){return null==e||"boolean"==typeof e?o.apply(this,arguments):this.animate(it(i,!0),e,t,n)}}),k.each({slideDown:it("show"),slideUp:it("hide"),slideToggle:it("toggle"),fadeIn:{opacity:"show"},fadeOut:{opacity:"hide"},fadeToggle:{opacity:"toggle"}},function(e,i){k.fn[e]=function(e,t,n){return this.animate(i,e,t,n)}}),k.timers=[],k.fx.tick=function(){var e,t=0,n=k.timers;for(I=k.now();t<n.length;t++)(e=n[t])()||n[t]!==e||n.splice(t--,1);n.length||k.fx.stop(),I=void 0},k.fx.timer=function(e){k.timers.push(e),e()?k.fx.start():k.timers.pop()},k.fx.interval=13,k.fx.start=function(){Ze=Ze||x.setInterval(k.fx.tick,k.fx.interval)},k.fx.stop=function(){x.clearInterval(Ze),Ze=null},k.fx.speeds={slow:600,fast:200,_default:400},k.fn.delay=function(i,e){return i=k.fx&&k.fx.speeds[i]||i,this.queue(e=e||"fx",function(e,t){var n=x.setTimeout(e,i);t.stop=function(){x.clearTimeout(n)}})},N=T.createElement("input"),D=T.createElement("select"),e=D.appendChild(T.createElement("option")),N.type="checkbox",m.checkOn=""!==N.value,m.optSelected=e.selected,D.disabled=!0,m.optDisabled=!e.disabled,(N=T.createElement("input")).value="t",N.type="radio",m.radioValue="t"===N.value;var st,O=k.expr.attrHandle,rt=(k.fn.extend({attr:function(e,t){return d(this,k.attr,e,t,1<arguments.length)},removeAttr:function(e){return this.each(function(){k.removeAttr(this,e)})}}),k.extend({attr:function(e,t,n){var i,o,s=e.nodeType;if(3!==s&&8!==s&&2!==s)return void 0===e.getAttribute?k.prop(e,t,n):(1===s&&k.isXMLDoc(e)||(t=t.toLowerCase(),o=k.attrHooks[t]||(k.expr.match.bool.test(t)?st:void 0)),void 0!==n?null===n?void k.removeAttr(e,t):o&&"set"in o&&void 0!==(i=o.set(e,n,t))?i:(e.setAttribute(t,n+""),n):!(o&&"get"in o&&null!==(i=o.get(e,t)))&&null==(i=k.find.attr(e,t))?void 0:i)},attrHooks:{type:{set:function(e,t){var n;if(!m.radioValue&&"radio"===t&&k.nodeName(e,"input"))return n=e.value,e.setAttribute("type",t),n&&(e.value=n),t}}},removeAttr:function(e,t){var n,i,o=0,s=t&&t.match(C);if(s&&1===e.nodeType)for(;n=s[o++];)i=k.propFix[n]||n,k.expr.match.bool.test(n)&&(e[i]=!1),e.removeAttribute(n)}}),st={set:function(e,t,n){return!1===t?k.removeAttr(e,n):e.setAttribute(n,n),n}},k.each(k.expr.match.bool.source.match(/\w+/g),function(e,t){var s=O[t]||k.find.attr;O[t]=function(e,t,n){var i,o;return n||(o=O[t],O[t]=i,i=null!=s(e,t,n)?t.toLowerCase():null,O[t]=o),i}}),/^(?:input|select|textarea|button)$/i),at=/^(?:a|area)$/i,lt=(k.fn.extend({prop:function(e,t){return d(this,k.prop,e,t,1<arguments.length)},removeProp:function(e){return this.each(function(){delete this[k.propFix[e]||e]})}}),k.extend({prop:function(e,t,n){var i,o,s=e.nodeType;if(3!==s&&8!==s&&2!==s)return 1===s&&k.isXMLDoc(e)||(t=k.propFix[t]||t,o=k.propHooks[t]),void 0!==n?o&&"set"in o&&void 0!==(i=o.set(e,n,t))?i:e[t]=n:o&&"get"in o&&null!==(i=o.get(e,t))?i:e[t]},propHooks:{tabIndex:{get:function(e){var t=k.find.attr(e,"tabindex");return t?parseInt(t,10):rt.test(e.nodeName)||at.test(e.nodeName)&&e.href?0:-1}}},propFix:{for:"htmlFor",class:"className"}}),m.optSelected||(k.propHooks.selected={get:function(e){e=e.parentNode;return e&&e.parentNode&&e.parentNode.selectedIndex,null},set:function(e){e=e.parentNode;e&&(e.selectedIndex,e.parentNode&&e.parentNode.selectedIndex)}}),k.each(["tabIndex","readOnly","maxLength","cellSpacing","cellPadding","rowSpan","colSpan","useMap","frameBorder","contentEditable"],function(){k.propFix[this.toLowerCase()]=this}),/[\t\r\n\f]/g);function j(e){return e.getAttribute&&e.getAttribute("class")||""}k.fn.extend({addClass:function(t){var e,n,i,o,s,r,a=0;if(k.isFunction(t))return this.each(function(e){k(this).addClass(t.call(this,e,j(this)))});if("string"==typeof t&&t)for(e=t.match(C)||[];n=this[a++];)if(r=j(n),i=1===n.nodeType&&(" "+r+" ").replace(lt," ")){for(s=0;o=e[s++];)i.indexOf(" "+o+" ")<0&&(i+=o+" ");r!==(r=k.trim(i))&&n.setAttribute("class",r)}return this},removeClass:function(t){var e,n,i,o,s,r,a=0;if(k.isFunction(t))return this.each(function(e){k(this).removeClass(t.call(this,e,j(this)))});if(!arguments.length)return this.attr("class","");if("string"==typeof t&&t)for(e=t.match(C)||[];n=this[a++];)if(r=j(n),i=1===n.nodeType&&(" "+r+" ").replace(lt," ")){for(s=0;o=e[s++];)for(;-1<i.indexOf(" "+o+" ");)i=i.replace(" "+o+" "," ");r!==(r=k.trim(i))&&n.setAttribute("class",r)}return this},toggleClass:function(o,t){var s=typeof o;return"boolean"==typeof t&&"string"==s?t?this.addClass(o):this.removeClass(o):k.isFunction(o)?this.each(function(e){k(this).toggleClass(o.call(this,e,j(this),t),t)}):this.each(function(){var e,t,n,i;if("string"==s)for(t=0,n=k(this),i=o.match(C)||[];e=i[t++];)n.hasClass(e)?n.removeClass(e):n.addClass(e);else void 0!==o&&"boolean"!=s||((e=j(this))&&v.set(this,"__className__",e),this.setAttribute&&this.setAttribute("class",!e&&!1!==o&&v.get(this,"__className__")||""))})},hasClass:function(e){for(var t,n=0,i=" "+e+" ";t=this[n++];)if(1===t.nodeType&&-1<(" "+j(t)+" ").replace(lt," ").indexOf(i))return!0;return!1}});var ct=/\r/g,ut=/[\x20\t\r\n\f]+/g,dt=(k.fn.extend({val:function(t){var n,e,i,o=this[0];return arguments.length?(i=k.isFunction(t),this.each(function(e){1===this.nodeType&&(null==(e=i?t.call(this,e,k(this).val()):t)?e="":"number"==typeof e?e+="":k.isArray(e)&&(e=k.map(e,function(e){return null==e?"":e+""})),(n=k.valHooks[this.type]||k.valHooks[this.nodeName.toLowerCase()])&&"set"in n&&void 0!==n.set(this,e,"value")||(this.value=e))})):o?(n=k.valHooks[o.type]||k.valHooks[o.nodeName.toLowerCase()])&&"get"in n&&void 0!==(e=n.get(o,"value"))?e:"string"==typeof(e=o.value)?e.replace(ct,""):null==e?"":e:void 0}}),k.extend({valHooks:{option:{get:function(e){var t=k.find.attr(e,"value");return null!=t?t:k.trim(k.text(e)).replace(ut," ")}},select:{get:function(e){for(var t,n=e.options,i=e.selectedIndex,o="select-one"===e.type||i<0,s=o?null:[],r=o?i+1:n.length,a=i<0?r:o?i:0;a<r;a++)if(((t=n[a]).selected||a===i)&&(m.optDisabled?!t.disabled:null===t.getAttribute("disabled"))&&(!t.parentNode.disabled||!k.nodeName(t.parentNode,"optgroup"))){if(t=k(t).val(),o)return t;s.push(t)}return s},set:function(e,t){for(var n,i,o=e.options,s=k.makeArray(t),r=o.length;r--;)((i=o[r]).selected=-1<k.inArray(k.valHooks.option.get(i),s))&&(n=!0);return n||(e.selectedIndex=-1),s}}}}),k.each(["radio","checkbox"],function(){k.valHooks[this]={set:function(e,t){if(k.isArray(t))return e.checked=-1<k.inArray(k(e).val(),t)}},m.checkOn||(k.valHooks[this].get=function(e){return null===e.getAttribute("value")?"on":e.value})}),/^(?:focusinfocus|focusoutblur)$/),L=(k.extend(k.event,{trigger:function(e,t,n,i){var o,s,r,a,l,c,u=[n||T],d=f.call(e,"type")?e.type:e,p=f.call(e,"namespace")?e.namespace.split("."):[],h=s=n=n||T;if(3!==n.nodeType&&8!==n.nodeType&&!dt.test(d+k.event.triggered)&&(-1<d.indexOf(".")&&(d=(p=d.split(".")).shift(),p.sort()),a=d.indexOf(":")<0&&"on"+d,(e=e[k.expando]?e:new k.Event(d,"object"==typeof e&&e)).isTrigger=i?2:3,e.namespace=p.join("."),e.rnamespace=e.namespace?new RegExp("(^|\\.)"+p.join("\\.(?:.*\\.|)")+"(\\.|$)"):null,e.result=void 0,e.target||(e.target=n),t=null==t?[e]:k.makeArray(t,[e]),c=k.event.special[d]||{},i||!c.trigger||!1!==c.trigger.apply(n,t))){if(!i&&!c.noBubble&&!k.isWindow(n)){for(r=c.delegateType||d,dt.test(r+d)||(h=h.parentNode);h;h=h.parentNode)u.push(h),s=h;s===(n.ownerDocument||T)&&u.push(s.defaultView||s.parentWindow||x)}for(o=0;(h=u[o++])&&!e.isPropagationStopped();)e.type=1<o?r:c.bindType||d,(l=(v.get(h,"events")||{})[e.type]&&v.get(h,"handle"))&&l.apply(h,t),(l=a&&h[a])&&l.apply&&g(h)&&(e.result=l.apply(h,t),!1===e.result&&e.preventDefault());return e.type=d,i||e.isDefaultPrevented()||c._default&&!1!==c._default.apply(u.pop(),t)||!g(n)||a&&k.isFunction(n[d])&&!k.isWindow(n)&&((s=n[a])&&(n[a]=null),n[k.event.triggered=d](),k.event.triggered=void 0,s&&(n[a]=s)),e.result}},simulate:function(e,t,n){n=k.extend(new k.Event,n,{type:e,isSimulated:!0});k.event.trigger(n,null,t)}}),k.fn.extend({trigger:function(e,t){return this.each(function(){k.event.trigger(e,t,this)})},triggerHandler:function(e,t){var n=this[0];if(n)return k.event.trigger(e,t,n,!0)}}),k.each("blur focus focusin focusout load resize scroll unload click dblclick mousedown mouseup mousemove mouseover mouseout mouseenter mouseleave change select submit keydown keypress keyup error contextmenu".split(" "),function(e,n){k.fn[n]=function(e,t){return 0<arguments.length?this.on(n,null,e,t):this.trigger(n)}}),k.fn.extend({hover:function(e,t){return this.mouseenter(e).mouseleave(t||e)}}),m.focusin="onfocusin"in x,m.focusin||k.each({focus:"focusin",blur:"focusout"},function(n,i){function o(e){k.event.simulate(i,e.target,k.event.fix(e))}k.event.special[i]={setup:function(){var e=this.ownerDocument||this,t=v.access(e,i);t||e.addEventListener(n,o,!0),v.access(e,i,(t||0)+1)},teardown:function(){var e=this.ownerDocument||this,t=v.access(e,i)-1;t?v.access(e,i,t):(e.removeEventListener(n,o,!0),v.remove(e,i))}}}),x.location),pt=k.now(),ht=/\?/,ft=(k.parseJSON=function(e){return JSON.parse(e+"")},k.parseXML=function(e){var t;if(!e||"string"!=typeof e)return null;try{t=(new x.DOMParser).parseFromString(e,"text/xml")}catch(e){t=void 0}return t&&!t.getElementsByTagName("parsererror").length||k.error("Invalid XML: "+e),t},/#.*$/),mt=/([?&])_=[^&]*/,gt=/^(.*?):[ \t]*([^\r\n]*)$/gm,vt=/^(?:GET|HEAD)$/,yt=/^\/\//,bt={},wt={},xt="*/".concat("*"),Tt=T.createElement("a");function kt(s){return function(e,t){"string"!=typeof e&&(t=e,e="*");var n,i=0,o=e.toLowerCase().match(C)||[];if(k.isFunction(t))for(;n=o[i++];)"+"===n[0]?(n=n.slice(1)||"*",(s[n]=s[n]||[]).unshift(t)):(s[n]=s[n]||[]).push(t)}}function Ct(t,i,o,s){var r={},a=t===wt;function l(e){var n;return r[e]=!0,k.each(t[e]||[],function(e,t){t=t(i,o,s);return"string"!=typeof t||a||r[t]?a?!(n=t):void 0:(i.dataTypes.unshift(t),l(t),!1)}),n}return l(i.dataTypes[0])||!r["*"]&&l("*")}function $t(e,t){var n,i,o=k.ajaxSettings.flatOptions||{};for(n in t)void 0!==t[n]&&((o[n]?e:i=i||{})[n]=t[n]);return i&&k.extend(!0,e,i),e}Tt.href=L.href,k.extend({active:0,lastModified:{},etag:{},ajaxSettings:{url:L.href,type:"GET",isLocal:/^(?:about|app|app-storage|.+-extension|file|res|widget):$/.test(L.protocol),global:!0,processData:!0,async:!0,contentType:"application/x-www-form-urlencoded; charset=UTF-8",accepts:{"*":xt,text:"text/plain",html:"text/html",xml:"application/xml, text/xml",json:"application/json, text/javascript"},contents:{xml:/\bxml\b/,html:/\bhtml/,json:/\bjson\b/},responseFields:{xml:"responseXML",text:"responseText",json:"responseJSON"},converters:{"* text":String,"text html":!0,"text json":k.parseJSON,"text xml":k.parseXML},flatOptions:{url:!0,context:!0}},ajaxSetup:function(e,t){return t?$t($t(e,k.ajaxSettings),t):$t(k.ajaxSettings,e)},ajaxPrefilter:kt(bt),ajaxTransport:kt(wt),ajax:function(e,t){"object"==typeof e&&(t=e,e=void 0);var l,c,u,n,d,p,i,h=k.ajaxSetup({},t=t||{}),f=h.context||h,m=h.context&&(f.nodeType||f.jquery)?k(f):k.event,g=k.Deferred(),v=k.Callbacks("once memory"),y=h.statusCode||{},o={},s={},b=0,r="canceled",w={readyState:0,getResponseHeader:function(e){var t;if(2===b){if(!n)for(n={};t=gt.exec(u);)n[t[1].toLowerCase()]=t[2];t=n[e.toLowerCase()]}return null==t?null:t},getAllResponseHeaders:function(){return 2===b?u:null},setRequestHeader:function(e,t){var n=e.toLowerCase();return b||(e=s[n]=s[n]||e,o[e]=t),this},overrideMimeType:function(e){return b||(h.mimeType=e),this},statusCode:function(e){if(e)if(b<2)for(var t in e)y[t]=[y[t],e[t]];else w.always(e[w.status]);return this},abort:function(e){e=e||r;return l&&l.abort(e),a(0,e),this}};if(g.promise(w).complete=v.add,w.success=w.done,w.error=w.fail,h.url=((e||h.url||L.href)+"").replace(ft,"").replace(yt,L.protocol+"//"),h.type=t.method||t.type||h.method||h.type,h.dataTypes=k.trim(h.dataType||"*").toLowerCase().match(C)||[""],null==h.crossDomain){e=T.createElement("a");try{e.href=h.url,e.href=e.href,h.crossDomain=Tt.protocol+"//"+Tt.host!=e.protocol+"//"+e.host}catch(e){h.crossDomain=!0}}if(h.data&&h.processData&&"string"!=typeof h.data&&(h.data=k.param(h.data,h.traditional)),Ct(bt,h,t,w),2===b)return w;for(i in(p=k.event&&h.global)&&0==k.active++&&k.event.trigger("ajaxStart"),h.type=h.type.toUpperCase(),h.hasContent=!vt.test(h.type),c=h.url,h.hasContent||(h.data&&(c=h.url+=(ht.test(c)?"&":"?")+h.data,delete h.data),!1===h.cache&&(h.url=mt.test(c)?c.replace(mt,"$1_="+pt++):c+(ht.test(c)?"&":"?")+"_="+pt++)),h.ifModified&&(k.lastModified[c]&&w.setRequestHeader("If-Modified-Since",k.lastModified[c]),k.etag[c]&&w.setRequestHeader("If-None-Match",k.etag[c])),(h.data&&h.hasContent&&!1!==h.contentType||t.contentType)&&w.setRequestHeader("Content-Type",h.contentType),w.setRequestHeader("Accept",h.dataTypes[0]&&h.accepts[h.dataTypes[0]]?h.accepts[h.dataTypes[0]]+("*"!==h.dataTypes[0]?", "+xt+"; q=0.01":""):h.accepts["*"]),h.headers)w.setRequestHeader(i,h.headers[i]);if(h.beforeSend&&(!1===h.beforeSend.call(f,w,h)||2===b))return w.abort();for(i in r="abort",{success:1,error:1,complete:1})w[i](h[i]);if(l=Ct(wt,h,t,w)){if(w.readyState=1,p&&m.trigger("ajaxSend",[w,h]),2===b)return w;h.async&&0<h.timeout&&(d=x.setTimeout(function(){w.abort("timeout")},h.timeout));try{b=1,l.send(o,a)}catch(e){if(!(b<2))throw e;a(-1,e)}}else a(-1,"No Transport");function a(e,t,n,i){var o,s,r,a=t;2!==b&&(b=2,d&&x.clearTimeout(d),l=void 0,u=i||"",w.readyState=0<e?4:0,i=200<=e&&e<300||304===e,n&&(r=function(e,t,n){for(var i,o,s,r,a=e.contents,l=e.dataTypes;"*"===l[0];)l.shift(),void 0===i&&(i=e.mimeType||t.getResponseHeader("Content-Type"));if(i)for(o in a)if(a[o]&&a[o].test(i)){l.unshift(o);break}if(l[0]in n)s=l[0];else{for(o in n){if(!l[0]||e.converters[o+" "+l[0]]){s=o;break}r=r||o}s=s||r}if(s)return s!==l[0]&&l.unshift(s),n[s]}(h,w,n)),r=function(e,t,n,i){var o,s,r,a,l,c={},u=e.dataTypes.slice();if(u[1])for(r in e.converters)c[r.toLowerCase()]=e.converters[r];for(s=u.shift();s;)if(e.responseFields[s]&&(n[e.responseFields[s]]=t),!l&&i&&e.dataFilter&&(t=e.dataFilter(t,e.dataType)),l=s,s=u.shift())if("*"===s)s=l;else if("*"!==l&&l!==s){if(!(r=c[l+" "+s]||c["* "+s]))for(o in c)if((a=o.split(" "))[1]===s&&(r=c[l+" "+a[0]]||c["* "+a[0]])){!0===r?r=c[o]:!0!==c[o]&&(s=a[0],u.unshift(a[1]));break}if(!0!==r)if(r&&e.throws)t=r(t);else try{t=r(t)}catch(e){return{state:"parsererror",error:r?e:"No conversion from "+l+" to "+s}}}return{state:"success",data:t}}(h,r,w,i),i?(h.ifModified&&((n=w.getResponseHeader("Last-Modified"))&&(k.lastModified[c]=n),(n=w.getResponseHeader("etag"))&&(k.etag[c]=n)),204===e||"HEAD"===h.type?a="nocontent":304===e?a="notmodified":(a=r.state,o=r.data,i=!(s=r.error))):(s=a,!e&&a||(a="error",e<0&&(e=0))),w.status=e,w.statusText=(t||a)+"",i?g.resolveWith(f,[o,a,w]):g.rejectWith(f,[w,a,s]),w.statusCode(y),y=void 0,p&&m.trigger(i?"ajaxSuccess":"ajaxError",[w,h,i?o:s]),v.fireWith(f,[w,a]),p&&(m.trigger("ajaxComplete",[w,h]),--k.active||k.event.trigger("ajaxStop")))}return w},getJSON:function(e,t,n){return k.get(e,t,n,"json")},getScript:function(e,t){return k.get(e,void 0,t,"script")}}),k.each(["get","post"],function(e,o){k[o]=function(e,t,n,i){return k.isFunction(t)&&(i=i||n,n=t,t=void 0),k.ajax(k.extend({url:e,type:o,dataType:i,data:t,success:n},k.isPlainObject(e)&&e))}}),k._evalUrl=function(e){return k.ajax({url:e,type:"GET",dataType:"script",async:!1,global:!1,throws:!0})},k.fn.extend({wrapAll:function(t){var e;return k.isFunction(t)?this.each(function(e){k(this).wrapAll(t.call(this,e))}):(this[0]&&(e=k(t,this[0].ownerDocument).eq(0).clone(!0),this[0].parentNode&&e.insertBefore(this[0]),e.map(function(){for(var e=this;e.firstElementChild;)e=e.firstElementChild;return e}).append(this)),this)},wrapInner:function(n){return k.isFunction(n)?this.each(function(e){k(this).wrapInner(n.call(this,e))}):this.each(function(){var e=k(this),t=e.contents();t.length?t.wrapAll(n):e.append(n)})},wrap:function(t){var n=k.isFunction(t);return this.each(function(e){k(this).wrapAll(n?t.call(this,e):t)})},unwrap:function(){return this.parent().each(function(){k.nodeName(this,"body")||k(this).replaceWith(this.childNodes)}).end()}}),k.expr.filters.hidden=function(e){return!k.expr.filters.visible(e)},k.expr.filters.visible=function(e){return 0<e.offsetWidth||0<e.offsetHeight||0<e.getClientRects().length};var St=/%20/g,Et=/\[\]$/,It=/\r?\n/g,Nt=/^(?:submit|button|image|reset|file)$/i,Dt=/^(?:input|select|textarea|keygen)/i;k.param=function(e,t){function n(e,t){t=k.isFunction(t)?t():null==t?"":t,o[o.length]=encodeURIComponent(e)+"="+encodeURIComponent(t)}var i,o=[];if(void 0===t&&(t=k.ajaxSettings&&k.ajaxSettings.traditional),k.isArray(e)||e.jquery&&!k.isPlainObject(e))k.each(e,function(){n(this.name,this.value)});else for(i in e)!function n(i,e,o,s){if(k.isArray(e))k.each(e,function(e,t){o||Et.test(i)?s(i,t):n(i+"["+("object"==typeof t&&null!=t?e:"")+"]",t,o,s)});else if(o||"object"!==k.type(e))s(i,e);else for(var t in e)n(i+"["+t+"]",e[t],o,s)}(i,e[i],t,n);return o.join("&").replace(St,"+")},k.fn.extend({serialize:function(){return k.param(this.serializeArray())},serializeArray:function(){return this.map(function(){var e=k.prop(this,"elements");return e?k.makeArray(e):this}).filter(function(){var e=this.type;return this.name&&!k(this).is(":disabled")&&Dt.test(this.nodeName)&&!Nt.test(e)&&(this.checked||!le.test(e))}).map(function(e,t){var n=k(this).val();return null==n?null:k.isArray(n)?k.map(n,function(e){return{name:t.name,value:e.replace(It,"\r\n")}}):{name:t.name,value:n.replace(It,"\r\n")}}).get()}}),k.ajaxSettings.xhr=function(){try{return new x.XMLHttpRequest}catch(e){}};var At={0:200,1223:204},H=k.ajaxSettings.xhr(),Ot=(m.cors=!!H&&"withCredentials"in H,m.ajax=H=!!H,k.ajaxTransport(function(o){var s,r;if(m.cors||H&&!o.crossDomain)return{send:function(e,t){var n,i=o.xhr();if(i.open(o.type,o.url,o.async,o.username,o.password),o.xhrFields)for(n in o.xhrFields)i[n]=o.xhrFields[n];for(n in o.mimeType&&i.overrideMimeType&&i.overrideMimeType(o.mimeType),o.crossDomain||e["X-Requested-With"]||(e["X-Requested-With"]="XMLHttpRequest"),e)i.setRequestHeader(n,e[n]);s=function(e){return function(){s&&(s=r=i.onload=i.onerror=i.onabort=i.onreadystatechange=null,"abort"===e?i.abort():"error"===e?"number"!=typeof i.status?t(0,"error"):t(i.status,i.statusText):t(At[i.status]||i.status,i.statusText,"text"!==(i.responseType||"text")||"string"!=typeof i.responseText?{binary:i.response}:{text:i.responseText},i.getAllResponseHeaders()))}},i.onload=s(),r=i.onerror=s("error"),void 0!==i.onabort?i.onabort=r:i.onreadystatechange=function(){4===i.readyState&&x.setTimeout(function(){s&&r()})},s=s("abort");try{i.send(o.hasContent&&o.data||null)}catch(e){if(s)throw e}},abort:function(){s&&s()}}}),k.ajaxSetup({accepts:{script:"text/javascript, application/javascript, application/ecmascript, application/x-ecmascript"},contents:{script:/\b(?:java|ecma)script\b/},converters:{"text script":function(e){return k.globalEval(e),e}}}),k.ajaxPrefilter("script",function(e){void 0===e.cache&&(e.cache=!1),e.crossDomain&&(e.type="GET")}),k.ajaxTransport("script",function(n){var i,o;if(n.crossDomain)return{send:function(e,t){i=k("<script>").prop({charset:n.scriptCharset,src:n.url}).on("load error",o=function(e){i.remove(),o=null,e&&t("error"===e.type?404:200,e.type)}),T.head.appendChild(i[0])},abort:function(){o&&o()}}}),[]),jt=/(=)\?(?=&|$)|\?\?/,Lt=(k.ajaxSetup({jsonp:"callback",jsonpCallback:function(){var e=Ot.pop()||k.expando+"_"+pt++;return this[e]=!0,e}}),k.ajaxPrefilter("json jsonp",function(e,t,n){var i,o,s,r=!1!==e.jsonp&&(jt.test(e.url)?"url":"string"==typeof e.data&&0===(e.contentType||"").indexOf("application/x-www-form-urlencoded")&&jt.test(e.data)&&"data");if(r||"jsonp"===e.dataTypes[0])return i=e.jsonpCallback=k.isFunction(e.jsonpCallback)?e.jsonpCallback():e.jsonpCallback,r?e[r]=e[r].replace(jt,"$1"+i):!1!==e.jsonp&&(e.url+=(ht.test(e.url)?"&":"?")+e.jsonp+"="+i),e.converters["script json"]=function(){return s||k.error(i+" was not called"),s[0]},e.dataTypes[0]="json",o=x[i],x[i]=function(){s=arguments},n.always(function(){void 0===o?k(x).removeProp(i):x[i]=o,e[i]&&(e.jsonpCallback=t.jsonpCallback,Ot.push(i)),s&&k.isFunction(o)&&o(s[0]),s=o=void 0}),"script"}),k.parseHTML=function(e,t,n){if(!e||"string"!=typeof e)return null;"boolean"==typeof t&&(n=t,t=!1),t=t||T;var i=X.exec(e),n=!n&&[];return i?[t.createElement(i[1])]:(i=he([e],t,n),n&&n.length&&k(n).remove(),k.merge([],i.childNodes))},k.fn.load);function Ht(e){return k.isWindow(e)?e:9===e.nodeType&&e.defaultView}k.fn.load=function(e,t,n){if("string"!=typeof e&&Lt)return Lt.apply(this,arguments);var i,o,s,r=this,a=e.indexOf(" ");return-1<a&&(i=k.trim(e.slice(a)),e=e.slice(0,a)),k.isFunction(t)?(n=t,t=void 0):t&&"object"==typeof t&&(o="POST"),0<r.length&&k.ajax({url:e,type:o||"GET",dataType:"html",data:t}).done(function(e){s=arguments,r.html(i?k("<div>").append(k.parseHTML(e)).find(i):e)}).always(n&&function(e,t){r.each(function(){n.apply(this,s||[e.responseText,t,e])})}),this},k.each(["ajaxStart","ajaxStop","ajaxComplete","ajaxError","ajaxSuccess","ajaxSend"],function(e,t){k.fn[t]=function(e){return this.on(t,e)}}),k.expr.filters.animated=function(t){return k.grep(k.timers,function(e){return t===e.elem}).length},k.offset={setOffset:function(e,t,n){var i,o,s,r,a=k.css(e,"position"),l=k(e),c={};"static"===a&&(e.style.position="relative"),s=l.offset(),i=k.css(e,"top"),r=k.css(e,"left"),a=("absolute"===a||"fixed"===a)&&-1<(i+r).indexOf("auto")?(o=(a=l.position()).top,a.left):(o=parseFloat(i)||0,parseFloat(r)||0),null!=(t=k.isFunction(t)?t.call(e,n,k.extend({},s)):t).top&&(c.top=t.top-s.top+o),null!=t.left&&(c.left=t.left-s.left+a),"using"in t?t.using.call(e,c):l.css(c)}},k.fn.extend({offset:function(t){if(arguments.length)return void 0===t?this:this.each(function(e){k.offset.setOffset(this,t,e)});var e,n=this[0],i={top:0,left:0},o=n&&n.ownerDocument;return o?(e=o.documentElement,k.contains(e,n)?(i=n.getBoundingClientRect(),n=Ht(o),{top:i.top+n.pageYOffset-e.clientTop,left:i.left+n.pageXOffset-e.clientLeft}):i):void 0},position:function(){var e,t,n,i;if(this[0])return n=this[0],i={top:0,left:0},"fixed"===k.css(n,"position")?t=n.getBoundingClientRect():(e=this.offsetParent(),t=this.offset(),(i=k.nodeName(e[0],"html")?i:e.offset()).top+=k.css(e[0],"borderTopWidth",!0),i.left+=k.css(e[0],"borderLeftWidth",!0)),{top:t.top-i.top-k.css(n,"marginTop",!0),left:t.left-i.left-k.css(n,"marginLeft",!0)}},offsetParent:function(){return this.map(function(){for(var e=this.offsetParent;e&&"static"===k.css(e,"position");)e=e.offsetParent;return e||h})}}),k.each({scrollLeft:"pageXOffset",scrollTop:"pageYOffset"},function(t,o){var s="pageYOffset"===o;k.fn[t]=function(e){return d(this,function(e,t,n){var i=Ht(e);if(void 0===n)return i?i[o]:e[t];i?i.scrollTo(s?i.pageXOffset:n,s?n:i.pageYOffset):e[t]=n},t,e,arguments.length)}}),k.each(["top","left"],function(e,n){k.cssHooks[n]=qe(m.pixelPosition,function(e,t){if(t)return t=S(e,n),Me.test(t)?k(e).position()[n]+"px":t})}),k.each({Height:"height",Width:"width"},function(s,r){k.each({padding:"inner"+s,content:r,"":"outer"+s},function(i,e){k.fn[e]=function(e,t){var n=arguments.length&&(i||"boolean"!=typeof e),o=i||(!0===e||!0===t?"margin":"border");return d(this,function(e,t,n){var i;return k.isWindow(e)?e.document.documentElement["client"+s]:9===e.nodeType?(i=e.documentElement,Math.max(e.body["scroll"+s],i["scroll"+s],e.body["offset"+s],i["offset"+s],i["client"+s])):void 0===n?k.css(e,t,o):k.style(e,t,n,o)},r,n?e:void 0,n,null)}})}),k.fn.extend({bind:function(e,t,n){return this.on(e,null,t,n)},unbind:function(e,t){return this.off(e,null,t)},delegate:function(e,t,n,i){return this.on(t,e,n,i)},undelegate:function(e,t,n){return 1===arguments.length?this.off(e,"**"):this.off(t,e||"**",n)},size:function(){return this.length}}),k.fn.andSelf=k.fn.addBack,"function"==typeof define&&define.amd&&define("jquery",[],function(){return k});var Rt=x.jQuery,zt=x.$;return k.noConflict=function(e){return x.$===k&&(x.$=zt),e&&x.jQuery===k&&(x.jQuery=Rt),k},R||(x.jQuery=x.$=k),k},"object"==typeof t&&"object"==typeof t.exports?t.exports=i.document?o(i,!0):function(e){if(e.document)return o(e);throw new Error("jQuery requires a window with a document")}:o(i)},{}]},{},[1]);
//# sourceMappingURL=data:application/json;charset=utf8;base64,
